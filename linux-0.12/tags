!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$0	boot/head.s	/^	cmpb $0,%al$/;"	v	language:C++
$0	kernel/chr_drv/keyboard.S	/^	movb $0,e0$/;"	v	language:C++
$0	kernel/chr_drv/keyboard.S	/^	movl $0,(%ecx)$/;"	v	language:C++
$0	kernel/chr_drv/keyboard.S	/^1:	cmpb $0,e0$/;"	v	language:C++
$0	kernel/chr_drv/rs_io.s	/^	movl $0,(%ebx)$/;"	v	language:C++
$0	kernel/sys_call.s	/^	cmpl $0,counter(%eax)		# counter$/;"	v	language:C++
$0	kernel/sys_call.s	/^	cmpl $0,state(%eax)		# state$/;"	v	language:C++
$0x00080000	boot/head.s	/^	movl $0x00080000,%eax$/;"	v	language:C++
$0x01	kernel/chr_drv/keyboard.S	/^	orb $0x01,mode$/;"	v	language:C++
$0x01	kernel/chr_drv/keyboard.S	/^cur2:	cmpb $0x01,e0		\/* e0 forces cursor movement *\/$/;"	v	language:C++
$0x02	kernel/chr_drv/keyboard.S	/^	orb $0x02,mode$/;"	v	language:C++
$0x02	kernel/chr_drv/keyboard.S	/^	testb $0x02,%al$/;"	v	language:C++
$0x02	kernel/chr_drv/keyboard.S	/^	testb $0x02,leds	\/* not num-lock forces cursor *\/$/;"	v	language:C++
$0x03	kernel/chr_drv/keyboard.S	/^	testb $0x03,mode	\/* shift forces cursor *\/$/;"	v	language:C++
$0x03	kernel/chr_drv/keyboard.S	/^	testb $0x03,mode$/;"	v	language:C++
$0x04	kernel/chr_drv/keyboard.S	/^ctrl:	movb $0x04,%al$/;"	v	language:C++
$0x04	kernel/chr_drv/keyboard.S	/^unctrl:	movb $0x04,%al$/;"	v	language:C++
$0x0c	kernel/chr_drv/keyboard.S	/^	testb $0x0c,mode$/;"	v	language:C++
$0x0c	kernel/chr_drv/keyboard.S	/^2:	testb $0x0c,mode		\/* ctrl *\/$/;"	v	language:C++
$0x0f	kernel/sys_call.s	/^	cmpw $0x0f,CS(%esp)		# was old code segment supervisor ?$/;"	v	language:C++
$0x10	boot/head.s	/^	movl $0x10,%eax		# reload all the segment registers$/;"	v	language:C++
$0x10	boot/head.s	/^	movl $0x10,%eax$/;"	v	language:C++
$0x10	kernel/asm.s	/^	movl $0x10,%eax$/;"	v	language:C++
$0x10	kernel/asm.s	/^	movl $0x10,%edx$/;"	v	language:C++
$0x10	kernel/chr_drv/keyboard.S	/^	testb $0x10,mode$/;"	v	language:C++
$0x10	kernel/chr_drv/keyboard.S	/^3:	testb $0x10,mode		\/* left alt *\/$/;"	v	language:C++
$0x10	kernel/chr_drv/keyboard.S	/^alt:	movb $0x10,%al$/;"	v	language:C++
$0x10	kernel/chr_drv/keyboard.S	/^unalt:	movb $0x10,%al$/;"	v	language:C++
$0x10	kernel/sys_call.s	/^	movl $0x10,%eax$/;"	v	language:C++
$0x10	kernel/sys_call.s	/^	movl $0x10,%edx		# set up ds,es to kernel space$/;"	v	language:C++
$0x10	mm/page.s	/^	movl $0x10,%edx$/;"	v	language:C++
$0x1000	boot/head.s	/^	subl $0x1000,%eax$/;"	v	language:C++
$0x1234	kernel/chr_drv/keyboard.S	/^	movw $0x1234,0x472	\/* don't do memory check *\/$/;"	v	language:C++
$0x17	init/main.s	/^1:	movl $0x17,%eax$/;"	v	language:C++
$0x17	kernel/sys_call.s	/^	cmpw $0x17,OLDSS(%esp)		# was stack segment = 0x17 ?$/;"	v	language:C++
$0x17	kernel/sys_call.s	/^	movl $0x17,%eax$/;"	v	language:C++
$0x17	kernel/sys_call.s	/^	movl $0x17,%edx		# fs points to local data space$/;"	v	language:C++
$0x20	kernel/asm.s	/^	movb $0x20,%al$/;"	v	language:C++
$0x20	kernel/chr_drv/keyboard.S	/^	movb $0x20,%al$/;"	v	language:C++
$0x20	kernel/chr_drv/keyboard.S	/^	testb $0x20,mode		\/* alt-gr *\/$/;"	v	language:C++
$0x20	kernel/chr_drv/rs_io.s	/^end:	movb $0x20,%al$/;"	v	language:C++
$0x20	kernel/sys_call.s	/^	movb $0x20,%al		# EOI to interrupt controller #1$/;"	v	language:C++
$0x20	kernel/sys_call.s	/^	movb $0x20,%al$/;"	v	language:C++
$0x30	kernel/chr_drv/keyboard.S	/^	testb $0x30,mode$/;"	v	language:C++
$0x4	kernel/sys_call.s	/^	testl $0x4,%eax			# EM (math emulation bit)$/;"	v	language:C++
$0x40	kernel/chr_drv/keyboard.S	/^	xorb $0x40,mode$/;"	v	language:C++
$0x47	kernel/chr_drv/keyboard.S	/^	subb $0x47,%al$/;"	v	language:C++
$0x4c	kernel/chr_drv/keyboard.S	/^	testb $0x4c,mode		\/* ctrl or caps *\/$/;"	v	language:C++
$0x5b1b	kernel/chr_drv/keyboard.S	/^	movw $0x5b1b,%ax$/;"	v	language:C++
$0x60	kernel/chr_drv/keyboard.S	/^	inb $0x60,%al$/;"	v	language:C++
$0x61	kernel/chr_drv/keyboard.S	/^e0_e1:	inb $0x61,%al$/;"	v	language:C++
$0x64	kernel/chr_drv/keyboard.S	/^1:	inb $0x64,%al$/;"	v	language:C++
$0x7F	kernel/chr_drv/keyboard.S	/^1:	andb $0x7F,%al$/;"	v	language:C++
$0x7f	kernel/chr_drv/keyboard.S	/^uncaps:	andb $0x7f,mode$/;"	v	language:C++
$0x80	kernel/chr_drv/keyboard.S	/^	orb $0x80,%al$/;"	v	language:C++
$0x80	kernel/chr_drv/keyboard.S	/^	orb $0x80,mode$/;"	v	language:C++
$0x80	kernel/chr_drv/keyboard.S	/^1:	orb $0x80,%al$/;"	v	language:C++
$0x80	kernel/chr_drv/keyboard.S	/^caps:	testb $0x80,mode$/;"	v	language:C++
$0x80000000	boot/head.s	/^	orl $0x80000000,%eax$/;"	v	language:C++
$0x80000011	boot/head.s	/^	andl $0x80000011,%eax	# Save PG,PE,ET$/;"	v	language:C++
$0x8E00	boot/head.s	/^	movw $0x8E00,%dx	\/* interrupt gate - dpl=0, present *\/$/;"	v	language:C++
$0xd	kernel/chr_drv/rs_io.s	/^1:	andb $0xd,%al		\/* disable transmit interrupt *\/$/;"	v	language:C++
$0xe0	kernel/chr_drv/keyboard.S	/^	cmpb $0xe0,%al$/;"	v	language:C++
$0xe1	kernel/chr_drv/keyboard.S	/^	cmpb $0xe1,%al$/;"	v	language:C++
$0xed	kernel/chr_drv/keyboard.S	/^	movb $0xed,%al		\/* set leds command *\/$/;"	v	language:C++
$0xfc	kernel/chr_drv/keyboard.S	/^	movb $0xfc,%al		\/* pulse reset and A20 low *\/$/;"	v	language:C++
$0xfd	kernel/chr_drv/keyboard.S	/^	andb $0xfd,mode$/;"	v	language:C++
$0xfe	kernel/chr_drv/keyboard.S	/^	andb $0xfe,mode$/;"	v	language:C++
$0xff	kernel/chr_drv/keyboard.S	/^4:	andl $0xff,%eax$/;"	v	language:C++
$0xfff007	boot/head.s	/^	movl $0xfff007,%eax		\/*  16Mb - 4096 + 7 (r\/w user,p) *\/$/;"	v	language:C++
$1	kernel/chr_drv/keyboard.S	/^2:	xorb $1,leds$/;"	v	language:C++
$1	kernel/chr_drv/keyboard.S	/^minus:	cmpb $1,e0$/;"	v	language:C++
$1	kernel/chr_drv/keyboard.S	/^set_e0:	movb $1,e0$/;"	v	language:C++
$1	kernel/chr_drv/rs_io.s	/^	testb $1,%al$/;"	v	language:C++
$1	mm/page.s	/^	testl $1,%eax$/;"	v	language:C++
$10	init/main.s	/^	sall $10,%eax$/;"	v	language:C++
$10	kernel/chr_drv/keyboard.S	/^	cmpb $10,%al$/;"	v	language:C++
$1048576	init/main.s	/^	addl $1048576,%eax$/;"	v	language:C++
$11	kernel/chr_drv/keyboard.S	/^	cmpb $11,%al$/;"	v	language:C++
$112	init/main.s	/^	movl $112,%edx$/;"	v	language:C++
$113	init/main.s	/^	movl $113,%edx$/;"	v	language:C++
$12	init/main.s	/^	addl $12,%esp$/;"	v	language:C++
$12	kernel/chr_drv/keyboard.S	/^	cmpb $12,%al$/;"	v	language:C++
$12582912	init/main.s	/^	cmpl $12582912,_memory_end$/;"	v	language:C++
$128	init/main.s	/^	movl $128,%eax$/;"	v	language:C++
$15	init/main.s	/^	andl $15,%eax$/;"	v	language:C++
$16	init/main.s	/^	addl $16,%esp$/;"	v	language:C++
$16	kernel/chr_drv/keyboard.S	/^ok_cur:	shll $16,%eax$/;"	v	language:C++
$16777216	init/main.s	/^	cmpl $16777216,_memory_end$/;"	v	language:C++
$16777216	init/main.s	/^	movl $16777216,_memory_end$/;"	v	language:C++
$18	kernel/chr_drv/keyboard.S	/^	subb $18,%al$/;"	v	language:C++
$2	boot/head.s	/^	orl $2,%eax		# set MP$/;"	v	language:C++
$2	init/main.s	/^	movl $2,%eax$/;"	v	language:C++
$2	kernel/chr_drv/keyboard.S	/^num:	xorb $2,leds$/;"	v	language:C++
$2	kernel/chr_drv/keyboard.S	/^set_e1:	movb $2,e0$/;"	v	language:C++
$2	kernel/chr_drv/rs_io.s	/^	addl $2,%edx		\/* interrupt ident. reg *\/$/;"	v	language:C++
$2	kernel/chr_drv/rs_io.s	/^	subl $2,%edx$/;"	v	language:C++
$20	kernel/sys_call.s	/^	addl $20,%esp$/;"	v	language:C++
$2097152	init/main.s	/^	movl $2097152,_buffer_memory_end$/;"	v	language:C++
$24	init/main.s	/^	addl $24,%esp$/;"	v	language:C++
$255	init/main.s	/^	andl $255,%edx$/;"	v	language:C++
$256	boot/head.s	/^	mov $256,%ecx$/;"	v	language:C++
$29	init/main.s	/^	movl $29,%eax$/;"	v	language:C++
$3	kernel/chr_drv/rs_io.s	/^	shrl $3,%edx$/;"	v	language:C++
$3	kernel/sys_call.s	/^	andl $3,%eax		# %eax is CPL (0 or 3, 0=supervisor)$/;"	v	language:C++
$32	init/main.s	/^	addl $32,%esp$/;"	v	language:C++
$32	kernel/chr_drv/keyboard.S	/^	subb $32,%al$/;"	v	language:C++
$36	init/main.s	/^	movl $36,%eax$/;"	v	language:C++
$4	init/main.s	/^	addl $4,%esp$/;"	v	language:C++
$4	init/main.s	/^	sarl $4,%edx$/;"	v	language:C++
$4	init/main.s	/^	subl $4,%esp$/;"	v	language:C++
$4	kernel/chr_drv/keyboard.S	/^	addl $4,%esp$/;"	v	language:C++
$4	kernel/chr_drv/keyboard.S	/^	cmpl $4,%ecx		\/* check that there is enough room *\/$/;"	v	language:C++
$4	kernel/chr_drv/keyboard.S	/^	xorb $4,leds$/;"	v	language:C++
$4	kernel/chr_drv/rs_io.s	/^	addl $4,%esp		# jump over _table_list entry$/;"	v	language:C++
$4	kernel/chr_drv/rs_io.s	/^	addl $4,%esp$/;"	v	language:C++
$4	kernel/sys_call.s	/^	addl $4, %esp	# skip orig_eax$/;"	v	language:C++
$4	kernel/sys_call.s	/^	addl $4,%esp		# task switching to accounting ...$/;"	v	language:C++
$4	kernel/sys_call.s	/^	addl $4,%esp$/;"	v	language:C++
$4194304	init/main.s	/^	movl $4194304,_buffer_memory_end$/;"	v	language:C++
$44	init/main.s	/^	subl $44,%esp$/;"	v	language:C++
$589952	init/main.s	/^	movl $589952,%esi$/;"	v	language:C++
$6	boot/head.s	/^	xorl $6,%eax		\/* reset MP, set EM *\/$/;"	v	language:C++
$6	kernel/chr_drv/rs_io.s	/^	cmpb $6,%al		\/* this shouldn't happen, but ... *\/$/;"	v	language:C++
$63	kernel/chr_drv/rs_io.s	/^1:	addl $63,%edx$/;"	v	language:C++
$64	kernel/chr_drv/keyboard.S	/^	cmpb $64+32,%al$/;"	v	language:C++
$64	kernel/chr_drv/keyboard.S	/^	cmpb $64,%al$/;"	v	language:C++
$64	kernel/chr_drv/keyboard.S	/^	subb $64,%al$/;"	v	language:C++
$65280	init/main.s	/^	andw $65280,%ax$/;"	v	language:C++
$8	boot/head.s	/^	addl $8,%edi$/;"	v	language:C++
$8	init/main.s	/^	addl $8,%esp$/;"	v	language:C++
$8	init/main.s	/^	movl $8,%ecx$/;"	v	language:C++
$8	init/main.s	/^	shrw $8,%ax$/;"	v	language:C++
$8	init/main.s	/^	subl $8,%esp$/;"	v	language:C++
$8	kernel/asm.s	/^	addl $8,%esp$/;"	v	language:C++
$8	kernel/chr_drv/keyboard.S	/^	shrl $8,%ebx$/;"	v	language:C++
$8	mm/page.s	/^2:	addl $8,%esp$/;"	v	language:C++
$9	kernel/chr_drv/keyboard.S	/^	cmpb $9,%al$/;"	v	language:C++
$_drive_info	init/main.s	/^	movl $_drive_info,%ebx$/;"	v	language:C++
$_drive_info	init/main.s	/^	movl $_drive_info,%edi$/;"	v	language:C++
$_table_list	kernel/chr_drv/rs_io.s	/^	subl $_table_list,%edx$/;"	v	language:C++
$_term	init/main.s	/^	movl $_term,_envp+4$/;"	v	language:C++
$_term	init/main.s	/^	movl $_term,_envp_rc+4$/;"	v	language:C++
$_unexpected_floppy_interrupt	kernel/sys_call.s	/^	movl $_unexpected_floppy_interrupt,%eax$/;"	v	language:C++
$_unexpected_hd_interrupt	kernel/sys_call.s	/^	movl $_unexpected_hd_interrupt,%edx$/;"	v	language:C++
$pg0	boot/head.s	/^	movl $pg0+7,_pg_dir		\/* set present bit\/user r\/w *\/$/;"	v	language:C++
$pg1	boot/head.s	/^	movl $pg1+7,_pg_dir+4		\/*  --------- " " --------- *\/$/;"	v	language:C++
$pg2	boot/head.s	/^	movl $pg2+7,_pg_dir+8		\/*  --------- " " --------- *\/$/;"	v	language:C++
$pg3	boot/head.s	/^	movl $pg3+4092,%edi$/;"	v	language:C++
$pg3	boot/head.s	/^	movl $pg3+7,_pg_dir+12		\/*  --------- " " --------- *\/$/;"	v	language:C++
$startup	kernel/chr_drv/rs_io.s	/^	cmpl $startup,%ebx$/;"	v	language:C++
ABRT_ERR	include/linux/hdreg.h	47;"	d	language:C++
ACC_MODE	fs/namei.c	24;"	d	language:C++	file:
ADD64	kernel/math/get_put.c	106;"	d	language:C++	file:
ALRMMASK	kernel/chr_drv/tty_io.c	19;"	d	language:C++	file:
B0	include/termios.h	136;"	d	language:C++
B110	include/termios.h	139;"	d	language:C++
B1200	include/termios.h	145;"	d	language:C++
B134	include/termios.h	140;"	d	language:C++
B150	include/termios.h	141;"	d	language:C++
B1800	include/termios.h	146;"	d	language:C++
B19200	include/termios.h	150;"	d	language:C++
B200	include/termios.h	142;"	d	language:C++
B2400	include/termios.h	147;"	d	language:C++
B300	include/termios.h	143;"	d	language:C++
B38400	include/termios.h	151;"	d	language:C++
B4800	include/termios.h	148;"	d	language:C++
B50	include/termios.h	137;"	d	language:C++
B600	include/termios.h	144;"	d	language:C++
B75	include/termios.h	138;"	d	language:C++
B9600	include/termios.h	149;"	d	language:C++
BADNESS	fs/buffer.c	205;"	d	language:C++	file:
BBD_ERR	include/linux/hdreg.h	50;"	d	language:C++
BCD_TO_BIN	init/main.c	90;"	d	language:C++	file:
BITS24	include/linux/math_emu.h	108;"	d	language:C++
BITS53	include/linux/math_emu.h	109;"	d	language:C++
BITS64	include/linux/math_emu.h	110;"	d	language:C++
BLOCK_SIZE	include/linux/fs.h	49;"	d	language:C++
BLOCK_SIZE_BITS	include/linux/fs.h	50;"	d	language:C++
BRKINT	include/termios.h	87;"	d	language:C++
BS0	include/termios.h	125;"	d	language:C++
BS1	include/termios.h	126;"	d	language:C++
BSDLY	include/termios.h	124;"	d	language:C++
BUFFER_END	include/const.h	4;"	d	language:C++
BUSY_STAT	include/linux/hdreg.h	31;"	d	language:C++
CBAUD	include/termios.h	135;"	d	language:C++
CHARS	include/linux/tty.h	43;"	d	language:C++
CIBAUD	include/termios.h	165;"	d	language:C++
CLEAR_DEVICE_INTR	kernel/blk_drv/blk.h	143;"	d	language:C++
CLEAR_DEVICE_INTR	kernel/blk_drv/blk.h	145;"	d	language:C++
CLEAR_DEVICE_TIMEOUT	kernel/blk_drv/blk.h	137;"	d	language:C++
CLEAR_DEVICE_TIMEOUT	kernel/blk_drv/blk.h	139;"	d	language:C++
CLOCAL	include/termios.h	164;"	d	language:C++
CLOCKS_PER_SEC	include/time.h	18;"	d	language:C++
CMOS_READ	init/main.c	85;"	d	language:C++	file:
CMOS_READ	kernel/blk_drv/hd.c	28;"	d	language:C++	file:
CODE_SPACE	mm/memory.c	39;"	d	language:C++	file:
CONST1	include/linux/math_emu.h	118;"	d	language:C++
CONSTL2E	include/linux/math_emu.h	122;"	d	language:C++
CONSTL2T	include/linux/math_emu.h	123;"	d	language:C++
CONSTLG2	include/linux/math_emu.h	121;"	d	language:C++
CONSTLN2	include/linux/math_emu.h	120;"	d	language:C++
CONSTPI	include/linux/math_emu.h	119;"	d	language:C++
CONSTZ	include/linux/math_emu.h	117;"	d	language:C++
CON_COLS	init/main.c	73;"	d	language:C++	file:
CON_ROWS	init/main.c	72;"	d	language:C++	file:
COPYBLK	fs/buffer.c	283;"	d	language:C++	file:
CR0	include/termios.h	114;"	d	language:C++
CR1	include/termios.h	115;"	d	language:C++
CR2	include/termios.h	116;"	d	language:C++
CR3	include/termios.h	117;"	d	language:C++
CRDLY	include/termios.h	113;"	d	language:C++
CREAD	include/termios.h	160;"	d	language:C++
CRTSCTS	include/termios.h	166;"	d	language:C++
CS	include/linux/math_emu.h	47;"	d	language:C++
CS5	include/termios.h	155;"	d	language:C++
CS6	include/termios.h	156;"	d	language:C++
CS7	include/termios.h	157;"	d	language:C++
CS8	include/termios.h	158;"	d	language:C++
CSIZE	include/termios.h	154;"	d	language:C++
CSTOPB	include/termios.h	159;"	d	language:C++
CT_TO_SECS	include/linux/sched.h	28;"	d	language:C++
CT_TO_USECS	include/linux/sched.h	29;"	d	language:C++
CURRENT	kernel/blk_drv/blk.h	96;"	d	language:C++
CURRENT_DEV	kernel/blk_drv/blk.h	97;"	d	language:C++
CURRENT_TIME	include/linux/sched.h	192;"	d	language:C++
C_HUP	kernel/chr_drv/tty_io.c	55;"	d	language:C++	file:
C_SPEED	kernel/chr_drv/tty_io.c	54;"	d	language:C++	file:
DAY	kernel/mktime.c	22;"	d	language:C++	file:
DEBUG_PROC_TREE	kernel/exit.c	7;"	d	language:C++	file:
DEC	include/linux/tty.h	38;"	d	language:C++
DEFAULT_MAJOR_ROOT	tools/build.c	39;"	d	language:C++	file:
DEFAULT_MAJOR_SWAP	tools/build.c	42;"	d	language:C++	file:
DEFAULT_MINOR_ROOT	tools/build.c	40;"	d	language:C++	file:
DEFAULT_MINOR_SWAP	tools/build.c	43;"	d	language:C++	file:
DEF_INITSEG	include/linux/config.h	14;"	d	language:C++
DEF_SETUPSEG	include/linux/config.h	16;"	d	language:C++
DEF_SYSSEG	include/linux/config.h	15;"	d	language:C++
DEF_SYSSIZE	include/linux/config.h	17;"	d	language:C++
DEF_TERMIOS	kernel/chr_drv/console.c	45;"	d	language:C++	file:
DEVICE_INTR	kernel/blk_drv/blk.h	/^void (*DEVICE_INTR)(void) = NULL;$/;"	v	language:C++
DEVICE_INTR	kernel/blk_drv/blk.h	74;"	d	language:C++
DEVICE_INTR	kernel/blk_drv/blk.h	83;"	d	language:C++
DEVICE_NAME	kernel/blk_drv/blk.h	65;"	d	language:C++
DEVICE_NAME	kernel/blk_drv/blk.h	73;"	d	language:C++
DEVICE_NAME	kernel/blk_drv/blk.h	82;"	d	language:C++
DEVICE_NR	kernel/blk_drv/blk.h	67;"	d	language:C++
DEVICE_NR	kernel/blk_drv/blk.h	76;"	d	language:C++
DEVICE_NR	kernel/blk_drv/blk.h	86;"	d	language:C++
DEVICE_OFF	kernel/blk_drv/blk.h	69;"	d	language:C++
DEVICE_OFF	kernel/blk_drv/blk.h	78;"	d	language:C++
DEVICE_OFF	kernel/blk_drv/blk.h	88;"	d	language:C++
DEVICE_ON	kernel/blk_drv/blk.h	68;"	d	language:C++
DEVICE_ON	kernel/blk_drv/blk.h	77;"	d	language:C++
DEVICE_ON	kernel/blk_drv/blk.h	87;"	d	language:C++
DEVICE_REQUEST	kernel/blk_drv/blk.h	/^static void (DEVICE_REQUEST)(void);$/;"	p	language:C++	signature:(void)
DEVICE_REQUEST	kernel/blk_drv/blk.h	66;"	d	language:C++
DEVICE_REQUEST	kernel/blk_drv/blk.h	75;"	d	language:C++
DEVICE_REQUEST	kernel/blk_drv/blk.h	85;"	d	language:C++
DEVICE_TIMEOUT	kernel/blk_drv/blk.h	/^int DEVICE_TIMEOUT = 0;$/;"	v	language:C++
DEVICE_TIMEOUT	kernel/blk_drv/blk.h	84;"	d	language:C++
DIR_ENTRIES_PER_BLOCK	include/linux/fs.h	56;"	d	language:C++
DIV10	kernel/math/get_put.c	214;"	d	language:C++	file:
DMA_READ	include/linux/fdreg.h	68;"	d	language:C++
DMA_WRITE	include/linux/fdreg.h	69;"	d	language:C++
DRIVE	kernel/blk_drv/floppy.c	54;"	d	language:C++	file:
DRIVE_INFO	init/main.c	74;"	d	language:C++	file:
DRQ_STAT	include/linux/hdreg.h	27;"	d	language:C++
DS	include/linux/math_emu.h	44;"	d	language:C++
DST_AUST	include/sys/time.h	17;"	d	language:C++
DST_AUSTALT	include/sys/time.h	25;"	d	language:C++
DST_CAN	include/sys/time.h	21;"	d	language:C++
DST_EET	include/sys/time.h	20;"	d	language:C++
DST_GB	include/sys/time.h	22;"	d	language:C++
DST_MET	include/sys/time.h	19;"	d	language:C++
DST_NONE	include/sys/time.h	15;"	d	language:C++
DST_RUM	include/sys/time.h	23;"	d	language:C++
DST_TUR	include/sys/time.h	24;"	d	language:C++
DST_USA	include/sys/time.h	16;"	d	language:C++
DST_WET	include/sys/time.h	18;"	d	language:C++
E2BIG	include/errno.h	26;"	d	language:C++
EACCES	include/errno.h	32;"	d	language:C++
EAGAIN	include/errno.h	30;"	d	language:C++
EAX	include/linux/math_emu.h	33;"	d	language:C++
EBADF	include/errno.h	28;"	d	language:C++
EBP	include/linux/math_emu.h	39;"	d	language:C++
EBUSY	include/errno.h	35;"	d	language:C++
EBX	include/linux/math_emu.h	34;"	d	language:C++
ECC_ERR	include/linux/hdreg.h	49;"	d	language:C++
ECC_STAT	include/linux/hdreg.h	26;"	d	language:C++
ECHILD	include/errno.h	29;"	d	language:C++
ECHO	include/termios.h	172;"	d	language:C++
ECHOCTL	include/termios.h	178;"	d	language:C++
ECHOE	include/termios.h	173;"	d	language:C++
ECHOK	include/termios.h	174;"	d	language:C++
ECHOKE	include/termios.h	180;"	d	language:C++
ECHONL	include/termios.h	175;"	d	language:C++
ECHOPRT	include/termios.h	179;"	d	language:C++
ECX	include/linux/math_emu.h	35;"	d	language:C++
EDEADLK	include/errno.h	54;"	d	language:C++
EDI	include/linux/math_emu.h	38;"	d	language:C++
EDOM	include/errno.h	52;"	d	language:C++
EDX	include/linux/math_emu.h	36;"	d	language:C++
EEXIST	include/errno.h	36;"	d	language:C++
EFAULT	include/errno.h	33;"	d	language:C++
EFBIG	include/errno.h	46;"	d	language:C++
EFLAGS	include/linux/math_emu.h	43;"	d	language:C++
EINTR	include/errno.h	23;"	d	language:C++
EINVAL	include/errno.h	41;"	d	language:C++
EIO	include/errno.h	24;"	d	language:C++
EIP	include/linux/math_emu.h	41;"	d	language:C++
EISDIR	include/errno.h	40;"	d	language:C++
EMFILE	include/errno.h	43;"	d	language:C++
EMLINK	include/errno.h	50;"	d	language:C++
EMPTY	include/linux/tty.h	39;"	d	language:C++
ENAMETOOLONG	include/errno.h	55;"	d	language:C++
ENFILE	include/errno.h	42;"	d	language:C++
ENODEV	include/errno.h	38;"	d	language:C++
ENOENT	include/errno.h	21;"	d	language:C++
ENOEXEC	include/errno.h	27;"	d	language:C++
ENOLCK	include/errno.h	56;"	d	language:C++
ENOMEM	include/errno.h	31;"	d	language:C++
ENOSPC	include/errno.h	47;"	d	language:C++
ENOSYS	include/errno.h	57;"	d	language:C++
ENOTBLK	include/errno.h	34;"	d	language:C++
ENOTDIR	include/errno.h	39;"	d	language:C++
ENOTEMPTY	include/errno.h	58;"	d	language:C++
ENOTTY	include/errno.h	44;"	d	language:C++
ENXIO	include/errno.h	25;"	d	language:C++
EOF_CHAR	include/linux/tty.h	53;"	d	language:C++
EPERM	include/errno.h	20;"	d	language:C++
EPIPE	include/errno.h	51;"	d	language:C++
ERANGE	include/errno.h	53;"	d	language:C++
ERASE_CHAR	include/linux/tty.h	51;"	d	language:C++
ERESTARTNOINTR	include/errno.h	62;"	d	language:C++
ERESTARTSYS	include/errno.h	61;"	d	language:C++
EROFS	include/errno.h	49;"	d	language:C++
ERROR	include/errno.h	19;"	d	language:C++
ERR_STAT	include/linux/hdreg.h	24;"	d	language:C++
ES	include/linux/math_emu.h	45;"	d	language:C++
ESI	include/linux/math_emu.h	37;"	d	language:C++
ESP	include/linux/math_emu.h	40;"	d	language:C++
ESPIPE	include/errno.h	48;"	d	language:C++
ESRCH	include/errno.h	22;"	d	language:C++
ESesc	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ESfunckey	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ESgetpars	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ESgotpars	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ESnormal	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ESsetgraph	kernel/chr_drv/console.c	/^	ESsetterm, ESsetgraph };$/;"	e	language:C++	enum:__anon11	file:
ESsetterm	kernel/chr_drv/console.c	/^	ESsetterm, ESsetgraph };$/;"	e	language:C++	enum:__anon11	file:
ESsquare	kernel/chr_drv/console.c	/^enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey, $/;"	e	language:C++	enum:__anon11	file:
ETXTBSY	include/errno.h	45;"	d	language:C++
EXDEV	include/errno.h	37;"	d	language:C++
EXEC_PAGESIZE	include/sys/param.h	5;"	d	language:C++
EXTA	include/termios.h	152;"	d	language:C++
EXTB	include/termios.h	153;"	d	language:C++
EXT_MEM_K	init/main.c	71;"	d	language:C++	file:
FD_CLOEXEC	include/fcntl.h	33;"	d	language:C++
FD_CLR	include/sys/time.h	28;"	d	language:C++
FD_DATA	include/linux/fdreg.h	17;"	d	language:C++
FD_DCR	include/linux/fdreg.h	20;"	d	language:C++
FD_DIR	include/linux/fdreg.h	19;"	d	language:C++
FD_DOR	include/linux/fdreg.h	18;"	d	language:C++
FD_ISSET	include/sys/time.h	29;"	d	language:C++
FD_READ	include/linux/fdreg.h	62;"	d	language:C++
FD_RECALIBRATE	include/linux/fdreg.h	60;"	d	language:C++
FD_SEEK	include/linux/fdreg.h	61;"	d	language:C++
FD_SENSEI	include/linux/fdreg.h	64;"	d	language:C++
FD_SET	include/sys/time.h	27;"	d	language:C++
FD_SPECIFY	include/linux/fdreg.h	65;"	d	language:C++
FD_STATUS	include/linux/fdreg.h	16;"	d	language:C++
FD_WRITE	include/linux/fdreg.h	63;"	d	language:C++
FD_ZERO	include/sys/time.h	30;"	d	language:C++
FF0	include/termios.h	131;"	d	language:C++
FF1	include/termios.h	132;"	d	language:C++
FFDLY	include/termios.h	130;"	d	language:C++
FIONREAD	include/termios.h	36;"	d	language:C++
FIRST_LDT_ENTRY	include/linux/sched.h	205;"	d	language:C++
FIRST_TASK	include/linux/sched.h	31;"	d	language:C++
FIRST_TSS_ENTRY	include/linux/sched.h	204;"	d	language:C++
FIRST_VM_PAGE	mm/swap.c	42;"	d	language:C++	file:
FLUSHO	include/termios.h	181;"	d	language:C++
FS	include/linux/math_emu.h	46;"	d	language:C++
FULL	include/linux/tty.h	42;"	d	language:C++
F_DUPFD	include/fcntl.h	23;"	d	language:C++
F_GETFD	include/fcntl.h	24;"	d	language:C++
F_GETFL	include/fcntl.h	26;"	d	language:C++
F_GETLK	include/fcntl.h	28;"	d	language:C++
F_OK	include/unistd.h	22;"	d	language:C++
F_RDLCK	include/fcntl.h	38;"	d	language:C++
F_SETFD	include/fcntl.h	25;"	d	language:C++
F_SETFL	include/fcntl.h	27;"	d	language:C++
F_SETLK	include/fcntl.h	29;"	d	language:C++
F_SETLKW	include/fcntl.h	30;"	d	language:C++
F_UNLCK	include/fcntl.h	40;"	d	language:C++
F_WRLCK	include/fcntl.h	39;"	d	language:C++
GCC_HEADER	tools/build.c	35;"	d	language:C++	file:
GDT_CODE	include/linux/head.h	12;"	d	language:C++
GDT_DATA	include/linux/head.h	13;"	d	language:C++
GDT_NUL	include/linux/head.h	11;"	d	language:C++
GDT_TMP	include/linux/head.h	14;"	d	language:C++
GETCH	include/linux/tty.h	44;"	d	language:C++
GRAF_TRANS	kernel/chr_drv/console.c	162;"	d	language:C++	file:
HD_CMD	include/linux/hdreg.h	21;"	d	language:C++
HD_COMMAND	include/linux/hdreg.h	19;"	d	language:C++
HD_CURRENT	include/linux/hdreg.h	16;"	d	language:C++
HD_DATA	include/linux/hdreg.h	10;"	d	language:C++
HD_ERROR	include/linux/hdreg.h	11;"	d	language:C++
HD_HCYL	include/linux/hdreg.h	15;"	d	language:C++
HD_LCYL	include/linux/hdreg.h	14;"	d	language:C++
HD_NSECTOR	include/linux/hdreg.h	12;"	d	language:C++
HD_PRECOMP	include/linux/hdreg.h	18;"	d	language:C++
HD_SECTOR	include/linux/hdreg.h	13;"	d	language:C++
HD_STATUS	include/linux/hdreg.h	17;"	d	language:C++
HIGH_MEMORY	include/linux/mm.h	/^extern unsigned long HIGH_MEMORY;$/;"	x	language:C++
HIGH_MEMORY	mm/memory.c	/^unsigned long HIGH_MEMORY = 0;$/;"	v	language:C++
HOUR	kernel/mktime.c	21;"	d	language:C++	file:
HUPCL	include/termios.h	163;"	d	language:C++
HZ	include/linux/sched.h	4;"	d	language:C++
HZ	include/sys/param.h	4;"	d	language:C++
I387	include/linux/math_emu.h	103;"	d	language:C++
ICANON	include/termios.h	170;"	d	language:C++
ICRNL	include/termios.h	94;"	d	language:C++
ID_ERR	include/linux/hdreg.h	48;"	d	language:C++
IEXTEN	include/termios.h	183;"	d	language:C++
IGNBRK	include/termios.h	86;"	d	language:C++
IGNCR	include/termios.h	93;"	d	language:C++
IGNPAR	include/termios.h	88;"	d	language:C++
IMAXBEL	include/termios.h	99;"	d	language:C++
INC	include/linux/tty.h	37;"	d	language:C++
INDEX_STAT	include/linux/hdreg.h	25;"	d	language:C++
INIT_C_CC	include/linux/tty.h	81;"	d	language:C++
INIT_REQUEST	kernel/blk_drv/blk.h	148;"	d	language:C++
INIT_TASK	include/linux/sched.h	156;"	d	language:C++
INLCR	include/termios.h	92;"	d	language:C++
INODES_PER_BLOCK	include/linux/fs.h	55;"	d	language:C++
INPCK	include/termios.h	90;"	d	language:C++
INTR_CHAR	include/linux/tty.h	49;"	d	language:C++
IN_ORDER	kernel/blk_drv/blk.h	40;"	d	language:C++
ISIG	include/termios.h	169;"	d	language:C++
ISTRIP	include/termios.h	91;"	d	language:C++
IS_A_CONSOLE	include/linux/tty.h	30;"	d	language:C++
IS_A_PTY	include/linux/tty.h	32;"	d	language:C++
IS_A_PTY_MASTER	include/linux/tty.h	33;"	d	language:C++
IS_A_PTY_SLAVE	include/linux/tty.h	34;"	d	language:C++
IS_A_SERIAL	include/linux/tty.h	31;"	d	language:C++
IS_SEEKABLE	include/linux/fs.h	24;"	d	language:C++
ITIMER_PROF	include/sys/time.h	49;"	d	language:C++
ITIMER_REAL	include/sys/time.h	47;"	d	language:C++
ITIMER_VIRTUAL	include/sys/time.h	48;"	d	language:C++
IUCLC	include/termios.h	95;"	d	language:C++
IXANY	include/termios.h	97;"	d	language:C++
IXOFF	include/termios.h	98;"	d	language:C++
IXON	include/termios.h	96;"	d	language:C++
I_BLOCK_SPECIAL	include/const.h	9;"	d	language:C++
I_CHAR_SPECIAL	include/const.h	10;"	d	language:C++
I_CRNL	kernel/chr_drv/tty_io.c	44;"	d	language:C++	file:
I_DIRECTORY	include/const.h	7;"	d	language:C++
I_IXON	kernel/chr_drv/tty_io.c	46;"	d	language:C++	file:
I_MAP_SLOTS	include/linux/fs.h	39;"	d	language:C++
I_NAMED_PIPE	include/const.h	11;"	d	language:C++
I_NLCR	kernel/chr_drv/tty_io.c	43;"	d	language:C++	file:
I_NOCR	kernel/chr_drv/tty_io.c	45;"	d	language:C++	file:
I_REGULAR	include/const.h	8;"	d	language:C++
I_SET_GID_BIT	include/const.h	13;"	d	language:C++
I_SET_UID_BIT	include/const.h	12;"	d	language:C++
I_TYPE	include/const.h	6;"	d	language:C++
I_UCLC	kernel/chr_drv/tty_io.c	42;"	d	language:C++	file:
KBD_FINNISH	kernel/chr_drv/keyboard.S	18;"	d	language:C++	file:
KILL_CHAR	include/linux/tty.h	52;"	d	language:C++
LAST	include/linux/tty.h	41;"	d	language:C++
LAST_TASK	include/linux/sched.h	32;"	d	language:C++
LAST_VM_PAGE	mm/swap.c	43;"	d	language:C++	file:
LATCH	kernel/sched.c	55;"	d	language:C++	file:
LDT_CODE	include/linux/head.h	17;"	d	language:C++
LDT_DATA	include/linux/head.h	18;"	d	language:C++
LDT_NUL	include/linux/head.h	16;"	d	language:C++
LEFT	include/linux/tty.h	40;"	d	language:C++
LEFT	kernel/vsprintf.c	31;"	d	language:C++	file:
LIBRARY_OFFSET	include/linux/sched.h	26;"	d	language:C++
LIBRARY_SIZE	include/linux/sched.h	8;"	d	language:C++
LOW_MEM	include/linux/mm.h	30;"	d	language:C++
L_CANON	kernel/chr_drv/tty_io.c	33;"	d	language:C++	file:
L_ECHO	kernel/chr_drv/tty_io.c	35;"	d	language:C++	file:
L_ECHOCTL	kernel/chr_drv/tty_io.c	38;"	d	language:C++	file:
L_ECHOE	kernel/chr_drv/tty_io.c	36;"	d	language:C++	file:
L_ECHOK	kernel/chr_drv/tty_io.c	37;"	d	language:C++	file:
L_ECHOKE	kernel/chr_drv/tty_io.c	39;"	d	language:C++	file:
L_ISIG	kernel/chr_drv/tty_io.c	34;"	d	language:C++	file:
L_TOSTOP	kernel/chr_drv/tty_io.c	40;"	d	language:C++	file:
MAJOR	include/linux/fs.h	33;"	d	language:C++
MAJOR_NR	kernel/blk_drv/floppy.c	41;"	d	language:C++	file:
MAJOR_NR	kernel/blk_drv/hd.c	25;"	d	language:C++	file:
MAJOR_NR	kernel/blk_drv/ramdisk.c	17;"	d	language:C++	file:
MAP_NR	include/linux/mm.h	34;"	d	language:C++
MARK_ERR	include/linux/hdreg.h	45;"	d	language:C++
MAX	fs/file_dev.c	15;"	d	language:C++	file:
MAXHOSTNAMELEN	include/sys/param.h	10;"	d	language:C++
MAX_ARG_PAGES	fs/exec.c	40;"	d	language:C++	file:
MAX_CONSOLES	include/linux/tty.h	12;"	d	language:C++
MAX_ERRORS	kernel/blk_drv/floppy.c	60;"	d	language:C++	file:
MAX_ERRORS	kernel/blk_drv/hd.c	34;"	d	language:C++	file:
MAX_HD	kernel/blk_drv/hd.c	35;"	d	language:C++	file:
MAX_REPLIES	kernel/blk_drv/floppy.c	65;"	d	language:C++	file:
MAY_EXEC	fs/namei.c	32;"	d	language:C++	file:
MAY_READ	fs/namei.c	34;"	d	language:C++	file:
MAY_WRITE	fs/namei.c	33;"	d	language:C++	file:
MIN	fs/file_dev.c	14;"	d	language:C++	file:
MIN	kernel/chr_drv/tty_io.c	58;"	d	language:C++	file:
MINIX_HEADER	tools/build.c	34;"	d	language:C++	file:
MINOR	include/linux/fs.h	34;"	d	language:C++
MINUTE	kernel/mktime.c	20;"	d	language:C++	file:
MUL10	kernel/math/get_put.c	97;"	d	language:C++	file:
NAME_LEN	include/linux/fs.h	36;"	d	language:C++
NCC	include/termios.h	46;"	d	language:C++
NCCS	include/termios.h	56;"	d	language:C++
NEGINT	kernel/math/add.c	22;"	d	language:C++	file:
NGROUPS	include/sys/param.h	7;"	d	language:C++
NIL_FILP	include/linux/fs.h	66;"	d	language:C++
NL0	include/termios.h	111;"	d	language:C++
NL1	include/termios.h	112;"	d	language:C++
NLDLY	include/termios.h	110;"	d	language:C++
NMAGIC	include/a.out.h	25;"	d	language:C++
NOFLSH	include/termios.h	176;"	d	language:C++
NOGROUP	include/sys/param.h	8;"	d	language:C++
NORM_TRANS	kernel/chr_drv/console.c	161;"	d	language:C++	file:
NPAR	kernel/chr_drv/console.c	75;"	d	language:C++	file:
NRDEVS	fs/char_dev.c	83;"	d	language:C++	file:
NRDEVS	fs/ioctl.c	18;"	d	language:C++	file:
NR_BLK_DEV	kernel/blk_drv/blk.h	4;"	d	language:C++
NR_BUFFERS	fs/buffer.c	/^int NR_BUFFERS = 0;$/;"	v	language:C++
NR_BUFFERS	include/linux/fs.h	48;"	d	language:C++
NR_CONSOLES	include/linux/tty.h	/^extern int NR_CONSOLES;$/;"	x	language:C++
NR_CONSOLES	kernel/chr_drv/console.c	/^int NR_CONSOLES = 0;$/;"	v	language:C++
NR_FILE	include/linux/fs.h	45;"	d	language:C++
NR_HASH	include/linux/fs.h	47;"	d	language:C++
NR_HD	kernel/blk_drv/hd.c	/^static int NR_HD = 0;$/;"	v	language:C++	file:
NR_HD	kernel/blk_drv/hd.c	51;"	d	language:C++	file:
NR_INODE	include/linux/fs.h	44;"	d	language:C++
NR_OPEN	include/linux/fs.h	43;"	d	language:C++
NR_PTYS	include/linux/tty.h	14;"	d	language:C++
NR_REQUEST	kernel/blk_drv/blk.h	15;"	d	language:C++
NR_SERIALS	include/linux/tty.h	13;"	d	language:C++
NR_SUPER	include/linux/fs.h	46;"	d	language:C++
NR_TASKS	include/linux/sched.h	6;"	d	language:C++
NR_syscalls	include/linux/sys.h	/^int NR_syscalls = sizeof(sys_call_table)\/sizeof(fn_ptr);$/;"	v	language:C++
NSIG	include/signal.h	10;"	d	language:C++
NULL	include/linux/fs.h	52;"	d	language:C++
NULL	include/linux/sched.h	53;"	d	language:C++
NULL	include/stddef.h	14;"	d	language:C++
NULL	include/stddef.h	15;"	d	language:C++
NULL	include/string.h	5;"	d	language:C++
NULL	include/sys/types.h	20;"	d	language:C++
NULL	include/time.h	15;"	d	language:C++
NULL	include/unistd.h	18;"	d	language:C++
N_ABS	include/a.out.h	128;"	d	language:C++
N_BADMAG	include/a.out.h	31;"	d	language:C++
N_BSS	include/a.out.h	137;"	d	language:C++
N_BSSADDR	include/a.out.h	107;"	d	language:C++
N_COMM	include/a.out.h	140;"	d	language:C++
N_DATA	include/a.out.h	134;"	d	language:C++
N_DATADDR	include/a.out.h	100;"	d	language:C++
N_DATOFF	include/a.out.h	48;"	d	language:C++
N_DRELOFF	include/a.out.h	56;"	d	language:C++
N_EXT	include/a.out.h	147;"	d	language:C++
N_FN	include/a.out.h	143;"	d	language:C++
N_INDR	include/a.out.h	164;"	d	language:C++
N_MAGIC	include/a.out.h	18;"	d	language:C++
N_SETA	include/a.out.h	178;"	d	language:C++
N_SETB	include/a.out.h	181;"	d	language:C++
N_SETD	include/a.out.h	180;"	d	language:C++
N_SETT	include/a.out.h	179;"	d	language:C++
N_SETV	include/a.out.h	184;"	d	language:C++
N_STAB	include/a.out.h	153;"	d	language:C++
N_STROFF	include/a.out.h	64;"	d	language:C++
N_SYMOFF	include/a.out.h	60;"	d	language:C++
N_TEXT	include/a.out.h	131;"	d	language:C++
N_TRELOFF	include/a.out.h	52;"	d	language:C++
N_TXTADDR	include/a.out.h	69;"	d	language:C++
N_TXTOFF	include/a.out.h	43;"	d	language:C++
N_TYPE	include/a.out.h	150;"	d	language:C++
N_UNDF	include/a.out.h	125;"	d	language:C++
OCRNL	include/termios.h	105;"	d	language:C++
OFDEL	include/termios.h	109;"	d	language:C++
OFILL	include/termios.h	108;"	d	language:C++
OLCUC	include/termios.h	103;"	d	language:C++
OMAGIC	include/a.out.h	23;"	d	language:C++
ONLCR	include/termios.h	104;"	d	language:C++
ONLRET	include/termios.h	107;"	d	language:C++
ONOCR	include/termios.h	106;"	d	language:C++
OPOST	include/termios.h	102;"	d	language:C++
ORIG_EIP	include/linux/math_emu.h	42;"	d	language:C++
ORIG_ROOT_DEV	init/main.c	75;"	d	language:C++	file:
ORIG_SWAP_DEV	init/main.c	76;"	d	language:C++	file:
ORIG_VIDEO_COLS	kernel/chr_drv/console.c	64;"	d	language:C++	file:
ORIG_VIDEO_EGA_AX	kernel/chr_drv/console.c	66;"	d	language:C++	file:
ORIG_VIDEO_EGA_BX	kernel/chr_drv/console.c	67;"	d	language:C++	file:
ORIG_VIDEO_EGA_CX	kernel/chr_drv/console.c	68;"	d	language:C++	file:
ORIG_VIDEO_LINES	kernel/chr_drv/console.c	65;"	d	language:C++	file:
ORIG_VIDEO_MODE	kernel/chr_drv/console.c	63;"	d	language:C++	file:
ORIG_VIDEO_PAGE	kernel/chr_drv/console.c	62;"	d	language:C++	file:
ORIG_X	kernel/chr_drv/console.c	60;"	d	language:C++	file:
ORIG_Y	kernel/chr_drv/console.c	61;"	d	language:C++	file:
O_ACCMODE	include/fcntl.h	7;"	d	language:C++
O_APPEND	include/fcntl.h	15;"	d	language:C++
O_CREAT	include/fcntl.h	11;"	d	language:C++
O_CRNL	kernel/chr_drv/tty_io.c	50;"	d	language:C++	file:
O_EXCL	include/fcntl.h	12;"	d	language:C++
O_LCUC	kernel/chr_drv/tty_io.c	52;"	d	language:C++	file:
O_NDELAY	include/fcntl.h	17;"	d	language:C++
O_NLCR	kernel/chr_drv/tty_io.c	49;"	d	language:C++	file:
O_NLRET	kernel/chr_drv/tty_io.c	51;"	d	language:C++	file:
O_NOCTTY	include/fcntl.h	13;"	d	language:C++
O_NONBLOCK	include/fcntl.h	16;"	d	language:C++
O_POST	kernel/chr_drv/tty_io.c	48;"	d	language:C++	file:
O_RDONLY	include/fcntl.h	8;"	d	language:C++
O_RDWR	include/fcntl.h	10;"	d	language:C++
O_TRUNC	include/fcntl.h	14;"	d	language:C++
O_WRONLY	include/fcntl.h	9;"	d	language:C++
PAGE_ACCESSED	include/linux/mm.h	40;"	d	language:C++
PAGE_ALIGN	include/linux/sched.h	237;"	d	language:C++
PAGE_DIRTY	include/linux/mm.h	39;"	d	language:C++
PAGE_PRESENT	include/linux/mm.h	43;"	d	language:C++
PAGE_RW	include/linux/mm.h	42;"	d	language:C++
PAGE_SIZE	include/a.out.h	79;"	d	language:C++
PAGE_SIZE	include/a.out.h	88;"	d	language:C++
PAGE_SIZE	include/a.out.h	92;"	d	language:C++
PAGE_SIZE	include/linux/mm.h	4;"	d	language:C++
PAGE_USER	include/linux/mm.h	41;"	d	language:C++
PAGING_MEMORY	include/linux/mm.h	32;"	d	language:C++
PAGING_PAGES	include/linux/mm.h	33;"	d	language:C++
PARENB	include/termios.h	161;"	d	language:C++
PARMRK	include/termios.h	89;"	d	language:C++
PARODD	include/termios.h	162;"	d	language:C++
PE	boot/head.s	/^	andl $0x80000011,%eax	# Save PG,PE,ET$/;"	v	language:C++
PENDIN	include/termios.h	182;"	d	language:C++
PF_ALIGNWARN	include/linux/sched.h	149;"	d	language:C++
PG	boot/head.s	/^	andl $0x80000011,%eax	# Save PG,PE,ET$/;"	v	language:C++
PIPE_EMPTY	include/linux/fs.h	63;"	d	language:C++
PIPE_FULL	include/linux/fs.h	64;"	d	language:C++
PIPE_HEAD	include/linux/fs.h	60;"	d	language:C++
PIPE_READ_WAIT	include/linux/fs.h	58;"	d	language:C++
PIPE_SIZE	include/linux/fs.h	62;"	d	language:C++
PIPE_TAIL	include/linux/fs.h	61;"	d	language:C++
PIPE_WRITE_WAIT	include/linux/fs.h	59;"	d	language:C++
PLUS	kernel/vsprintf.c	29;"	d	language:C++	file:
PRECISION	include/linux/math_emu.h	106;"	d	language:C++
PST	kernel/math/math_emulate.c	42;"	d	language:C++	file:
PTY_OTHER	include/linux/tty.h	35;"	d	language:C++
PUTCH	include/linux/tty.h	46;"	d	language:C++
QUEUES	kernel/chr_drv/tty_io.c	61;"	d	language:C++	file:
QUIT_CHAR	include/linux/tty.h	50;"	d	language:C++
READ	include/linux/fs.h	26;"	d	language:C++
READA	include/linux/fs.h	28;"	d	language:C++
READY_STAT	include/linux/hdreg.h	30;"	d	language:C++
REG	kernel/math/ea.c	27;"	d	language:C++	file:
RESPONSE	kernel/chr_drv/console.c	147;"	d	language:C++	file:
RLIMIT_CORE	include/sys/resource.h	45;"	d	language:C++
RLIMIT_CPU	include/sys/resource.h	41;"	d	language:C++
RLIMIT_DATA	include/sys/resource.h	43;"	d	language:C++
RLIMIT_FSIZE	include/sys/resource.h	42;"	d	language:C++
RLIMIT_MEMLOCK	include/sys/resource.h	49;"	d	language:C++
RLIMIT_NPROC	include/sys/resource.h	50;"	d	language:C++
RLIMIT_OFILE	include/sys/resource.h	51;"	d	language:C++
RLIMIT_RSS	include/sys/resource.h	46;"	d	language:C++
RLIMIT_STACK	include/sys/resource.h	44;"	d	language:C++
RLIM_INFINITY	include/sys/resource.h	56;"	d	language:C++
RLIM_NLIMITS	include/sys/resource.h	54;"	d	language:C++
ROOT_DEV	fs/super.c	/^int ROOT_DEV = 0;$/;"	v	language:C++
ROOT_DEV	include/linux/fs.h	/^extern int ROOT_DEV;$/;"	x	language:C++
ROOT_INO	include/linux/fs.h	37;"	d	language:C++
ROUNDING	include/linux/math_emu.h	105;"	d	language:C++
ROUND_0	include/linux/math_emu.h	115;"	d	language:C++
ROUND_DOWN	include/linux/math_emu.h	113;"	d	language:C++
ROUND_NEAREST	include/linux/math_emu.h	112;"	d	language:C++
ROUND_UP	include/linux/math_emu.h	114;"	d	language:C++
RUSAGE_CHILDREN	include/sys/resource.h	16;"	d	language:C++
RUSAGE_SELF	include/sys/resource.h	15;"	d	language:C++
R_OK	include/unistd.h	25;"	d	language:C++
SA_INTERRUPT	include/signal.h	38;"	d	language:C++
SA_NOCLDSTOP	include/signal.h	37;"	d	language:C++
SA_NOMASK	include/signal.h	39;"	d	language:C++
SA_ONESHOT	include/signal.h	40;"	d	language:C++
SEEK_CUR	include/unistd.h	29;"	d	language:C++
SEEK_END	include/unistd.h	30;"	d	language:C++
SEEK_SET	include/unistd.h	28;"	d	language:C++
SEEK_STAT	include/linux/hdreg.h	28;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	76;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	82;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	85;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	89;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	93;"	d	language:C++
SEL_EX	include/linux/fs.h	69;"	d	language:C++
SEL_IN	include/linux/fs.h	67;"	d	language:C++
SEL_OUT	include/linux/fs.h	68;"	d	language:C++
SETUP_SECTS	tools/build.c	47;"	d	language:C++	file:
SET_INTR	kernel/blk_drv/blk.h	104;"	d	language:C++
SET_INTR	kernel/blk_drv/blk.h	106;"	d	language:C++
SIGABRT	include/signal.h	17;"	d	language:C++
SIGALRM	include/signal.h	26;"	d	language:C++
SIGCHLD	include/signal.h	29;"	d	language:C++
SIGCONT	include/signal.h	30;"	d	language:C++
SIGFPE	include/signal.h	20;"	d	language:C++
SIGHUP	include/signal.h	12;"	d	language:C++
SIGILL	include/signal.h	15;"	d	language:C++
SIGINT	include/signal.h	13;"	d	language:C++
SIGIOT	include/signal.h	18;"	d	language:C++
SIGKILL	include/signal.h	21;"	d	language:C++
SIGN	kernel/vsprintf.c	28;"	d	language:C++	file:
SIGPIPE	include/signal.h	25;"	d	language:C++
SIGQUIT	include/signal.h	14;"	d	language:C++
SIGSEGV	include/signal.h	23;"	d	language:C++
SIGSTKFLT	include/signal.h	28;"	d	language:C++
SIGSTOP	include/signal.h	31;"	d	language:C++
SIGTERM	include/signal.h	27;"	d	language:C++
SIGTRAP	include/signal.h	16;"	d	language:C++
SIGTSTP	include/signal.h	32;"	d	language:C++
SIGTTIN	include/signal.h	33;"	d	language:C++
SIGTTOU	include/signal.h	34;"	d	language:C++
SIGUNUSED	include/signal.h	19;"	d	language:C++
SIGUSR1	include/signal.h	22;"	d	language:C++
SIGUSR2	include/signal.h	24;"	d	language:C++
SIG_BLOCK	include/signal.h	42;"	d	language:C++
SIG_DFL	include/signal.h	46;"	d	language:C++
SIG_ERR	include/signal.h	48;"	d	language:C++
SIG_IGN	include/signal.h	47;"	d	language:C++
SIG_SETMASK	include/signal.h	44;"	d	language:C++
SIG_UNBLOCK	include/signal.h	43;"	d	language:C++
SMALL	kernel/vsprintf.c	33;"	d	language:C++	file:
SPACE	kernel/vsprintf.c	30;"	d	language:C++	file:
SPECIAL	kernel/vsprintf.c	32;"	d	language:C++	file:
SS	include/linux/math_emu.h	48;"	d	language:C++
ST	kernel/math/math_emulate.c	41;"	d	language:C++	file:
ST0	kernel/blk_drv/floppy.c	67;"	d	language:C++	file:
ST0_DS	include/linux/fdreg.h	30;"	d	language:C++
ST0_ECE	include/linux/fdreg.h	33;"	d	language:C++
ST0_HA	include/linux/fdreg.h	31;"	d	language:C++
ST0_INTR	include/linux/fdreg.h	35;"	d	language:C++
ST0_NR	include/linux/fdreg.h	32;"	d	language:C++
ST0_SE	include/linux/fdreg.h	34;"	d	language:C++
ST1	kernel/blk_drv/floppy.c	68;"	d	language:C++	file:
ST1_CRC	include/linux/fdreg.h	42;"	d	language:C++
ST1_EOC	include/linux/fdreg.h	43;"	d	language:C++
ST1_MAM	include/linux/fdreg.h	38;"	d	language:C++
ST1_ND	include/linux/fdreg.h	40;"	d	language:C++
ST1_OR	include/linux/fdreg.h	41;"	d	language:C++
ST1_WP	include/linux/fdreg.h	39;"	d	language:C++
ST2	kernel/blk_drv/floppy.c	69;"	d	language:C++	file:
ST2_BC	include/linux/fdreg.h	47;"	d	language:C++
ST2_CM	include/linux/fdreg.h	52;"	d	language:C++
ST2_CRC	include/linux/fdreg.h	51;"	d	language:C++
ST2_MAM	include/linux/fdreg.h	46;"	d	language:C++
ST2_SEH	include/linux/fdreg.h	49;"	d	language:C++
ST2_SNS	include/linux/fdreg.h	48;"	d	language:C++
ST2_WC	include/linux/fdreg.h	50;"	d	language:C++
ST3	kernel/blk_drv/floppy.c	70;"	d	language:C++	file:
ST3_HA	include/linux/fdreg.h	55;"	d	language:C++
ST3_TZ	include/linux/fdreg.h	56;"	d	language:C++
ST3_WP	include/linux/fdreg.h	57;"	d	language:C++
START_CHAR	include/linux/tty.h	54;"	d	language:C++
START_CHAR	kernel/chr_drv/tty_ioctl.c	/^					PUTCH(START_CHAR(tty),tty->write_q);$/;"	p	language:C++	file:	signature:(tty)
STATUS_BUSY	include/linux/fdreg.h	24;"	d	language:C++
STATUS_BUSYMASK	include/linux/fdreg.h	23;"	d	language:C++
STATUS_DIR	include/linux/fdreg.h	26;"	d	language:C++
STATUS_DMA	include/linux/fdreg.h	25;"	d	language:C++
STATUS_READY	include/linux/fdreg.h	27;"	d	language:C++
STDERR_FILENO	include/unistd.h	15;"	d	language:C++
STDIN_FILENO	include/unistd.h	13;"	d	language:C++
STDOUT_FILENO	include/unistd.h	14;"	d	language:C++
STOP_CHAR	include/linux/tty.h	55;"	d	language:C++
STOP_CHAR	kernel/chr_drv/tty_ioctl.c	/^					PUTCH(STOP_CHAR(tty),tty->write_q);$/;"	p	language:C++	file:	signature:(tty)
STRINGIFY	tools/build.c	49;"	d	language:C++	file:
SUPER_MAGIC	include/linux/fs.h	41;"	d	language:C++
SUSPEND_CHAR	include/linux/tty.h	56;"	d	language:C++
SWAP_BITS	mm/swap.c	19;"	d	language:C++	file:
SWAP_DEV	include/linux/mm.h	/^extern int SWAP_DEV;$/;"	x	language:C++
SWAP_DEV	mm/swap.c	/^int SWAP_DEV = 0;$/;"	v	language:C++
SWD	include/linux/math_emu.h	104;"	d	language:C++
SYSSIZE	boot/bootsect.S	/^SYSSIZE = DEF_SYSSIZE$/;"	v	language:C++
SYS_SIZE	tools/build.c	37;"	d	language:C++	file:
S_IFBLK	include/sys/stat.h	23;"	d	language:C++
S_IFCHR	include/sys/stat.h	25;"	d	language:C++
S_IFDIR	include/sys/stat.h	24;"	d	language:C++
S_IFIFO	include/sys/stat.h	26;"	d	language:C++
S_IFLNK	include/sys/stat.h	21;"	d	language:C++
S_IFMT	include/sys/stat.h	20;"	d	language:C++
S_IFREG	include/sys/stat.h	22;"	d	language:C++
S_IRGRP	include/sys/stat.h	44;"	d	language:C++
S_IROTH	include/sys/stat.h	49;"	d	language:C++
S_IRUSR	include/sys/stat.h	39;"	d	language:C++
S_IRWXG	include/sys/stat.h	43;"	d	language:C++
S_IRWXO	include/sys/stat.h	48;"	d	language:C++
S_IRWXU	include/sys/stat.h	38;"	d	language:C++
S_ISBLK	include/sys/stat.h	35;"	d	language:C++
S_ISCHR	include/sys/stat.h	34;"	d	language:C++
S_ISDIR	include/sys/stat.h	33;"	d	language:C++
S_ISFIFO	include/sys/stat.h	36;"	d	language:C++
S_ISGID	include/sys/stat.h	28;"	d	language:C++
S_ISLNK	include/sys/stat.h	31;"	d	language:C++
S_ISREG	include/sys/stat.h	32;"	d	language:C++
S_ISUID	include/sys/stat.h	27;"	d	language:C++
S_ISVTX	include/sys/stat.h	29;"	d	language:C++
S_IWGRP	include/sys/stat.h	45;"	d	language:C++
S_IWOTH	include/sys/stat.h	50;"	d	language:C++
S_IWUSR	include/sys/stat.h	40;"	d	language:C++
S_IXGRP	include/sys/stat.h	46;"	d	language:C++
S_IXOTH	include/sys/stat.h	51;"	d	language:C++
S_IXUSR	include/sys/stat.h	41;"	d	language:C++
TAB0	include/termios.h	119;"	d	language:C++
TAB1	include/termios.h	120;"	d	language:C++
TAB2	include/termios.h	121;"	d	language:C++
TAB3	include/termios.h	122;"	d	language:C++
TABDLY	include/termios.h	118;"	d	language:C++
TASK_INTERRUPTIBLE	include/linux/sched.h	47;"	d	language:C++
TASK_RUNNING	include/linux/sched.h	46;"	d	language:C++
TASK_SIZE	include/linux/sched.h	7;"	d	language:C++
TASK_STOPPED	include/linux/sched.h	50;"	d	language:C++
TASK_UNINTERRUPTIBLE	include/linux/sched.h	48;"	d	language:C++
TASK_ZOMBIE	include/linux/sched.h	49;"	d	language:C++
TCFLSH	include/termios.h	20;"	d	language:C++
TCGETA	include/termios.h	14;"	d	language:C++
TCGETS	include/termios.h	10;"	d	language:C++
TCIFLUSH	include/termios.h	205;"	d	language:C++
TCIOFF	include/termios.h	201;"	d	language:C++
TCIOFLUSH	include/termios.h	207;"	d	language:C++
TCION	include/termios.h	202;"	d	language:C++
TCOFLUSH	include/termios.h	206;"	d	language:C++
TCOOFF	include/termios.h	199;"	d	language:C++
TCOON	include/termios.h	200;"	d	language:C++
TCSADRAIN	include/termios.h	211;"	d	language:C++
TCSAFLUSH	include/termios.h	212;"	d	language:C++
TCSANOW	include/termios.h	210;"	d	language:C++
TCSBRK	include/termios.h	18;"	d	language:C++
TCSETA	include/termios.h	15;"	d	language:C++
TCSETAF	include/termios.h	17;"	d	language:C++
TCSETAW	include/termios.h	16;"	d	language:C++
TCSETS	include/termios.h	11;"	d	language:C++
TCSETSF	include/termios.h	13;"	d	language:C++
TCSETSW	include/termios.h	12;"	d	language:C++
TCXONC	include/termios.h	19;"	d	language:C++
TIME_REQUESTS	kernel/sched.c	283;"	d	language:C++	file:
TIOCEXCL	include/termios.h	21;"	d	language:C++
TIOCGPGRP	include/termios.h	24;"	d	language:C++
TIOCGSOFTCAR	include/termios.h	34;"	d	language:C++
TIOCGWINSZ	include/termios.h	28;"	d	language:C++
TIOCINQ	include/termios.h	37;"	d	language:C++
TIOCMBIC	include/termios.h	32;"	d	language:C++
TIOCMBIS	include/termios.h	31;"	d	language:C++
TIOCMGET	include/termios.h	30;"	d	language:C++
TIOCMSET	include/termios.h	33;"	d	language:C++
TIOCM_CAR	include/termios.h	192;"	d	language:C++
TIOCM_CD	include/termios.h	195;"	d	language:C++
TIOCM_CTS	include/termios.h	191;"	d	language:C++
TIOCM_DSR	include/termios.h	194;"	d	language:C++
TIOCM_DTR	include/termios.h	187;"	d	language:C++
TIOCM_LE	include/termios.h	186;"	d	language:C++
TIOCM_RI	include/termios.h	196;"	d	language:C++
TIOCM_RNG	include/termios.h	193;"	d	language:C++
TIOCM_RTS	include/termios.h	188;"	d	language:C++
TIOCM_SR	include/termios.h	190;"	d	language:C++
TIOCM_ST	include/termios.h	189;"	d	language:C++
TIOCNXCL	include/termios.h	22;"	d	language:C++
TIOCOUTQ	include/termios.h	26;"	d	language:C++
TIOCSCTTY	include/termios.h	23;"	d	language:C++
TIOCSPGRP	include/termios.h	25;"	d	language:C++
TIOCSSOFTCAR	include/termios.h	35;"	d	language:C++
TIOCSTI	include/termios.h	27;"	d	language:C++
TIOCSWINSZ	include/termios.h	29;"	d	language:C++
TOSTOP	include/termios.h	177;"	d	language:C++
TRK0_ERR	include/linux/hdreg.h	46;"	d	language:C++
TTY_BUF_SIZE	include/linux/tty.h	20;"	d	language:C++
TTY_BUF_SIZE	include/termios.h	6;"	d	language:C++
TTY_TABLE	include/linux/tty.h	72;"	d	language:C++
TTY_TABLE	kernel/chr_drv/tty_io.c	/^	copy_to_cooked(TTY_TABLE(tty));$/;"	p	language:C++	file:	signature:(tty)
TYPE	kernel/blk_drv/floppy.c	53;"	d	language:C++	file:
USED	include/linux/mm.h	35;"	d	language:C++
UTS_MACHINE	include/linux/config.h	11;"	d	language:C++
UTS_NODENAME	include/linux/config.h	8;"	d	language:C++
UTS_RELEASE	include/linux/config.h	9;"	d	language:C++
UTS_SYSNAME	include/linux/config.h	7;"	d	language:C++
UTS_VERSION	include/linux/config.h	10;"	d	language:C++
VDISCARD	include/termios.h	80;"	d	language:C++
VEOF	include/termios.h	71;"	d	language:C++
VEOL	include/termios.h	78;"	d	language:C++
VEOL2	include/termios.h	83;"	d	language:C++
VERASE	include/termios.h	69;"	d	language:C++
VIDEO_TYPE_CGA	kernel/chr_drv/console.c	71;"	d	language:C++	file:
VIDEO_TYPE_EGAC	kernel/chr_drv/console.c	73;"	d	language:C++	file:
VIDEO_TYPE_EGAM	kernel/chr_drv/console.c	72;"	d	language:C++	file:
VIDEO_TYPE_MDA	kernel/chr_drv/console.c	70;"	d	language:C++	file:
VINTR	include/termios.h	67;"	d	language:C++
VKILL	include/termios.h	70;"	d	language:C++
VLNEXT	include/termios.h	82;"	d	language:C++
VMIN	include/termios.h	73;"	d	language:C++
VM_PAGES	mm/swap.c	44;"	d	language:C++	file:
VQUIT	include/termios.h	68;"	d	language:C++
VREPRINT	include/termios.h	79;"	d	language:C++
VSTART	include/termios.h	75;"	d	language:C++
VSTOP	include/termios.h	76;"	d	language:C++
VSUSP	include/termios.h	77;"	d	language:C++
VSWTC	include/termios.h	74;"	d	language:C++
VT0	include/termios.h	128;"	d	language:C++
VT1	include/termios.h	129;"	d	language:C++
VTDLY	include/termios.h	127;"	d	language:C++
VTIME	include/termios.h	72;"	d	language:C++
VWERASE	include/termios.h	81;"	d	language:C++
WAKEUP_CHARS	kernel/chr_drv/serial.c	21;"	d	language:C++	file:
WCOREDUMP	include/sys/wait.h	17;"	d	language:C++
WEXITSTATUS	include/sys/wait.h	15;"	d	language:C++
WIFEXITED	include/sys/wait.h	13;"	d	language:C++
WIFSIGNALED	include/sys/wait.h	19;"	d	language:C++
WIFSTOPPED	include/sys/wait.h	14;"	d	language:C++
WIN_DIAGNOSE	include/linux/hdreg.h	41;"	d	language:C++
WIN_FORMAT	include/linux/hdreg.h	38;"	d	language:C++
WIN_INIT	include/linux/hdreg.h	39;"	d	language:C++
WIN_READ	include/linux/hdreg.h	35;"	d	language:C++
WIN_RESTORE	include/linux/hdreg.h	34;"	d	language:C++
WIN_SEEK	include/linux/hdreg.h	40;"	d	language:C++
WIN_SPECIFY	include/linux/hdreg.h	42;"	d	language:C++
WIN_VERIFY	include/linux/hdreg.h	37;"	d	language:C++
WIN_WRITE	include/linux/hdreg.h	36;"	d	language:C++
WNOHANG	include/sys/wait.h	10;"	d	language:C++
WRERR_STAT	include/linux/hdreg.h	29;"	d	language:C++
WRITE	include/linux/fs.h	27;"	d	language:C++
WRITEA	include/linux/fs.h	29;"	d	language:C++
WSTOPSIG	include/sys/wait.h	18;"	d	language:C++
WTERMSIG	include/sys/wait.h	16;"	d	language:C++
WUNTRACED	include/sys/wait.h	11;"	d	language:C++
W_OK	include/unistd.h	24;"	d	language:C++
XCASE	include/termios.h	171;"	d	language:C++
XTABS	include/termios.h	123;"	d	language:C++
X_OK	include/unistd.h	23;"	d	language:C++
YEAR	kernel/mktime.c	23;"	d	language:C++	file:
ZEROPAD	kernel/vsprintf.c	27;"	d	language:C++	file:
ZMAGIC	include/a.out.h	27;"	d	language:C++
Z_MAP_SLOTS	include/linux/fs.h	40;"	d	language:C++
_A_OUT_H	include/a.out.h	2;"	d	language:C++
_BLK_H	kernel/blk_drv/blk.h	2;"	d	language:C++
_BLOCKABLE	kernel/sched.c	24;"	d	language:C++	file:
_C	include/ctype.h	7;"	d	language:C++
_CONFIG_H	include/linux/config.h	2;"	d	language:C++
_CONST_H	include/const.h	2;"	d	language:C++
_CTYPE_H	include/ctype.h	2;"	d	language:C++
_D	include/ctype.h	6;"	d	language:C++
_ERRNO_H	include/errno.h	2;"	d	language:C++
_FCNTL_H	include/fcntl.h	2;"	d	language:C++
_FDREG_H	include/linux/fdreg.h	7;"	d	language:C++
_FS_H	include/linux/fs.h	7;"	d	language:C++
_HDREG_H	include/linux/hdreg.h	7;"	d	language:C++
_HEAD_H	include/linux/head.h	2;"	d	language:C++
_HIGH	include/sys/wait.h	7;"	d	language:C++
_I_FLAG	kernel/chr_drv/tty_io.c	30;"	d	language:C++	file:
_L	include/ctype.h	5;"	d	language:C++
_LDT	include/linux/sched.h	207;"	d	language:C++
_LINUX_MATH_EMU_H	include/linux/math_emu.h	7;"	d	language:C++
_LOW	include/sys/wait.h	6;"	d	language:C++
_L_FLAG	kernel/chr_drv/tty_io.c	29;"	d	language:C++	file:
_MM_H	include/linux/mm.h	2;"	d	language:C++
_NR_syscalls	kernel/sys_call.s	/^	cmpl _NR_syscalls,%eax$/;"	v	language:C++
_NSIG	include/signal.h	9;"	d	language:C++
_N_BADMAG	include/a.out.h	36;"	d	language:C++
_N_HDROFF	include/a.out.h	40;"	d	language:C++
_N_SEGMENT_ROUND	include/a.out.h	95;"	d	language:C++
_N_TXTENDADDR	include/a.out.h	97;"	d	language:C++
_O_FLAG	kernel/chr_drv/tty_io.c	31;"	d	language:C++	file:
_P	include/ctype.h	8;"	d	language:C++
_PC_CHOWN_RESTRICTED	include/unistd.h	51;"	d	language:C++
_PC_LINK_MAX	include/unistd.h	43;"	d	language:C++
_PC_MAX_CANON	include/unistd.h	44;"	d	language:C++
_PC_MAX_INPUT	include/unistd.h	45;"	d	language:C++
_PC_NAME_MAX	include/unistd.h	46;"	d	language:C++
_PC_NO_TRUNC	include/unistd.h	49;"	d	language:C++
_PC_PATH_MAX	include/unistd.h	47;"	d	language:C++
_PC_PIPE_BUF	include/unistd.h	48;"	d	language:C++
_PC_VDISABLE	include/unistd.h	50;"	d	language:C++
_POSIX_CHOWN_RESTRICTED	include/unistd.h	7;"	d	language:C++
_POSIX_JOB_CONTROL	include/unistd.h	10;"	d	language:C++
_POSIX_NO_TRUNC	include/unistd.h	8;"	d	language:C++
_POSIX_SAVED_IDS	include/unistd.h	11;"	d	language:C++
_POSIX_VDISABLE	include/unistd.h	9;"	d	language:C++
_POSIX_VERSION	include/unistd.h	5;"	d	language:C++
_PTRDIFF_T	include/stddef.h	5;"	d	language:C++
_PTRDIFF_T	include/sys/types.h	15;"	d	language:C++
_S	include/ctype.h	9;"	d	language:C++
_S	kernel/sched.c	23;"	d	language:C++	file:
_SCHED_H	include/linux/sched.h	2;"	d	language:C++
_SC_ARG_MAX	include/unistd.h	33;"	d	language:C++
_SC_CHILD_MAX	include/unistd.h	34;"	d	language:C++
_SC_CLOCKS_PER_SEC	include/unistd.h	35;"	d	language:C++
_SC_JOB_CONTROL	include/unistd.h	38;"	d	language:C++
_SC_NGROUPS_MAX	include/unistd.h	36;"	d	language:C++
_SC_OPEN_MAX	include/unistd.h	37;"	d	language:C++
_SC_SAVED_IDS	include/unistd.h	39;"	d	language:C++
_SC_VERSION	include/unistd.h	40;"	d	language:C++
_SIGNAL_H	include/signal.h	2;"	d	language:C++
_SIZE_T	include/stddef.h	10;"	d	language:C++
_SIZE_T	include/string.h	9;"	d	language:C++
_SIZE_T	include/sys/types.h	5;"	d	language:C++
_SIZE_T	include/time.h	10;"	d	language:C++
_SP	include/ctype.h	11;"	d	language:C++
_STDARG_H	include/stdarg.h	2;"	d	language:C++
_STDDEF_H	include/stddef.h	2;"	d	language:C++
_STRING_H_	include/string.h	2;"	d	language:C++
_SYS_PARAM_H	include/sys/param.h	2;"	d	language:C++
_SYS_RESOURCE_H	include/sys/resource.h	6;"	d	language:C++
_SYS_STAT_H	include/sys/stat.h	2;"	d	language:C++
_SYS_TIME_H	include/sys/time.h	2;"	d	language:C++
_SYS_TYPES_H	include/sys/types.h	2;"	d	language:C++
_SYS_UTSNAME_H	include/sys/utsname.h	2;"	d	language:C++
_SYS_WAIT_H	include/sys/wait.h	2;"	d	language:C++
_TERMIOS_H	include/termios.h	2;"	d	language:C++
_TIMES_H	include/sys/times.h	2;"	d	language:C++
_TIME_H	include/time.h	2;"	d	language:C++
_TIME_T	include/sys/types.h	10;"	d	language:C++
_TIME_T	include/time.h	5;"	d	language:C++
_TSS	include/linux/sched.h	206;"	d	language:C++
_TTY_H	include/linux/tty.h	10;"	d	language:C++
_U	include/ctype.h	4;"	d	language:C++
_UNISTD_H	include/unistd.h	2;"	d	language:C++
_UTIME_H	include/utime.h	2;"	d	language:C++
_X	include/ctype.h	10;"	d	language:C++
__ALIGNED_TEMP_REAL	kernel/math/math_emulate.c	35;"	d	language:C++	file:
__GNU_EXEC_MACROS__	include/a.out.h	4;"	d	language:C++
__LIBRARY__	init/main.c	7;"	d	language:C++	file:
__LIBRARY__	lib/_exit.c	7;"	d	language:C++	file:
__LIBRARY__	lib/close.c	7;"	d	language:C++	file:
__LIBRARY__	lib/dup.c	7;"	d	language:C++	file:
__LIBRARY__	lib/execve.c	7;"	d	language:C++	file:
__LIBRARY__	lib/open.c	7;"	d	language:C++	file:
__LIBRARY__	lib/setsid.c	7;"	d	language:C++	file:
__LIBRARY__	lib/string.c	13;"	d	language:C++	file:
__LIBRARY__	lib/wait.c	7;"	d	language:C++	file:
__LIBRARY__	lib/write.c	7;"	d	language:C++	file:
__NR_access	include/unistd.h	95;"	d	language:C++
__NR_acct	include/unistd.h	113;"	d	language:C++
__NR_alarm	include/unistd.h	89;"	d	language:C++
__NR_break	include/unistd.h	79;"	d	language:C++
__NR_brk	include/unistd.h	107;"	d	language:C++
__NR_chdir	include/unistd.h	74;"	d	language:C++
__NR_chmod	include/unistd.h	77;"	d	language:C++
__NR_chown	include/unistd.h	78;"	d	language:C++
__NR_chroot	include/unistd.h	123;"	d	language:C++
__NR_close	include/unistd.h	68;"	d	language:C++
__NR_creat	include/unistd.h	70;"	d	language:C++
__NR_dup	include/unistd.h	103;"	d	language:C++
__NR_dup2	include/unistd.h	125;"	d	language:C++
__NR_execve	include/unistd.h	73;"	d	language:C++
__NR_exit	include/unistd.h	63;"	d	language:C++
__NR_fcntl	include/unistd.h	117;"	d	language:C++
__NR_fork	include/unistd.h	64;"	d	language:C++
__NR_fstat	include/unistd.h	90;"	d	language:C++
__NR_ftime	include/unistd.h	97;"	d	language:C++
__NR_getegid	include/unistd.h	112;"	d	language:C++
__NR_geteuid	include/unistd.h	111;"	d	language:C++
__NR_getgid	include/unistd.h	109;"	d	language:C++
__NR_getgroups	include/unistd.h	142;"	d	language:C++
__NR_getpgrp	include/unistd.h	127;"	d	language:C++
__NR_getpid	include/unistd.h	82;"	d	language:C++
__NR_getppid	include/unistd.h	126;"	d	language:C++
__NR_getrlimit	include/unistd.h	138;"	d	language:C++
__NR_getrusage	include/unistd.h	139;"	d	language:C++
__NR_gettimeofday	include/unistd.h	140;"	d	language:C++
__NR_getuid	include/unistd.h	86;"	d	language:C++
__NR_gtty	include/unistd.h	94;"	d	language:C++
__NR_ioctl	include/unistd.h	116;"	d	language:C++
__NR_kill	include/unistd.h	99;"	d	language:C++
__NR_link	include/unistd.h	71;"	d	language:C++
__NR_lock	include/unistd.h	115;"	d	language:C++
__NR_lseek	include/unistd.h	81;"	d	language:C++
__NR_lstat	include/unistd.h	146;"	d	language:C++
__NR_mkdir	include/unistd.h	101;"	d	language:C++
__NR_mknod	include/unistd.h	76;"	d	language:C++
__NR_mount	include/unistd.h	83;"	d	language:C++
__NR_mpx	include/unistd.h	118;"	d	language:C++
__NR_nice	include/unistd.h	96;"	d	language:C++
__NR_open	include/unistd.h	67;"	d	language:C++
__NR_pause	include/unistd.h	91;"	d	language:C++
__NR_phys	include/unistd.h	114;"	d	language:C++
__NR_pipe	include/unistd.h	104;"	d	language:C++
__NR_prof	include/unistd.h	106;"	d	language:C++
__NR_ptrace	include/unistd.h	88;"	d	language:C++
__NR_read	include/unistd.h	65;"	d	language:C++
__NR_readlink	include/unistd.h	147;"	d	language:C++
__NR_rename	include/unistd.h	100;"	d	language:C++
__NR_rmdir	include/unistd.h	102;"	d	language:C++
__NR_select	include/unistd.h	144;"	d	language:C++
__NR_setgid	include/unistd.h	108;"	d	language:C++
__NR_setgroups	include/unistd.h	143;"	d	language:C++
__NR_sethostname	include/unistd.h	136;"	d	language:C++
__NR_setpgid	include/unistd.h	119;"	d	language:C++
__NR_setregid	include/unistd.h	133;"	d	language:C++
__NR_setreuid	include/unistd.h	132;"	d	language:C++
__NR_setrlimit	include/unistd.h	137;"	d	language:C++
__NR_setsid	include/unistd.h	128;"	d	language:C++
__NR_settimeofday	include/unistd.h	141;"	d	language:C++
__NR_setuid	include/unistd.h	85;"	d	language:C++
__NR_setup	include/unistd.h	62;"	d	language:C++
__NR_sgetmask	include/unistd.h	130;"	d	language:C++
__NR_sigaction	include/unistd.h	129;"	d	language:C++
__NR_signal	include/unistd.h	110;"	d	language:C++
__NR_sigpending	include/unistd.h	135;"	d	language:C++
__NR_sigsuspend	include/unistd.h	134;"	d	language:C++
__NR_ssetmask	include/unistd.h	131;"	d	language:C++
__NR_stat	include/unistd.h	80;"	d	language:C++
__NR_stime	include/unistd.h	87;"	d	language:C++
__NR_stty	include/unistd.h	93;"	d	language:C++
__NR_symlink	include/unistd.h	145;"	d	language:C++
__NR_sync	include/unistd.h	98;"	d	language:C++
__NR_time	include/unistd.h	75;"	d	language:C++
__NR_times	include/unistd.h	105;"	d	language:C++
__NR_ulimit	include/unistd.h	120;"	d	language:C++
__NR_umask	include/unistd.h	122;"	d	language:C++
__NR_umount	include/unistd.h	84;"	d	language:C++
__NR_uname	include/unistd.h	121;"	d	language:C++
__NR_unlink	include/unistd.h	72;"	d	language:C++
__NR_uselib	include/unistd.h	148;"	d	language:C++
__NR_ustat	include/unistd.h	124;"	d	language:C++
__NR_utime	include/unistd.h	92;"	d	language:C++
__NR_waitpid	include/unistd.h	69;"	d	language:C++
__NR_write	include/unistd.h	66;"	d	language:C++
___cs	include/linux/math_emu.h	/^	long ___cs;$/;"	m	language:C++	struct:info	access:public
___ds	include/linux/math_emu.h	/^	long ___ds;$/;"	m	language:C++	struct:info	access:public
___eax	include/linux/math_emu.h	/^	long ___eax;$/;"	m	language:C++	struct:info	access:public
___ebp	include/linux/math_emu.h	/^	long ___ebp;$/;"	m	language:C++	struct:info	access:public
___ebx	include/linux/math_emu.h	/^	long ___ebx;$/;"	m	language:C++	struct:info	access:public
___ecx	include/linux/math_emu.h	/^	long ___ecx;$/;"	m	language:C++	struct:info	access:public
___edi	include/linux/math_emu.h	/^	long ___edi;$/;"	m	language:C++	struct:info	access:public
___edx	include/linux/math_emu.h	/^	long ___edx;$/;"	m	language:C++	struct:info	access:public
___eflags	include/linux/math_emu.h	/^	long ___eflags;$/;"	m	language:C++	struct:info	access:public
___eip	include/linux/math_emu.h	/^	long ___eip;$/;"	m	language:C++	struct:info	access:public
___es	include/linux/math_emu.h	/^	long ___es;$/;"	m	language:C++	struct:info	access:public
___esi	include/linux/math_emu.h	/^	long ___esi;$/;"	m	language:C++	struct:info	access:public
___esp	include/linux/math_emu.h	/^	long ___esp;$/;"	m	language:C++	struct:info	access:public
___fs	include/linux/math_emu.h	/^	long ___fs;$/;"	m	language:C++	struct:info	access:public
___math_ret	include/linux/math_emu.h	/^	long ___math_ret;$/;"	m	language:C++	struct:info	access:public
___orig_eax	include/linux/math_emu.h	/^	long ___orig_eax;$/;"	m	language:C++	struct:info	access:public
___orig_eip	include/linux/math_emu.h	/^	long ___orig_eip;$/;"	m	language:C++	struct:info	access:public
___ss	include/linux/math_emu.h	/^	long ___ss;$/;"	m	language:C++	struct:info	access:public
___strtok	include/string.h	/^extern char * ___strtok;$/;"	x	language:C++
___sys_call_ret	include/linux/math_emu.h	/^	long ___sys_call_ret;$/;"	m	language:C++	struct:info	access:public
__anon10::vc_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_bold_attr	kernel/chr_drv/console.c	/^	int		vc_bold_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_bottom	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_checkin	kernel/chr_drv/console.c	/^	unsigned long	vc_checkin;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_def_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_def_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_iscolor	kernel/chr_drv/console.c	/^	unsigned int	vc_iscolor;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_npar	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_origin	kernel/chr_drv/console.c	/^	unsigned long	vc_origin;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_par	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_pos	kernel/chr_drv/console.c	/^	unsigned long	vc_pos;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_ques	kernel/chr_drv/console.c	/^	unsigned long	vc_ques;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_restate	kernel/chr_drv/console.c	/^	unsigned long	vc_restate;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_saved_x	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_x;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_saved_y	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_scr_end	kernel/chr_drv/console.c	/^	unsigned long	vc_scr_end;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_state	kernel/chr_drv/console.c	/^	unsigned long	vc_state;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_top	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_translate	kernel/chr_drv/console.c	/^	char *		vc_translate;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_video_erase_char	kernel/chr_drv/console.c	/^	unsigned short	vc_video_erase_char;	$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_video_mem_end	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_end;	\/* End of video RAM (sort of)	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_video_mem_start	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_start;	\/* Start of video RAM		*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_x	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon10::vc_y	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
__anon12::a	kernel/sched.c	/^	long * a;$/;"	m	language:C++	struct:__anon12	file:	access:public
__anon12::b	kernel/sched.c	/^	short b;$/;"	m	language:C++	struct:__anon12	file:	access:public
__anon2::quot	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon2	access:public
__anon2::rem	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon2	access:public
__anon3::quot	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon3	access:public
__anon3::rem	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon3	access:public
__anon4::a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon4	access:public
__anon4::b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon4	access:public
__anon4::exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	language:C++	struct:__anon4	access:public
__anon5::exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	language:C++	struct:__anon5	access:public
__anon5::m0	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
__anon5::m1	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
__anon5::m2	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
__anon5::m3	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
__anon6::a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon6	access:public
__anon6::b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon6	access:public
__anon7::a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon7	access:public
__anon7::b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon7	access:public
__anon7::sign	include/linux/math_emu.h	/^	short sign;$/;"	m	language:C++	struct:__anon7	access:public
__anon8::old_task	fs/select.c	/^	struct task_struct * old_task;$/;"	m	language:C++	struct:__anon8	typeref:struct:__anon8::task_struct	file:	access:public
__anon8::wait_address	fs/select.c	/^	struct task_struct ** wait_address;$/;"	m	language:C++	struct:__anon8	typeref:struct:__anon8::task_struct	file:	access:public
__anon9::entry	fs/select.c	/^	wait_entry entry[NR_OPEN*3];$/;"	m	language:C++	struct:__anon9	file:	access:public
__anon9::nr	fs/select.c	/^	int nr;$/;"	m	language:C++	struct:__anon9	file:	access:public
__isleap	include/time.h	34;"	d	language:C++
__math_abort	include/linux/math_emu.h	/^void __math_abort(struct info *, unsigned int);$/;"	p	language:C++	signature:(struct info *, unsigned int)
__math_abort	kernel/math/math_emulate.c	/^void __math_abort(struct info * info, unsigned int signal)$/;"	f	language:C++	signature:(struct info * info, unsigned int signal)
__regoffset	kernel/math/ea.c	/^static int __regoffset[] = {$/;"	v	language:C++	file:
__sleep_on	kernel/sched.c	/^static inline void __sleep_on(struct task_struct **p, int state)$/;"	f	language:C++	file:	signature:(struct task_struct **p, int state)
__st	kernel/math/math_emulate.c	/^static temp_real_unaligned * __st(int i)$/;"	f	language:C++	file:	signature:(int i)
__st	kernel/math/math_emulate.c	/^static temp_real_unaligned * __st(int i);$/;"	p	language:C++	file:	signature:(int i)
__va_rounded_size	include/stdarg.h	9;"	d	language:C++
_blankinterval	kernel/chr_drv/keyboard.S	/^	movl _blankinterval,%eax$/;"	v	language:C++
_bmap	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	f	language:C++	file:	signature:(struct m_inode * inode,int block,int create)
_bounds	kernel/asm.s	/^.globl _divide_error,_debug,_nmi,_int3,_overflow,_bounds,_invalid_op$/;"	v	language:C++
_bucket_dir	lib/malloc.c	/^struct _bucket_dir {	\/* 8 bytes *\/$/;"	s	language:C++	file:
_bucket_dir::chain	lib/malloc.c	/^	struct bucket_desc	*chain;$/;"	m	language:C++	struct:_bucket_dir	typeref:struct:_bucket_dir::bucket_desc	file:	access:public
_bucket_dir::size	lib/malloc.c	/^	int			size;$/;"	m	language:C++	struct:_bucket_dir	file:	access:public
_buffer_memory_end	init/main.s	/^	movl _buffer_memory_end,%eax$/;"	v	language:C++
_coprocessor_error	kernel/asm.s	/^.globl _general_protection,_coprocessor_error,_irq13,_reserved$/;"	v	language:C++
_ctmp	include/ctype.h	/^extern char _ctmp;$/;"	x	language:C++
_ctmp	lib/ctype.c	/^char _ctmp;$/;"	v	language:C++
_ctype	include/ctype.h	/^extern unsigned char _ctype[];$/;"	x	language:C++
_ctype	lib/ctype.c	/^unsigned char _ctype[] = {0x00,			\/* EOF *\/$/;"	v	language:C++
_current	kernel/sys_call.s	/^	movl _current,%eax$/;"	v	language:C++
_debug	kernel/asm.s	/^.globl _divide_error,_debug,_nmi,_int3,_overflow,_bounds,_invalid_op$/;"	v	language:C++
_do_floppy	kernel/sys_call.s	/^	xchgl _do_floppy,%eax$/;"	v	language:C++
_do_hd	kernel/sys_call.s	/^	xchgl _do_hd,%edx$/;"	v	language:C++
_exit	include/unistd.h	/^volatile void _exit(int status);$/;"	p	language:C++	signature:(int status)
_exit	lib/_exit.c	/^volatile void _exit(int exit_code)$/;"	f	language:C++	signature:(int exit_code)
_floppy_interrupt	kernel/sys_call.s	/^.globl _hd_interrupt,_floppy_interrupt,_parallel_interrupt$/;"	v	language:C++
_fs	kernel/traps.c	34;"	d	language:C++	file:
_gdt	boot/head.s	/^.globl _idt,_gdt,_pg_dir,_tmp_floppy_area$/;"	v	language:C++
_get_base	include/linux/sched.h	265;"	d	language:C++
_hashfn	fs/buffer.c	128;"	d	language:C++	file:
_idt	boot/head.s	/^	lea _idt,%edi$/;"	v	language:C++
_int3	kernel/asm.s	/^.globl _divide_error,_debug,_nmi,_int3,_overflow,_bounds,_invalid_op$/;"	v	language:C++
_irq13	kernel/asm.s	/^.globl _general_protection,_coprocessor_error,_irq13,_reserved$/;"	v	language:C++
_main_memory_start	init/main.s	/^	subl _main_memory_start,%eax$/;"	v	language:C++
_memory_end	init/main.s	/^	movl _memory_end,%eax$/;"	v	language:C++
_namei	fs/namei.c	/^static struct m_inode * _namei(const char * filename, struct m_inode * base,$/;"	p	language:C++	file:	signature:(const char * filename, struct m_inode * base, int follow_links)
_namei	fs/namei.c	/^struct m_inode * _namei(const char * pathname, struct m_inode * base,$/;"	f	language:C++	signature:(const char * pathname, struct m_inode * base, int follow_links)
_nmi	kernel/asm.s	/^.globl _divide_error,_debug,_nmi,_int3,_overflow,_bounds,_invalid_op$/;"	v	language:C++
_nr_buffers	init/main.s	/^	movl _nr_buffers,%eax$/;"	v	language:C++
_overflow	kernel/asm.s	/^.globl _divide_error,_debug,_nmi,_int3,_overflow,_bounds,_invalid_op$/;"	v	language:C++
_pg_dir	boot/head.s	/^.globl _idt,_gdt,_pg_dir,_tmp_floppy_area$/;"	v	language:C++
_segment_not_present	kernel/asm.s	/^.globl _invalid_TSS,_segment_not_present,_stack_segment$/;"	v	language:C++
_set_base	include/linux/sched.h	239;"	d	language:C++
_set_gate	include/asm/system.h	22;"	d	language:C++
_set_limit	include/linux/sched.h	250;"	d	language:C++
_set_seg_desc	include/asm/system.h	42;"	d	language:C++
_set_tssldt_desc	include/asm/system.h	52;"	d	language:C++
_stack_start	boot/head.s	/^	lss _stack_start,%esp$/;"	v	language:C++
_syscall0	include/unistd.h	150;"	d	language:C++
_syscall1	include/unistd.h	163;"	d	language:C++
_syscall2	include/unistd.h	176;"	d	language:C++
_syscall3	include/unistd.h	189;"	d	language:C++
_table_list	kernel/chr_drv/keyboard.S	/^	movl _table_list,%edx		# read-queue for console$/;"	v	language:C++
_task	kernel/sys_call.s	/^	cmpl _task,%eax			# task[0] cannot have signals$/;"	v	language:C++
_v	include/asm/segment.h	/^	unsigned long _v;$/;"	l	language:C++
_v	include/asm/segment.h	/^	unsigned register char _v;$/;"	l	language:C++
_v	include/asm/segment.h	/^	unsigned short _v;$/;"	l	language:C++
a	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	access:public
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon4	access:public
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon6	access:public
a	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon7	access:public
a	kernel/chr_drv/console.c	/^	register unsigned char a;$/;"	l	language:C++
a	kernel/math/add.c	/^	temp_real a,b;$/;"	l	language:C++
a	kernel/math/compare.c	/^	temp_real a;$/;"	l	language:C++
a	kernel/math/div.c	/^	int a[4],b[4],tmp[4] = {0,0,0,0};$/;"	l	language:C++
a	kernel/sched.c	/^	long * a;$/;"	m	language:C++	struct:__anon12	file:	access:public
a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	language:C++	struct:exec	access:public
a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	language:C++	struct:exec	access:public
a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
access	include/unistd.h	/^int access(const char * filename, mode_t mode);$/;"	p	language:C++	signature:(const char * filename, mode_t mode)
acct	include/unistd.h	/^int acct(const char * filename);$/;"	p	language:C++	signature:(const char * filename)
actime	fs/open.c	/^	long actime,modtime;$/;"	l	language:C++
actime	include/utime.h	/^	time_t actime;$/;"	m	language:C++	struct:utimbuf	access:public
add_entry	fs/namei.c	/^static struct buffer_head * add_entry(struct m_inode * dir,$/;"	f	language:C++	file:	signature:(struct m_inode * dir, const char * name, int namelen, struct dir_entry ** res_dir)
add_request	kernel/blk_drv/ll_rw_blk.c	/^static void add_request(struct blk_dev_struct * dev, struct request * req)$/;"	f	language:C++	file:	signature:(struct blk_dev_struct * dev, struct request * req)
add_timer	include/linux/sched.h	/^extern void add_timer(long jiffies, void (*fn)(void));$/;"	p	language:C++	signature:(long jiffies, void (*fn)(void))
add_timer	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	f	language:C++	signature:(long jiffies, void (*fn)(void))
add_wait	fs/select.c	/^static void add_wait(struct task_struct ** wait_address, select_table * p)$/;"	f	language:C++	file:	signature:(struct task_struct ** wait_address, select_table * p)
addr	kernel/blk_drv/floppy.c	/^	long addr = (long) CURRENT->buffer;$/;"	l	language:C++
addr	kernel/blk_drv/ramdisk.c	/^	char	*addr;$/;"	l	language:C++
addr	kernel/math/get_put.c	/^	char * addr;$/;"	l	language:C++
address	kernel/math/math_emulate.c	/^	char * address;$/;"	l	language:C++
adjust_clock	kernel/sys.c	/^	void 		adjust_clock();$/;"	p	language:C++	file:	signature:()
adjust_clock	kernel/sys.c	/^void adjust_clock()$/;"	f	language:C++	signature:()
ah	boot/setup.S	/^	cmp	ah,#0x55$/;"	v	language:C++
ah	boot/setup.S	/^	cmp	ah,#3$/;"	v	language:C++
ah	boot/setup.S	/^	mov	[6],ax		! al = video mode, ah = window width$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,#0x00		$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,#0x03	! read cursor pos$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,#0x0e$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,#0x12$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,#0x88$/;"	v	language:C++
ah	boot/setup.S	/^	mov	ah,al$/;"	v	language:C++
ah	boot/setup.S	/^	xchg	ah,al$/;"	v	language:C++
ah	boot/setup.S	/^	xor	ah,ah$/;"	v	language:C++
al	boot/setup.S	/^	add	al,#0x30$/;"	v	language:C++
al	boot/setup.S	/^	and	al,#0x01$/;"	v	language:C++
al	boot/setup.S	/^	cmp	al,#0x09$/;"	v	language:C++
al	boot/setup.S	/^	cmp	al,#0x8b$/;"	v	language:C++
al	boot/setup.S	/^	cmp	al,bh$/;"	v	language:C++
al	boot/setup.S	/^	cmp	al,cl$/;"	v	language:C++
al	boot/setup.S	/^	in	al,dx$/;"	v	language:C++
al	boot/setup.S	/^	mov	[6],ax		! al = video mode, ah = window width$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x0a$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x0c$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x0d$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x1f$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x20$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x55$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0x78$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0xD1		! command write$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,#0xDF		! A20 on$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,(di)$/;"	v	language:C++
al	boot/setup.S	/^	mov	al,bl$/;"	v	language:C++
al	boot/setup.S	/^	sub	al,cl$/;"	v	language:C++
al	boot/setup.S	/^	xchg	al,ah$/;"	v	language:C++
al	boot/setup.S	/^	xor	al,#0xea$/;"	v	language:C++
al	boot/setup.S	/^even7:	mov	al,#0x0c$/;"	v	language:C++
al	boot/setup.S	/^lt100:	add	al,#0x30$/;"	v	language:C++
al	boot/setup.S	/^nonum:	in	al,#0x60	! Quick and dirty...$/;"	v	language:C++
al	boot/setup.S	/^nozero:	sub	al,#0x80$/;"	v	language:C++
al	boot/setup.S	/^skip10:	mov	al,ah$/;"	v	language:C++
al	boot/setup.S	/^zero:	sub	al,#0x0a$/;"	v	language:C++
al	init/main.s	/^	movb %al,-40(%ebp)$/;"	v	language:C++
al	init/main.s	/^	outb %al,%dx$/;"	v	language:C++
al	kernel/asm.s	/^	outb %al,$0x20$/;"	v	language:C++
al	kernel/asm.s	/^	outb %al,$0xF0$/;"	v	language:C++
al	kernel/asm.s	/^	xorb %al,%al$/;"	v	language:C++
al	kernel/asm.s	/^1:	outb %al,$0xA0$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	addb %al,%al$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	andb %al,mode$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	orb %al,%al$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	outb %al,$0x20$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	outb %al,$0x60$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	outb %al,$0x61$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^	outb %al,$0x64$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^1:	movb %al,buf(%edx,%ecx)$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^1:	outb %al,$0x61$/;"	v	language:C++
al	kernel/chr_drv/keyboard.S	/^2:	orb %al,mode$/;"	v	language:C++
al	kernel/chr_drv/rs_io.s	/^	movb %al,buf(%ecx,%ebx)$/;"	v	language:C++
al	kernel/chr_drv/rs_io.s	/^	outb %al,$0x20		\/* EOI *\/$/;"	v	language:C++
al	kernel/chr_drv/rs_io.s	/^	outb %al,%dx$/;"	v	language:C++
al	kernel/sys_call.s	/^	outb %al,$0x20		# EOI to interrupt controller #1$/;"	v	language:C++
al	kernel/sys_call.s	/^	outb %al,$0x20$/;"	v	language:C++
al	kernel/sys_call.s	/^	outb %al,$0xA0		# EOI to interrupt controller #1$/;"	v	language:C++
al	kernel/sys_call.s	/^1:	outb %al,$0x20$/;"	v	language:C++
alarm	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	language:C++	struct:task_struct	access:public
alarm	include/unistd.h	/^int alarm(int sec);$/;"	p	language:C++	signature:(int sec)
alignment_check	kernel/traps.c	/^void alignment_check(void);$/;"	p	language:C++	file:	signature:(void)
already	boot/setup.S	/^	mov	ax,#INITSEG	! this is done in bootsect already, but...$/;"	v	language:C++
alt_map	kernel/chr_drv/keyboard.S	/^	lea alt_map,%ebx$/;"	v	language:C++
arg	lib/open.c	/^	va_list arg;$/;"	l	language:C++
argc	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C++
args	fs/buffer.c	/^	va_list args;$/;"	l	language:C++
args	init/main.c	/^	va_list args;$/;"	l	language:C++
args	kernel/printk.c	/^	va_list args;$/;"	l	language:C++
argv	fs/exec.c	/^	unsigned long *argv,*envp;$/;"	l	language:C++
argv	init/main.c	/^static char * argv[] = { "-\/bin\/sh",NULL };$/;"	v	language:C++	file:
argv_rc	init/main.c	/^static char * argv_rc[] = { "\/bin\/sh", NULL };$/;"	v	language:C++	file:
asctime	include/time.h	/^char * asctime(const struct tm * tp);$/;"	p	language:C++	signature:(const struct tm * tp)
asks	kernel/sys_call.s	/^	jne 2b		# see if we need to switch tasks, or do more signals$/;"	v	language:C++
attr	kernel/chr_drv/console.c	128;"	d	language:C++	file:
audit_ptree	kernel/exit.c	/^void audit_ptree()$/;"	f	language:C++	signature:()
ax	boot/head.s	/^	mov %ax,%ds		# after changing gdt. CS was already$/;"	v	language:C++
ax	boot/head.s	/^	mov %ax,%ds$/;"	v	language:C++
ax	boot/head.s	/^	mov %ax,%es$/;"	v	language:C++
ax	boot/head.s	/^	mov %ax,%fs$/;"	v	language:C++
ax	boot/head.s	/^	mov %ax,%gs$/;"	v	language:C++
ax	boot/setup.S	/^	add	ax,#0x1000$/;"	v	language:C++
ax	boot/setup.S	/^	cmp	ax,#0x9000$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#0x00$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#0x0000$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#0x5019	$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#0x5019$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#INITSEG$/;"	v	language:C++
ax	boot/setup.S	/^	mov	ax,#SETUPSEG	! right, forgot this at first. didn't work :-)$/;"	v	language:C++
ax	boot/setup.S	/^	shl	ax,#1$/;"	v	language:C++
ax	init/main.s	/^	movw %ax,%ds$/;"	v	language:C++
ax	init/main.s	/^	movw %ax,%es$/;"	v	language:C++
ax	init/main.s	/^	movw %ax,%fs$/;"	v	language:C++
ax	init/main.s	/^	movw %ax,%gs$/;"	v	language:C++
ax	init/main.s	/^	movw %ax,-4(%ebp)$/;"	v	language:C++
ax	kernel/asm.s	/^	mov %ax,%ds$/;"	v	language:C++
ax	kernel/asm.s	/^	mov %ax,%es$/;"	v	language:C++
ax	kernel/asm.s	/^	mov %ax,%fs$/;"	v	language:C++
ax	kernel/chr_drv/keyboard.S	/^	mov %ax,%ds$/;"	v	language:C++
ax	kernel/chr_drv/keyboard.S	/^	mov %ax,%es$/;"	v	language:C++
ax	kernel/sys_call.s	/^	mov %ax,%ds$/;"	v	language:C++
ax	kernel/sys_call.s	/^	mov %ax,%es$/;"	v	language:C++
ax	kernel/sys_call.s	/^	mov %ax,%fs$/;"	v	language:C++
b	fs/buffer.c	/^	void * b;$/;"	l	language:C++
b	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	access:public
b	include/linux/math_emu.h	/^	int b:1;$/;"	m	language:C++	struct:swd	access:public
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon4	access:public
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon6	access:public
b	include/linux/math_emu.h	/^	long a,b;$/;"	m	language:C++	struct:__anon7	access:public
b	kernel/chr_drv/tty_io.c	/^	char c, * b=buf;$/;"	l	language:C++
b	kernel/chr_drv/tty_io.c	/^	char c, *b=buf;$/;"	l	language:C++
b	kernel/math/add.c	/^	temp_real a,b;$/;"	l	language:C++
b	kernel/math/compare.c	/^	temp_real b;$/;"	l	language:C++
b	kernel/math/div.c	/^	int a[4],b[4],tmp[4] = {0,0,0,0};$/;"	l	language:C++
b	kernel/sched.c	/^	short b;$/;"	m	language:C++	struct:__anon12	file:	access:public
b_blocknr	include/linux/fs.h	/^	unsigned long b_blocknr;	\/* block number *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_count	include/linux/fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_data	include/linux/fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_dev	include/linux/fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_dirt	include/linux/fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_lock	include/linux/fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	language:C++	struct:buffer_head	access:public
b_next	include/linux/fs.h	/^	struct buffer_head * b_next;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
b_next_free	include/linux/fs.h	/^	struct buffer_head * b_next_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
b_prev	include/linux/fs.h	/^	struct buffer_head * b_prev;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
b_prev_free	include/linux/fs.h	/^	struct buffer_head * b_prev_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
b_uptodate	include/linux/fs.h	/^	unsigned char b_uptodate;$/;"	m	language:C++	struct:buffer_head	access:public
b_wait	include/linux/fs.h	/^	struct task_struct * b_wait;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::task_struct	access:public
back_link	include/linux/sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
bad_flp_intr	kernel/blk_drv/floppy.c	/^static void bad_flp_intr(void)$/;"	f	language:C++	file:	signature:(void)
bad_rw_intr	kernel/blk_drv/hd.c	/^static void bad_rw_intr(void)$/;"	f	language:C++	file:	signature:(void)
bad_rw_intr	kernel/blk_drv/hd.c	/^static void bad_rw_intr(void);$/;"	p	language:C++	file:	signature:(void)
bad_task_ptr	kernel/exit.c	/^int bad_task_ptr(struct task_struct *p)$/;"	f	language:C++	signature:(struct task_struct *p)
base	boot/setup.S	/^	.word	0,0			! idt base=0L$/;"	v	language:C++
base	boot/setup.S	/^	.word	512+gdt,0x9	! gdt base = 0X9xxxx$/;"	v	language:C++
base	fs/exec.c	/^	unsigned long base;$/;"	l	language:C++
base	kernel/chr_drv/console.c	/^	long base, term;$/;"	l	language:C++
base	kernel/math/ea.c	/^	unsigned char ss,index,base;$/;"	l	language:C++
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C++
bdesc	lib/malloc.c	/^	struct bucket_desc	*bdesc, *prev;$/;"	l	language:C++
bdesc	lib/malloc.c	/^	struct bucket_desc	*bdesc;$/;"	l	language:C++
bdesc	lib/malloc.c	/^	struct bucket_desc *bdesc, *first;$/;"	l	language:C++
bdir	lib/malloc.c	/^	struct _bucket_dir	*bdir;$/;"	l	language:C++
beepcount	include/linux/kernel.h	/^extern int beepcount;$/;"	x	language:C++
beepcount	kernel/chr_drv/console.c	/^int beepcount = 0;$/;"	v	language:C++
begbss	boot/setup.S	/^.globl begtext, begdata, begbss, endtext, enddata, endbss$/;"	v	language:C++
begdata	boot/setup.S	/^.globl begtext, begdata, begbss, endtext, enddata, endbss$/;"	v	language:C++
bh	boot/setup.S	/^	mov	[4],bx		! bh = display page$/;"	v	language:C++
bh	boot/setup.S	/^	mov	bh,#0x00$/;"	v	language:C++
bh	boot/setup.S	/^	mov	bh,al$/;"	v	language:C++
bh	boot/setup.S	/^	xor	bh,bh$/;"	v	language:C++
bh	fs/bitmap.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/block_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/buffer.c	/^	struct buffer_head * bh, *tmp;$/;"	l	language:C++
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/buffer.c	/^	struct buffer_head * bh[4];$/;"	l	language:C++
bh	fs/buffer.c	/^	struct buffer_head * tmp, * bh;$/;"	l	language:C++
bh	fs/exec.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/file_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/inode.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/namei.c	/^	struct buffer_head * bh, * name_block;$/;"	l	language:C++
bh	fs/namei.c	/^	struct buffer_head * bh, *dir_block;$/;"	l	language:C++
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/stat.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/super.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	fs/truncate.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	kernel/blk_drv/blk.h	/^	struct buffer_head * bh;$/;"	m	language:C++	struct:request	typeref:struct:request::buffer_head	access:public
bh	kernel/blk_drv/hd.c	/^	struct buffer_head * bh;$/;"	l	language:C++
bh	kernel/blk_drv/ramdisk.c	/^	struct buffer_head *bh;$/;"	l	language:C++
bitop	mm/swap.c	21;"	d	language:C++	file:
bl	boot/setup.S	/^	cmp	bl,#0x10$/;"	v	language:C++
bl	boot/setup.S	/^	mov	bl,#0x10$/;"	v	language:C++
bl	boot/setup.S	/^	mov	bl,al$/;"	v	language:C++
blank_screen	include/linux/kernel.h	/^extern void blank_screen(void);$/;"	p	language:C++	signature:(void)
blank_screen	kernel/chr_drv/console.c	/^void blank_screen()$/;"	f	language:C++	signature:()
blankcount	include/linux/kernel.h	/^extern int blankcount;$/;"	x	language:C++
blankcount	kernel/chr_drv/console.c	/^int blankcount = 0;$/;"	v	language:C++
blanked	kernel/sched.c	/^	static int blanked = 0;$/;"	l	language:C++	file:
blankinterval	include/linux/kernel.h	/^extern int blankinterval;$/;"	x	language:C++
blankinterval	kernel/chr_drv/console.c	/^int blankinterval = 0;$/;"	v	language:C++
blk_dev	kernel/blk_drv/blk.h	/^extern struct blk_dev_struct blk_dev[NR_BLK_DEV];$/;"	x	language:C++
blk_dev	kernel/blk_drv/ll_rw_blk.c	/^struct blk_dev_struct blk_dev[NR_BLK_DEV] = {$/;"	v	language:C++	typeref:struct:blk_dev_struct
blk_dev_init	init/main.c	/^extern void blk_dev_init(void);$/;"	p	language:C++	file:	signature:(void)
blk_dev_init	kernel/blk_drv/ll_rw_blk.c	/^void blk_dev_init(void)$/;"	f	language:C++	signature:(void)
blk_dev_struct	kernel/blk_drv/blk.h	/^struct blk_dev_struct {$/;"	s	language:C++
blk_dev_struct::current_request	kernel/blk_drv/blk.h	/^	struct request * current_request;$/;"	m	language:C++	struct:blk_dev_struct	typeref:struct:blk_dev_struct::request	access:public
blk_dev_struct::request_fn	kernel/blk_drv/blk.h	/^	void (*request_fn)(void);$/;"	m	language:C++	struct:blk_dev_struct	access:public
blk_size	fs/block_dev.c	/^extern int *blk_size[];$/;"	x	language:C++
blk_size	fs/inode.c	/^extern int *blk_size[];$/;"	x	language:C++
blk_size	kernel/blk_drv/blk.h	/^extern int * blk_size[NR_BLK_DEV];$/;"	x	language:C++
blk_size	kernel/blk_drv/ll_rw_blk.c	/^int * blk_size[NR_BLK_DEV] = { NULL, NULL, };$/;"	v	language:C++
blk_size	mm/swap.c	/^	extern int *blk_size[];$/;"	x	language:C++
block	fs/block_dev.c	/^	int block = *pos >> BLOCK_SIZE_BITS;$/;"	l	language:C++
block	fs/file_dev.c	/^	int block,c;$/;"	l	language:C++
block	fs/inode.c	/^	int block;$/;"	l	language:C++
block	fs/namei.c	/^	int block,i;$/;"	l	language:C++
block	fs/namei.c	/^	int nr,block;$/;"	l	language:C++
block	fs/super.c	/^	int i,block;$/;"	l	language:C++
block	kernel/blk_drv/floppy.c	/^	unsigned int block;$/;"	l	language:C++
block	kernel/blk_drv/hd.c	/^	unsigned int block,dev;$/;"	l	language:C++
block	kernel/blk_drv/ramdisk.c	/^	int		block = 256;	\/* Start at block 256 *\/$/;"	l	language:C++
block	mm/memory.c	/^	int block,i;$/;"	l	language:C++
block_busy	fs/truncate.c	/^	int block_busy;$/;"	l	language:C++
block_read	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	f	language:C++	signature:(int dev, unsigned long * pos, char * buf, int count)
block_read	fs/read_write.c	/^extern int block_read(int dev, off_t * pos, char * buf, int count);$/;"	p	language:C++	file:	signature:(int dev, off_t * pos, char * buf, int count)
block_write	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	f	language:C++	signature:(int dev, long * pos, char * buf, int count)
block_write	fs/read_write.c	/^extern int block_write(int dev, off_t * pos, char * buf, int count);$/;"	p	language:C++	file:	signature:(int dev, off_t * pos, char * buf, int count)
blocked	include/linux/sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	language:C++	struct:task_struct	access:public
bmap	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	f	language:C++	signature:(struct m_inode * inode,int block)
bmap	include/linux/fs.h	/^extern int bmap(struct m_inode * inode,int block);$/;"	p	language:C++	signature:(struct m_inode * inode,int block)
boot_ind	include/linux/hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	language:C++	struct:partition	access:public
bottom	kernel/chr_drv/console.c	119;"	d	language:C++	file:
bounds	kernel/traps.c	/^void bounds(void);$/;"	p	language:C++	file:	signature:(void)
bread	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	f	language:C++	signature:(int dev,int block)
bread	include/linux/fs.h	/^extern struct buffer_head * bread(int dev,int block);$/;"	p	language:C++	signature:(int dev,int block)
bread_page	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	f	language:C++	signature:(unsigned long address,int dev,int b[4])
bread_page	include/linux/fs.h	/^extern void bread_page(unsigned long addr,int dev,int b[4]);$/;"	p	language:C++	signature:(unsigned long addr,int dev,int b[4])
breada	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	f	language:C++	signature:(int dev,int first, ...)
breada	include/linux/fs.h	/^extern struct buffer_head * breada(int dev,int block,...);$/;"	p	language:C++	signature:(int dev,int block,...)
brelse	fs/buffer.c	/^void brelse(struct buffer_head * buf)$/;"	f	language:C++	signature:(struct buffer_head * buf)
brelse	include/linux/fs.h	/^extern void brelse(struct buffer_head * buf);$/;"	p	language:C++	signature:(struct buffer_head * buf)
brk	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
brk	include/unistd.h	/^int brk(void * end_data_segment);$/;"	p	language:C++	signature:(void * end_data_segment)
bswapw	kernel/math/math_emulate.c	40;"	d	language:C++	file:
bucket_desc	lib/malloc.c	/^struct bucket_desc {	\/* 16 bytes *\/$/;"	s	language:C++	file:
bucket_desc::bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
bucket_desc::freeptr	lib/malloc.c	/^	void			*freeptr;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
bucket_desc::next	lib/malloc.c	/^	struct bucket_desc	*next;$/;"	m	language:C++	struct:bucket_desc	typeref:struct:bucket_desc::bucket_desc	file:	access:public
bucket_desc::page	lib/malloc.c	/^	void			*page;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
bucket_desc::refcnt	lib/malloc.c	/^	unsigned short		refcnt;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
bucket_dir	lib/malloc.c	/^struct _bucket_dir bucket_dir[] = {$/;"	v	language:C++	typeref:struct:_bucket_dir
bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
buf	fs/char_dev.c	/^			put_fs_byte(inb(i),buf++);$/;"	l	language:C++
buf	fs/exec.c	/^		char buf[128], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C++
buf	include/linux/tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	language:C++	struct:tty_queue	access:public
buf	kernel/chr_drv/console.c	/^	char *sptr, *buf = (char *)arg;$/;"	l	language:C++
buf	kernel/printk.c	/^static char buf[1024];$/;"	v	language:C++	file:
buf	tools/build.c	/^	char buf[1024];$/;"	l	language:C++
buffer	kernel/blk_drv/blk.h	/^	char * buffer;$/;"	m	language:C++	struct:request	access:public
buffer_block	include/linux/fs.h	/^typedef char buffer_block[BLOCK_SIZE];$/;"	t	language:C++
buffer_head	include/linux/fs.h	/^struct buffer_head {$/;"	s	language:C++
buffer_head::b_blocknr	include/linux/fs.h	/^	unsigned long b_blocknr;	\/* block number *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_count	include/linux/fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_data	include/linux/fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_dev	include/linux/fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_dirt	include/linux/fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_lock	include/linux/fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_next	include/linux/fs.h	/^	struct buffer_head * b_next;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
buffer_head::b_next_free	include/linux/fs.h	/^	struct buffer_head * b_next_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
buffer_head::b_prev	include/linux/fs.h	/^	struct buffer_head * b_prev;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
buffer_head::b_prev_free	include/linux/fs.h	/^	struct buffer_head * b_prev_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::buffer_head	access:public
buffer_head::b_uptodate	include/linux/fs.h	/^	unsigned char b_uptodate;$/;"	m	language:C++	struct:buffer_head	access:public
buffer_head::b_wait	include/linux/fs.h	/^	struct task_struct * b_wait;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head::task_struct	access:public
buffer_init	fs/buffer.c	/^void buffer_init(long buffer_end)$/;"	f	language:C++	signature:(long buffer_end)
buffer_init	include/linux/fs.h	/^void buffer_init(long buffer_end);$/;"	p	language:C++	signature:(long buffer_end)
buffer_memory_end	init/main.c	/^static long buffer_memory_end = 0;$/;"	v	language:C++	file:
buffer_wait	fs/buffer.c	/^static struct task_struct * buffer_wait = NULL;$/;"	v	language:C++	typeref:struct:task_struct	file:
c	fs/file_dev.c	/^	int block,c;$/;"	l	language:C++
c	fs/namei.c	/^	char c;$/;"	l	language:C++
c	fs/stat.c	/^	char c;$/;"	l	language:C++
c	kernel/blk_drv/hd.c	/^	unsigned char c;$/;"	l	language:C++
c	kernel/chr_drv/console.c	/^	char c;$/;"	l	language:C++
c	kernel/chr_drv/pty.c	/^	char c;$/;"	l	language:C++
c	kernel/chr_drv/tty_io.c	/^	char c, * b=buf;$/;"	l	language:C++
c	kernel/chr_drv/tty_io.c	/^	char c, *b=buf;$/;"	l	language:C++
c	kernel/chr_drv/tty_io.c	/^	signed char c;$/;"	l	language:C++
c	kernel/math/get_put.c	/^	unsigned char c;$/;"	l	language:C++
c	kernel/math/math_emulate.c	/^	temp_real_unaligned c;$/;"	l	language:C++
c	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C++
c	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C++
c	tools/build.c	/^	int i,c,id;$/;"	l	language:C++
c0	include/linux/math_emu.h	/^	int c0:1;$/;"	m	language:C++	struct:swd	access:public
c1	include/linux/math_emu.h	/^	int c1:1;$/;"	m	language:C++	struct:swd	access:public
c2	include/linux/math_emu.h	/^	int c2:1;$/;"	m	language:C++	struct:swd	access:public
c3	include/linux/math_emu.h	/^	int c3:1;$/;"	m	language:C++	struct:swd	access:public
c_cc	include/termios.h	/^	cc_t c_cc[NCCS];		\/* control characters *\/$/;"	m	language:C++	struct:termios	access:public
c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	language:C++	struct:termio	access:public
c_cflag	include/termios.h	/^	tcflag_t c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termios	access:public
c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termio	access:public
c_iflag	include/termios.h	/^	tcflag_t c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termios	access:public
c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termio	access:public
c_lflag	include/termios.h	/^	tcflag_t c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termios	access:public
c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termio	access:public
c_line	include/termios.h	/^	cc_t c_line;			\/* line discipline *\/$/;"	m	language:C++	struct:termios	access:public
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termio	access:public
c_oflag	include/termios.h	/^	tcflag_t c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termios	access:public
c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termio	access:public
call_addr	fs/char_dev.c	/^	crw_ptr call_addr;$/;"	l	language:C++
callable	kernel/blk_drv/hd.c	/^	static int callable = 1;$/;"	l	language:C++	file:
can_do_colour	kernel/chr_drv/console.c	/^static int can_do_colour = 0;$/;"	v	language:C++	file:
caps	kernel/chr_drv/keyboard.S	/^	.long alt,do_self,caps,func		\/* 38-3B alt sp caps f1 *\/$/;"	v	language:C++
cc_t	include/sys/types.h	/^typedef unsigned char cc_t;$/;"	t	language:C++
cfgetispeed	include/termios.h	/^extern speed_t cfgetispeed(struct termios *termios_p);$/;"	p	language:C++	signature:(struct termios *termios_p)
cfgetospeed	include/termios.h	/^extern speed_t cfgetospeed(struct termios *termios_p);$/;"	p	language:C++	signature:(struct termios *termios_p)
cfsetispeed	include/termios.h	/^extern int cfsetispeed(struct termios *termios_p, speed_t speed);$/;"	p	language:C++	signature:(struct termios *termios_p, speed_t speed)
cfsetospeed	include/termios.h	/^extern int cfsetospeed(struct termios *termios_p, speed_t speed);$/;"	p	language:C++	signature:(struct termios *termios_p, speed_t speed)
chain	lib/malloc.c	/^	struct bucket_desc	*chain;$/;"	m	language:C++	struct:_bucket_dir	typeref:struct:_bucket_dir::bucket_desc	file:	access:public
change_console	kernel/chr_drv/tty_io.c	/^void change_console(unsigned int new_console)$/;"	f	language:C++	signature:(unsigned int new_console)
change_ldt	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	f	language:C++	file:	signature:(unsigned long text_size,unsigned long * page)
change_speed	kernel/chr_drv/tty_ioctl.c	/^static void change_speed(struct tty_struct * tty)$/;"	f	language:C++	file:	signature:(struct tty_struct * tty)
chars	fs/block_dev.c	/^	int chars;$/;"	l	language:C++
chars	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C++
chars	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C++
chars	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C++
chdir	include/unistd.h	/^int chdir(const char * filename);$/;"	p	language:C++	signature:(const char * filename)
check_char_dev	fs/open.c	/^static int check_char_dev(struct m_inode * inode, int dev, int flag)$/;"	f	language:C++	file:	signature:(struct m_inode * inode, int dev, int flag)
check_disk_change	fs/buffer.c	/^void check_disk_change(int dev)$/;"	f	language:C++	signature:(int dev)
check_disk_change	include/linux/fs.h	/^extern void check_disk_change(int dev);$/;"	p	language:C++	signature:(int dev)
check_ex	fs/select.c	/^static int check_ex(select_table * wait, struct m_inode * inode)$/;"	f	language:C++	file:	signature:(select_table * wait, struct m_inode * inode)
check_in	fs/select.c	/^static int check_in(select_table * wait, struct m_inode * inode)$/;"	f	language:C++	file:	signature:(select_table * wait, struct m_inode * inode)
check_out	fs/select.c	/^static int check_out(select_table * wait, struct m_inode * inode)$/;"	f	language:C++	file:	signature:(select_table * wait, struct m_inode * inode)
checkin	kernel/chr_drv/console.c	124;"	d	language:C++	file:
chmod	include/sys/stat.h	/^extern int chmod(const char *_path, mode_t mode);$/;"	p	language:C++	signature:(const char *_path, mode_t mode)
chmod	include/unistd.h	/^int chmod(const char * filename, mode_t mode);$/;"	p	language:C++	signature:(const char * filename, mode_t mode)
chown	include/unistd.h	/^int chown(const char * filename, uid_t owner, gid_t group);$/;"	p	language:C++	signature:(const char * filename, uid_t owner, gid_t group)
chr_dev_init	init/main.c	/^extern void chr_dev_init(void);$/;"	p	language:C++	file:	signature:(void)
chr_dev_init	kernel/chr_drv/tty_io.c	/^void chr_dev_init(void)$/;"	f	language:C++	signature:(void)
chroot	include/unistd.h	/^int chroot(const char * filename);$/;"	p	language:C++	signature:(const char * filename)
cl	boot/setup.S	/^	add	cl,#0x80$/;"	v	language:C++
cl	boot/setup.S	/^	mov	cl,#0x0a$/;"	v	language:C++
cl	boot/setup.S	/^	mov	cl,(di)$/;"	v	language:C++
cld	boot/setup.S	/^	cld			! 'direction'=0, movs moves forward$/;"	v	language:C++
clear_Cx	kernel/math/compare.c	13;"	d	language:C++	file:
clear_bit	fs/bitmap.c	25;"	d	language:C++	file:
clear_block	fs/bitmap.c	13;"	d	language:C++	file:
cli	include/asm/system.h	17;"	d	language:C++
clock	include/time.h	/^clock_t clock(void);$/;"	p	language:C++	signature:(void)
clock_t	include/time.h	/^typedef long clock_t;$/;"	t	language:C++
close	include/unistd.h	/^int close(int fildes);$/;"	p	language:C++	signature:(int fildes)
close_on_exec	include/linux/sched.h	/^	unsigned long close_on_exec;$/;"	m	language:C++	struct:task_struct	access:public
cmd	kernel/blk_drv/blk.h	/^	int cmd;		\/* READ or WRITE *\/$/;"	m	language:C++	struct:request	access:public
cmos_disks	kernel/blk_drv/hd.c	/^	unsigned char cmos_disks;$/;"	l	language:C++
code	kernel/math/math_emulate.c	/^	unsigned short code;$/;"	l	language:C++
code_base	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C++
code_limit	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C++
code_limit	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C++
command	kernel/blk_drv/floppy.c	/^static unsigned char command = 0;$/;"	v	language:C++	file:
con_init	include/linux/tty.h	/^void con_init(void);$/;"	p	language:C++	signature:(void)
con_init	kernel/chr_drv/console.c	/^void con_init(void)$/;"	f	language:C++	signature:(void)
con_queues	kernel/chr_drv/tty_io.c	65;"	d	language:C++	file:
con_table	kernel/chr_drv/tty_io.c	70;"	d	language:C++	file:
con_write	include/linux/tty.h	/^void con_write(struct tty_struct * tty);$/;"	p	language:C++	signature:(struct tty_struct * tty)
con_write	kernel/chr_drv/console.c	/^void con_write(struct tty_struct * tty)$/;"	f	language:C++	signature:(struct tty_struct * tty)
console_print	include/linux/kernel.h	/^void console_print(const char * str);$/;"	p	language:C++	signature:(const char * str)
console_print	kernel/chr_drv/console.c	/^void console_print(const char * b)$/;"	f	language:C++	signature:(const char * b)
controller_ready	kernel/blk_drv/hd.c	/^static int controller_ready(void)$/;"	f	language:C++	file:	signature:(void)
coprocessor_error	kernel/traps.c	/^void coprocessor_error(void);$/;"	p	language:C++	file:	signature:(void)
coprocessor_segment_overrun	kernel/traps.c	/^void coprocessor_segment_overrun(void);$/;"	p	language:C++	file:	signature:(void)
copy_buffer	kernel/blk_drv/floppy.c	156;"	d	language:C++	file:
copy_mem	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	f	language:C++	signature:(int nr,struct task_struct * p)
copy_page	mm/memory.c	44;"	d	language:C++	file:
copy_page_tables	include/linux/sched.h	/^extern int copy_page_tables(unsigned long from, unsigned long to, long size);$/;"	p	language:C++	signature:(unsigned long from, unsigned long to, long size)
copy_page_tables	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	f	language:C++	signature:(unsigned long from,unsigned long to,long size)
copy_process	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	f	language:C++	signature:(int nr,long ebp,long edi,long esi,long gs,long none, long ebx,long ecx,long edx, long orig_eax, long fs,long es,long ds, long eip,long cs,long eflags,long esp,long ss)
copy_strings	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	f	language:C++	file:	signature:(int argc,char ** argv,unsigned long *page, unsigned long p, int from_kmem)
copy_to_cooked	include/linux/tty.h	/^void copy_to_cooked(struct tty_struct * tty);$/;"	p	language:C++	signature:(struct tty_struct * tty)
copy_to_cooked	kernel/chr_drv/tty_io.c	/^void copy_to_cooked(struct tty_struct * tty)$/;"	f	language:C++	signature:(struct tty_struct * tty)
core_dump	kernel/signal.c	/^int core_dump(long signr)$/;"	f	language:C++	signature:(long signr)
count	fs/exec.c	/^static int count(char ** argv)$/;"	f	language:C++	file:	signature:(char ** argv)
count	fs/select.c	/^	int count;$/;"	l	language:C++
counter	include/linux/sched.h	/^	long counter;$/;"	m	language:C++	struct:task_struct	access:public
counter	kernel/blk_drv/floppy.c	/^	int counter;$/;"	l	language:C++
counter	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C++
counter	mm/swap.c	/^	int counter = VM_PAGES;$/;"	l	language:C++
cp	fs/exec.c	/^		char buf[128], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C++
cp	kernel/blk_drv/ramdisk.c	/^	char		*cp;		\/* Move pointer *\/$/;"	l	language:C++
cp	kernel/blk_drv/ramdisk.c	/^	char	*cp;$/;"	l	language:C++
cp	lib/malloc.c	/^		char		*cp;$/;"	l	language:C++
cp_stat	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	f	language:C++	file:	signature:(struct m_inode * inode, struct stat * statbuf)
cr	kernel/chr_drv/console.c	/^static void cr(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
cr0	boot/head.s	/^	movl %cr0,%eax		# check math chip$/;"	v	language:C++
cr0	boot/head.s	/^	movl %cr0,%eax$/;"	v	language:C++
cr0	kernel/sys_call.s	/^	movl %cr0,%eax$/;"	v	language:C++
cr2	mm/page.s	/^	movl %cr2,%edx$/;"	v	language:C++
cr3	include/linux/sched.h	/^	long	cr3;$/;"	m	language:C++	struct:tss_struct	access:public
cr_flag	kernel/chr_drv/tty_io.c	/^	static cr_flag=0;$/;"	l	language:C++	file:
creat	include/fcntl.h	/^extern int creat(const char * filename,mode_t mode);$/;"	p	language:C++	signature:(const char * filename,mode_t mode)
creat	include/unistd.h	/^int creat(const char * filename, mode_t mode);$/;"	p	language:C++	signature:(const char * filename, mode_t mode)
create_block	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	f	language:C++	signature:(struct m_inode * inode, int block)
create_block	include/linux/fs.h	/^extern int create_block(struct m_inode * inode,int block);$/;"	p	language:C++	signature:(struct m_inode * inode,int block)
create_tables	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	f	language:C++	file:	signature:(char * p,int argc,int envc)
crw_ptr	fs/char_dev.c	/^typedef (*crw_ptr)(int rw,unsigned minor,char * buf,int count,off_t * pos);$/;"	t	language:C++	file:
crw_table	fs/char_dev.c	/^static crw_ptr crw_table[]={$/;"	v	language:C++	file:
cs	include/linux/sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
csi_J	kernel/chr_drv/console.c	/^static void csi_J(int currcons, int vpar)$/;"	f	language:C++	file:	signature:(int currcons, int vpar)
csi_K	kernel/chr_drv/console.c	/^static void csi_K(int currcons, int vpar)$/;"	f	language:C++	file:	signature:(int currcons, int vpar)
csi_L	kernel/chr_drv/console.c	/^static void csi_L(int currcons, unsigned int nr)$/;"	f	language:C++	file:	signature:(int currcons, unsigned int nr)
csi_M	kernel/chr_drv/console.c	/^static void csi_M(int currcons, unsigned int nr)$/;"	f	language:C++	file:	signature:(int currcons, unsigned int nr)
csi_P	kernel/chr_drv/console.c	/^static void csi_P(int currcons, unsigned int nr)$/;"	f	language:C++	file:	signature:(int currcons, unsigned int nr)
csi_at	kernel/chr_drv/console.c	/^static void csi_at(int currcons, unsigned int nr)$/;"	f	language:C++	file:	signature:(int currcons, unsigned int nr)
csi_m	kernel/chr_drv/console.c	/^void csi_m(int currcons )$/;"	f	language:C++	signature:(int currcons )
cstime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
ctime	include/time.h	/^char * ctime(const time_t * tp);$/;"	p	language:C++	signature:(const time_t * tp)
ctl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
ctrl	kernel/chr_drv/keyboard.S	/^	.long do_self,ctrl,do_self,do_self	\/* 1C-1F enter ctrl a s *\/$/;"	v	language:C++
cur_rate	kernel/blk_drv/floppy.c	/^static int cur_rate = -1;$/;"	v	language:C++	file:
cur_spec1	kernel/blk_drv/floppy.c	/^static int cur_spec1 = -1;$/;"	v	language:C++	file:
currcons	kernel/chr_drv/console.c	/^	int currcons = 0;$/;"	l	language:C++
currcons	kernel/chr_drv/console.c	/^	int currcons = fg_console;$/;"	l	language:C++
currcons	kernel/chr_drv/console.c	/^	int currcons, l;$/;"	l	language:C++
currcons	kernel/chr_drv/console.c	/^	int currcons;$/;"	l	language:C++
current	include/linux/sched.h	/^extern struct task_struct *current;$/;"	x	language:C++
current	kernel/sched.c	/^struct task_struct *current = &(init_task.task);$/;"	v	language:C++	typeref:struct:task_struct
current_DOR	kernel/blk_drv/floppy.c	/^extern unsigned char current_DOR;$/;"	x	language:C++
current_DOR	kernel/sched.c	/^unsigned char current_DOR = 0x0C;$/;"	v	language:C++
current_drive	kernel/blk_drv/floppy.c	/^static unsigned char current_drive = 0;$/;"	v	language:C++	file:
current_request	kernel/blk_drv/blk.h	/^	struct request * current_request;$/;"	m	language:C++	struct:blk_dev_struct	typeref:struct:blk_dev_struct::request	access:public
current_track	kernel/blk_drv/floppy.c	/^static unsigned char current_track = 255;$/;"	v	language:C++	file:
cursor	kernel/chr_drv/keyboard.S	/^	.long cursor,cursor,cursor,cursor	\/* 50-53 dn pgdn ins del *\/$/;"	v	language:C++
cursor	kernel/chr_drv/keyboard.S	/^	.long cursor,cursor,do_self,cursor	\/* 48-4B up pgup - left *\/$/;"	v	language:C++
cursor	kernel/chr_drv/keyboard.S	/^	.long cursor,cursor,do_self,cursor	\/* 4C-4F n5 right + end *\/$/;"	v	language:C++
cutime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
cwd	include/linux/sched.h	/^	long	cwd;$/;"	m	language:C++	struct:i387_struct	access:public
cx	boot/setup.S	/^	lea	cx,selmod$/;"	v	language:C++
cx	boot/setup.S	/^	mov	cx,#0x01$/;"	v	language:C++
cx	boot/setup.S	/^	mov	cx,#0x10$/;"	v	language:C++
cx	boot/setup.S	/^	mov 	cx,#0x8000$/;"	v	language:C++
cx	boot/setup.S	/^	xor	cx,cx$/;"	v	language:C++
cyl	include/linux/hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
cyl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
cyl	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C++
d_inode	include/linux/fs.h	/^struct d_inode {$/;"	s	language:C++
d_inode::i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_time	include/linux/fs.h	/^	unsigned long i_time;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:d_inode	access:public
d_inode::i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:d_inode	access:public
d_super_block	include/linux/fs.h	/^struct d_super_block {$/;"	s	language:C++
d_super_block::s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:d_super_block	access:public
d_super_block::s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:d_super_block	access:public
daddr_t	include/sys/types.h	/^typedef int daddr_t;$/;"	t	language:C++
data	include/linux/tty.h	/^	unsigned long data;$/;"	m	language:C++	struct:tty_queue	access:public
data_base	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C++
data_limit	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C++
data_limit	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C++
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C++
de	include/linux/math_emu.h	/^	int de:1;$/;"	m	language:C++	struct:swd	access:public
debug	kernel/traps.c	/^void debug(void);$/;"	p	language:C++	file:	signature:(void)
def_attr	kernel/chr_drv/console.c	134;"	d	language:C++	file:
del	kernel/chr_drv/console.c	/^static void del(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
delete_char	kernel/chr_drv/console.c	/^static void delete_char(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
delete_line	kernel/chr_drv/console.c	/^static void delete_line(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
desc_struct	include/linux/head.h	/^typedef struct desc_struct {$/;"	s	language:C++
desc_struct::a	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	access:public
desc_struct::b	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	access:public
desc_table	include/linux/head.h	/^} desc_table[256];$/;"	t	language:C++	typeref:struct:desc_struct
dest	kernel/sys.c	/^	unsigned long	*lp, *lpend, *dest;$/;"	l	language:C++
dev	fs/ioctl.c	/^	int dev,mode;$/;"	l	language:C++
dev	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C++
dev	fs/super.c	/^	int dev;$/;"	l	language:C++
dev	kernel/blk_drv/blk.h	/^	int dev;		\/* -1 if no request *\/$/;"	m	language:C++	struct:request	access:public
dev	kernel/blk_drv/hd.c	/^	unsigned int block,dev;$/;"	l	language:C++
dev_i	fs/super.c	/^	struct m_inode * dev_i, * dir_i;$/;"	l	language:C++
dev_t	include/sys/types.h	/^typedef unsigned short dev_t;$/;"	t	language:C++
device_not_available	kernel/traps.c	/^void device_not_available(void);$/;"	p	language:C++	file:	signature:(void)
di	boot/setup.S	/^	add	di,ax$/;"	v	language:C++
di	boot/setup.S	/^	lea	di,motseng$/;"	v	language:C++
di	boot/setup.S	/^	lea	di,movideo7$/;"	v	language:C++
di	boot/setup.S	/^	mov	di,#0x0080$/;"	v	language:C++
di	boot/setup.S	/^	mov	di,#0x0090$/;"	v	language:C++
di	boot/setup.S	/^	sub	di,di$/;"	v	language:C++
die	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	f	language:C++	file:	signature:(char * str,long esp_ptr,long nr)
die	tools/build.c	/^void die(char * str)$/;"	f	language:C++	signature:(char * str)
difftime	include/time.h	/^double difftime(time_t time2, time_t time1);$/;"	p	language:C++	signature:(time_t time2, time_t time1)
digits	kernel/vsprintf.c	/^	const char *digits="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	l	language:C++
dir	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C++
dir	fs/namei.c	/^	struct m_inode * dir, *inode;$/;"	l	language:C++
dir	fs/namei.c	/^	struct m_inode * dir;$/;"	l	language:C++
dir	fs/namei.c	/^	struct m_inode * oldinode, * dir;$/;"	l	language:C++
dir	mm/memory.c	/^	unsigned long * dir, nr;$/;"	l	language:C++
dir_block	fs/namei.c	/^	struct buffer_head * bh, *dir_block;$/;"	l	language:C++
dir_entry	include/linux/fs.h	/^struct dir_entry {$/;"	s	language:C++
dir_entry	mm/swap.c	/^	static int dir_entry = FIRST_VM_PAGE>>10;$/;"	l	language:C++	file:
dir_entry::inode	include/linux/fs.h	/^	unsigned short inode;$/;"	m	language:C++	struct:dir_entry	access:public
dir_entry::name	include/linux/fs.h	/^	char name[NAME_LEN];$/;"	m	language:C++	struct:dir_entry	access:public
dir_i	fs/super.c	/^	struct m_inode * dev_i, * dir_i;$/;"	l	language:C++
dir_namei	fs/namei.c	/^static struct m_inode * dir_namei(const char * pathname,$/;"	f	language:C++	file:	signature:(const char * pathname, int * namelen, const char ** name, struct m_inode * base)
display_desc	kernel/chr_drv/console.c	/^	char *display_desc = "????";$/;"	l	language:C++
display_ptr	kernel/chr_drv/console.c	/^	char *display_ptr;$/;"	l	language:C++
div64	kernel/math/div.c	/^static void div64(int * a, int * b, int * c)$/;"	f	language:C++	file:	signature:(int * a, int * b, int * c)
div_t	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	t	language:C++	typeref:struct:__anon2
divide_error	kernel/traps.c	/^void divide_error(void);$/;"	p	language:C++	file:	signature:(void)
dl	boot/setup.S	/^	mov	dl,#0x81$/;"	v	language:C++
do_alignment_check	kernel/traps.c	/^void do_alignment_check(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_bounds	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_coprocessor_error	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_coprocessor_segment_overrun	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_debug	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_device_not_available	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_div	kernel/vsprintf.c	35;"	d	language:C++	file:
do_divide_error	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_double_fault	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_emu	kernel/math/math_emulate.c	/^static void do_emu(struct info * info)$/;"	f	language:C++	file:	signature:(struct info * info)
do_execve	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	f	language:C++	signature:(unsigned long * eip,long tmp,char * filename, char ** argv, char ** envp)
do_exit	include/linux/kernel.h	/^volatile void do_exit(long error_code);$/;"	p	language:C++	signature:(long error_code)
do_exit	kernel/exit.c	/^volatile void do_exit(long code)$/;"	f	language:C++	signature:(long code)
do_fd_request	kernel/blk_drv/floppy.c	/^void do_fd_request(void)$/;"	f	language:C++	signature:(void)
do_floppy_timer	kernel/sched.c	/^void do_floppy_timer(void)$/;"	f	language:C++	signature:(void)
do_general_protection	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_hd_request	kernel/blk_drv/hd.c	/^void do_hd_request(void)$/;"	f	language:C++	signature:(void)
do_int3	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	f	language:C++	signature:(long * esp, long error_code, long fs,long es,long ds, long ebp,long esi,long edi, long edx,long ecx,long ebx,long eax)
do_invalid_TSS	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	f	language:C++	signature:(long esp,long error_code)
do_invalid_op	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_nmi	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_no_page	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	f	language:C++	signature:(unsigned long error_code,unsigned long address)
do_overflow	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_rd_request	kernel/blk_drv/ramdisk.c	/^void do_rd_request(void)$/;"	f	language:C++	signature:(void)
do_reserved	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	f	language:C++	signature:(long esp, long error_code)
do_screendump	kernel/chr_drv/console.c	/^int do_screendump(int arg)$/;"	f	language:C++	signature:(int arg)
do_segment_not_present	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	f	language:C++	signature:(long esp,long error_code)
do_select	fs/select.c	/^int do_select(fd_set in, fd_set out, fd_set ex,$/;"	f	language:C++	signature:(fd_set in, fd_set out, fd_set ex, fd_set *inp, fd_set *outp, fd_set *exp)
do_self	kernel/chr_drv/keyboard.S	/^	.long alt,do_self,caps,func		\/* 38-3B alt sp caps f1 *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long cursor,cursor,do_self,cursor	\/* 48-4B up pgup - left *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long cursor,cursor,do_self,cursor	\/* 4C-4F n5 right + end *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,ctrl,do_self,do_self	\/* 1C-1F enter ctrl a s *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 04-07 3 4 5 6 *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 08-0B 7 8 9 0 *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 0C-0F + ' bs tab *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 10-13 q w e r *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 14-17 t y u i *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 18-1B o p } ^ *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 20-23 d f g h *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 24-27 j k l | *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 2C-2F z x c v *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,do_self,do_self	\/* 30-33 b n m , *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,lshift,do_self	\/* 28-2B { para lshift , *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long none,do_self,do_self,do_self	\/* 00-03 s0 esc 1 2 *\/$/;"	v	language:C++
do_self	kernel/chr_drv/keyboard.S	/^	.long none,none,do_self,func		\/* 54-57 sysreq ? < f11 *\/$/;"	v	language:C++
do_signal	kernel/signal.c	/^int do_signal(long signr,long eax,long ebx, long ecx, long edx, long orig_eax,$/;"	f	language:C++	signature:(long signr,long eax,long ebx, long ecx, long edx, long orig_eax, long fs, long es, long ds, long eip, long cs, long eflags, unsigned long * esp, long ss)
do_stack_segment	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	f	language:C++	signature:(long esp,long error_code)
do_timer	kernel/sched.c	/^void do_timer(long cpl)$/;"	f	language:C++	signature:(long cpl)
do_tty_interrupt	kernel/chr_drv/tty_io.c	/^void do_tty_interrupt(int tty)$/;"	f	language:C++	signature:(int tty)
do_wp_page	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	f	language:C++	signature:(unsigned long error_code,unsigned long address)
double_fault	kernel/traps.c	/^void double_fault(void);$/;"	p	language:C++	file:	signature:(void)
drive	kernel/blk_drv/hd.c	/^	int i,drive;$/;"	l	language:C++
drive_busy	kernel/blk_drv/hd.c	/^static int drive_busy(void)$/;"	f	language:C++	file:	signature:(void)
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	s	language:C++	file:
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	v	language:C++	typeref:struct:drive_info
drive_info::dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	language:C++	struct:drive_info	file:	access:public
ds	boot/setup.S	/^	mov	ds,ax		! source segment$/;"	v	language:C++
ds	boot/setup.S	/^	mov	ds,ax$/;"	v	language:C++
ds	include/linux/sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
ds	kernel/sys_call.s	/^	movl $0x10,%edx		# set up ds,es to kernel space$/;"	v	language:C++
dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	language:C++	struct:drive_info	file:	access:public
dup	include/unistd.h	/^int dup(int fildes);$/;"	p	language:C++	signature:(int fildes)
dup2	include/unistd.h	/^int dup2(int oldfd, int newfd);$/;"	p	language:C++	signature:(int oldfd, int newfd)
dupfd	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	f	language:C++	file:	signature:(unsigned int fd, unsigned int arg)
dx	boot/head.s	/^	movw %dx,%ax		\/* selector = 0x0008 = cs *\/$/;"	v	language:C++
dx	boot/setup.S	/^	mov	dx,#0x3b4$/;"	v	language:C++
dx	boot/setup.S	/^	mov	dx,#0x3d4$/;"	v	language:C++
dx	boot/setup.S	/^	out	dx,al$/;"	v	language:C++
dx	boot/setup.S	/^notsen:	mov	dx,#0x3cc		! Check Video7 'clues'$/;"	v	language:C++
dx	init/main.s	/^	inb %dx,%al$/;"	v	language:C++
dx	kernel/asm.s	/^	mov %dx,%ds$/;"	v	language:C++
dx	kernel/asm.s	/^	mov %dx,%es$/;"	v	language:C++
dx	kernel/asm.s	/^	mov %dx,%fs$/;"	v	language:C++
dx	kernel/chr_drv/rs_io.s	/^	inb %dx,%al$/;"	v	language:C++
dx	kernel/sys_call.s	/^	mov %dx,%ds$/;"	v	language:C++
dx	kernel/sys_call.s	/^	mov %dx,%es$/;"	v	language:C++
dx	kernel/sys_call.s	/^	mov %dx,%fs$/;"	v	language:C++
dx	mm/page.s	/^	mov %dx,%ds$/;"	v	language:C++
dx	mm/page.s	/^	mov %dx,%es$/;"	v	language:C++
dx	mm/page.s	/^	mov %dx,%fs$/;"	v	language:C++
e_gid	fs/exec.c	/^	int e_uid, e_gid;$/;"	l	language:C++
e_uid	fs/exec.c	/^	int e_uid, e_gid;$/;"	l	language:C++
ea	include/linux/math_emu.h	/^char * ea(struct info * __info, unsigned short __code);$/;"	p	language:C++	signature:(struct info * __info, unsigned short __code)
ea	kernel/math/ea.c	/^char * ea(struct info * info, unsigned short code)$/;"	f	language:C++	signature:(struct info * info, unsigned short code)
eax	boot/head.s	/^	cmpl %eax,0x100000$/;"	v	language:C++
eax	boot/head.s	/^	movl %eax,%cr0		\/* set paging (PG) bit *\/$/;"	v	language:C++
eax	boot/head.s	/^	movl %eax,%cr0$/;"	v	language:C++
eax	boot/head.s	/^	movl %eax,%cr3		\/* cr3 - page directory start *\/$/;"	v	language:C++
eax	boot/head.s	/^	movl %eax,(%edi)$/;"	v	language:C++
eax	boot/head.s	/^	movl %eax,0x000000	# loop forever if it isn't$/;"	v	language:C++
eax	boot/head.s	/^	xorl %eax,%eax		\/* pg_dir is at 0x0000 *\/$/;"	v	language:C++
eax	boot/head.s	/^	xorl %eax,%eax$/;"	v	language:C++
eax	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
eax	init/main.s	/^	movl %eax,%ebx$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,%edi$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,%edx$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-16(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-20(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-24(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-28(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-32(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,-36(%ebp)$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_ROOT_DEV$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_SWAP_DEV$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_errno$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_main_memory_start$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_memory_end$/;"	v	language:C++
eax	init/main.s	/^	movl %eax,_startup_time$/;"	v	language:C++
eax	init/main.s	/^	testl %eax,%eax$/;"	v	language:C++
eax	init/main.s	/^	xorl %eax,%eax$/;"	v	language:C++
eax	kernel/asm.s	/^	xchgl %eax,4(%esp)		# error code <-> %eax$/;"	v	language:C++
eax	kernel/chr_drv/keyboard.S	/^	movl %eax,_blankcount$/;"	v	language:C++
eax	kernel/chr_drv/keyboard.S	/^	xorl %eax,%eax		\/* %eax is scan code *\/$/;"	v	language:C++
eax	kernel/chr_drv/rs_io.s	/^	xorl %eax,%eax$/;"	v	language:C++
eax	kernel/sys_call.s	/^	testl %eax, %eax$/;"	v	language:C++
eax	kernel/sys_call.s	/^	testl %eax,%eax$/;"	v	language:C++
eax	kernel/sys_call.s	/^	xorl %eax,%eax$/;"	v	language:C++
ebp	include/linux/sched.h	/^	long	ebp;$/;"	m	language:C++	struct:tss_struct	access:public
ebx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
ebx	init/main.s	/^	movl %ebx,%eax$/;"	v	language:C++
ebx	kernel/asm.s	/^	xchgl %ebx,(%esp)		# &function <-> %ebx$/;"	v	language:C++
ebx	kernel/chr_drv/keyboard.S	/^	shrdl $8,%ebx,%eax$/;"	v	language:C++
ebx	kernel/chr_drv/keyboard.S	/^	xorl %ebx,%ebx$/;"	v	language:C++
ebx	kernel/chr_drv/rs_io.s	/^	movl %ebx,head(%ecx)$/;"	v	language:C++
ebx	kernel/chr_drv/rs_io.s	/^	movl %ebx,tail(%ecx)$/;"	v	language:C++
ebx	kernel/chr_drv/rs_io.s	/^	testl %ebx,%ebx			# is there any?$/;"	v	language:C++
ebx	kernel/sys_call.s	/^	andl %ebx,%ecx$/;"	v	language:C++
ebx	kernel/sys_call.s	/^	movl %ebx,signal(%eax)$/;"	v	language:C++
ecx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
ecx	kernel/chr_drv/keyboard.S	/^	testl %ecx,%ecx$/;"	v	language:C++
ecx	kernel/chr_drv/keyboard.S	/^2:	movl %ecx,head(%edx)$/;"	v	language:C++
ecx	kernel/chr_drv/rs_io.s	/^	movl %ecx,%edx$/;"	v	language:C++
ecx	kernel/sys_call.s	/^	bsfl %ecx,%ecx$/;"	v	language:C++
ecx	kernel/sys_call.s	/^	btrl %ecx,%ebx$/;"	v	language:C++
ecx	kernel/sys_call.s	/^	pushl %ecx		# push %ebx,%ecx,%edx as parameters$/;"	v	language:C++
ecx	kernel/sys_call.s	/^	pushl %edx		# we save %eax,%ecx,%edx as gcc doesn't$/;"	v	language:C++
edi	include/linux/sched.h	/^	long	edi;$/;"	m	language:C++	struct:tss_struct	access:public
edi	init/main.s	/^	cmpl %edi,%eax$/;"	v	language:C++
edi	init/main.s	/^	testl %edi,%edi$/;"	v	language:C++
edx	boot/head.s	/^	movl %edx,4(%edi)$/;"	v	language:C++
edx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
edx	init/main.s	/^	movl %edx,_errno$/;"	v	language:C++
edx	init/main.s	/^	testl %edx,%edx$/;"	v	language:C++
edx	kernel/sys_call.s	/^	movl %edx,_hd_timeout$/;"	v	language:C++
edx	kernel/sys_call.s	/^	testl %edx,%edx$/;"	v	language:C++
edx	kernel/sys_call.s	/^1:	xorl %edx,%edx$/;"	v	language:C++
eflags	include/linux/sched.h	/^	long	eflags;$/;"	m	language:C++	struct:tss_struct	access:public
egid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
eip	include/linux/sched.h	/^	long	eip;$/;"	m	language:C++	struct:tss_struct	access:public
empty	fs/inode.c	/^	struct m_inode * inode, * empty;$/;"	l	language:C++
empty_dir	fs/namei.c	/^static int empty_dir(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
end	fs/buffer.c	/^extern int end;$/;"	x	language:C++
end_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
end_cyl	include/linux/hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
end_data	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
end_head	include/linux/hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
end_request	kernel/blk_drv/blk.h	/^extern inline void end_request(int uptodate)$/;"	f	language:C++	signature:(int uptodate)
end_sector	include/linux/hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
enddata	boot/setup.S	/^.globl begtext, begdata, begbss, endtext, enddata, endbss$/;"	v	language:C++
endtext	boot/setup.S	/^.globl begtext, begdata, begbss, endtext, enddata, endbss$/;"	v	language:C++
entries	fs/namei.c	/^	int entries;$/;"	l	language:C++
entry	fs/select.c	/^	wait_entry entry[NR_OPEN*3];$/;"	m	language:C++	struct:__anon9	file:	access:public
envc	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C++
envp	fs/exec.c	/^	unsigned long *argv,*envp;$/;"	l	language:C++
envp	init/main.c	/^static char * envp[] = { "HOME=\/usr\/root", NULL, NULL };$/;"	v	language:C++	file:
envp_rc	init/main.c	/^static char * envp_rc[] = { "HOME=\/", NULL ,NULL };$/;"	v	language:C++	file:
err	kernel/exit.c	/^	int err, retval = 0;$/;"	l	language:C++
err	kernel/exit.c	/^	int err,retval = -ESRCH;$/;"	l	language:C++
errno	include/errno.h	/^extern int errno;$/;"	x	language:C++
errno	include/unistd.h	/^extern int errno;$/;"	x	language:C++
errno	lib/errno.c	/^int errno;$/;"	v	language:C++
errors	kernel/blk_drv/blk.h	/^	int errors;$/;"	m	language:C++	struct:request	access:public
es	boot/setup.S	/^	mov	es,ax		! destination segment$/;"	v	language:C++
es	boot/setup.S	/^	mov	es,ax$/;"	v	language:C++
es	include/linux/sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
esi	include/linux/sched.h	/^	long	esi;$/;"	m	language:C++	struct:tss_struct	access:public
esp	include/linux/sched.h	/^	long	esp;$/;"	m	language:C++	struct:tss_struct	access:public
esp	init/main.s	/^	movl %esp,%eax$/;"	v	language:C++
esp	kernel/traps.c	/^	long * esp = (long *) esp_ptr;$/;"	l	language:C++
esp0	include/linux/sched.h	/^	long	esp0;$/;"	m	language:C++	struct:tss_struct	access:public
esp1	include/linux/sched.h	/^	long	esp1;$/;"	m	language:C++	struct:tss_struct	access:public
esp2	include/linux/sched.h	/^	long	esp2;$/;"	m	language:C++	struct:tss_struct	access:public
euid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
ex	fs/exec.c	/^	struct exec ex;$/;"	l	language:C++
ex	fs/select.c	/^	fd_set res_ex, ex = 0, *exp;$/;"	l	language:C++
exec	include/a.out.h	/^struct exec {$/;"	s	language:C++
exec::a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
exec::a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	language:C++	struct:exec	access:public
execl	include/unistd.h	/^int execl(const char * pathname, char * arg0, ...);$/;"	p	language:C++	signature:(const char * pathname, char * arg0, ...)
execle	include/unistd.h	/^int execle(const char * pathname, char * arg0, ...);$/;"	p	language:C++	signature:(const char * pathname, char * arg0, ...)
execlp	include/unistd.h	/^int execlp(const char * file, char * arg0, ...);$/;"	p	language:C++	signature:(const char * file, char * arg0, ...)
executable	include/linux/sched.h	/^	struct m_inode * executable;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
execv	include/unistd.h	/^int execv(const char * pathname, char ** argv);$/;"	p	language:C++	signature:(const char * pathname, char ** argv)
execve	include/unistd.h	/^int execve(const char * filename, char ** argv, char ** envp);$/;"	p	language:C++	signature:(const char * filename, char ** argv, char ** envp)
execvp	include/unistd.h	/^int execvp(const char * file, char ** argv);$/;"	p	language:C++	signature:(const char * file, char ** argv)
exit	include/unistd.h	/^volatile void exit(int status);$/;"	p	language:C++	signature:(int status)
exit_code	include/linux/sched.h	/^	int exit_code;$/;"	m	language:C++	struct:task_struct	access:public
exp	fs/select.c	/^	fd_set res_ex, ex = 0, *exp;$/;"	l	language:C++
exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	language:C++	struct:__anon4	access:public
exponent	include/linux/math_emu.h	/^	short exponent;$/;"	m	language:C++	struct:__anon5	access:public
extern	lib/string.c	11;"	d	language:C++	file:
f	fs/open.c	/^	struct file * f;$/;"	l	language:C++
f	fs/pipe.c	/^	struct file * f[2];$/;"	l	language:C++
f	fs/stat.c	/^	struct file * f;$/;"	l	language:C++
f	kernel/fork.c	/^	struct file *f;$/;"	l	language:C++
f_count	include/linux/fs.h	/^	unsigned short f_count;$/;"	m	language:C++	struct:file	access:public
f_flags	include/linux/fs.h	/^	unsigned short f_flags;$/;"	m	language:C++	struct:file	access:public
f_fname	include/sys/types.h	/^	char f_fname[6];$/;"	m	language:C++	struct:ustat	access:public
f_fpack	include/sys/types.h	/^	char f_fpack[6];$/;"	m	language:C++	struct:ustat	access:public
f_inode	include/linux/fs.h	/^	struct m_inode * f_inode;$/;"	m	language:C++	struct:file	typeref:struct:file::m_inode	access:public
f_mode	include/linux/fs.h	/^	unsigned short f_mode;$/;"	m	language:C++	struct:file	access:public
f_pos	include/linux/fs.h	/^	off_t f_pos;$/;"	m	language:C++	struct:file	access:public
f_tfree	include/sys/types.h	/^	daddr_t f_tfree;$/;"	m	language:C++	struct:ustat	access:public
f_tinode	include/sys/types.h	/^	ino_t f_tinode;$/;"	m	language:C++	struct:ustat	access:public
fadd	include/linux/math_emu.h	/^void fadd(const temp_real *, const temp_real *, temp_real *);$/;"	p	language:C++	signature:(const temp_real *, const temp_real *, temp_real *)
fadd	kernel/math/add.c	/^void fadd(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f	language:C++	signature:(const temp_real * src1, const temp_real * src2, temp_real * result)
fcntl	include/fcntl.h	/^extern int fcntl(int fildes,int cmd, ...);$/;"	p	language:C++	signature:(int fildes,int cmd, ...)
fcntl	include/unistd.h	/^int fcntl(int fildes, int cmd, ...);$/;"	p	language:C++	signature:(int fildes, int cmd, ...)
fcom	include/linux/math_emu.h	/^void fcom(const temp_real *, const temp_real *);$/;"	p	language:C++	signature:(const temp_real *, const temp_real *)
fcom	kernel/math/compare.c	/^void fcom(const temp_real * src1, const temp_real * src2)$/;"	f	language:C++	signature:(const temp_real * src1, const temp_real * src2)
fcs	include/linux/sched.h	/^	long	fcs;$/;"	m	language:C++	struct:i387_struct	access:public
fd	fs/open.c	/^	int i,fd;$/;"	l	language:C++
fd	fs/pipe.c	/^	int fd[2];$/;"	l	language:C++
fd_set	include/sys/types.h	/^typedef unsigned long fd_set;$/;"	t	language:C++
fdiv	include/linux/math_emu.h	/^void fdiv(const temp_real *, const temp_real *, temp_real *);$/;"	p	language:C++	signature:(const temp_real *, const temp_real *, temp_real *)
fdiv	kernel/math/div.c	/^void fdiv(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f	language:C++	signature:(const temp_real * src1, const temp_real * src2, temp_real * result)
fg_console	include/linux/tty.h	/^extern int fg_console;$/;"	x	language:C++
fg_console	kernel/chr_drv/tty_io.c	/^int fg_console = 0;$/;"	v	language:C++
field_width	kernel/vsprintf.c	/^	int field_width;	\/* width of output field *\/$/;"	l	language:C++
file	fs/read_write.c	/^	struct file * file;$/;"	l	language:C++
file	include/linux/fs.h	/^struct file {$/;"	s	language:C++
file::f_count	include/linux/fs.h	/^	unsigned short f_count;$/;"	m	language:C++	struct:file	access:public
file::f_flags	include/linux/fs.h	/^	unsigned short f_flags;$/;"	m	language:C++	struct:file	access:public
file::f_inode	include/linux/fs.h	/^	struct m_inode * f_inode;$/;"	m	language:C++	struct:file	typeref:struct:file::m_inode	access:public
file::f_mode	include/linux/fs.h	/^	unsigned short f_mode;$/;"	m	language:C++	struct:file	access:public
file::f_pos	include/linux/fs.h	/^	off_t f_pos;$/;"	m	language:C++	struct:file	access:public
file_read	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f	language:C++	signature:(struct m_inode * inode, struct file * filp, char * buf, int count)
file_read	fs/read_write.c	/^extern int file_read(struct m_inode * inode, struct file * filp,$/;"	p	language:C++	file:	signature:(struct m_inode * inode, struct file * filp, char * buf, int count)
file_table	fs/file_table.c	/^struct file file_table[NR_FILE];$/;"	v	language:C++	typeref:struct:file
file_table	include/linux/fs.h	/^extern struct file file_table[NR_FILE];$/;"	x	language:C++
file_write	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f	language:C++	signature:(struct m_inode * inode, struct file * filp, char * buf, int count)
file_write	fs/read_write.c	/^extern int file_write(struct m_inode * inode, struct file * filp,$/;"	p	language:C++	file:	signature:(struct m_inode * inode, struct file * filp, char * buf, int count)
filp	fs/fcntl.c	/^	struct file * filp;$/;"	l	language:C++
filp	fs/ioctl.c	/^	struct file * filp;$/;"	l	language:C++
filp	fs/open.c	/^	struct file * filp;$/;"	l	language:C++
filp	include/linux/sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::file	access:public
find_buffer	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	f	language:C++	file:	signature:(int dev, int block)
find_empty_process	kernel/fork.c	/^int find_empty_process(void)$/;"	f	language:C++	signature:(void)
find_entry	fs/namei.c	/^static struct buffer_head * find_entry(struct m_inode ** dir,$/;"	f	language:C++	file:	signature:(struct m_inode ** dir, const char * name, int namelen, struct dir_entry ** res_dir)
find_first_zero	fs/bitmap.c	31;"	d	language:C++	file:
fip	include/linux/sched.h	/^	long	fip;$/;"	m	language:C++	struct:i387_struct	access:public
first	lib/malloc.c	/^	struct bucket_desc *bdesc, *first;$/;"	l	language:C++
firsttime	kernel/sys.c	/^	static int	firsttime = 1;$/;"	l	language:C++	file:
flag	kernel/exit.c	/^	int flag;$/;"	l	language:C++
flags	include/linux/sched.h	/^	unsigned int flags;	\/* per process flags, defined below *\/$/;"	m	language:C++	struct:task_struct	access:public
flags	kernel/vsprintf.c	/^	int flags;		\/* flags to number() *\/$/;"	l	language:C++
flock	include/fcntl.h	/^struct flock {$/;"	s	language:C++
flock::l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	language:C++	struct:flock	access:public
flock::l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	language:C++	struct:flock	access:public
flock::l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	language:C++	struct:flock	access:public
flock::l_type	include/fcntl.h	/^	short l_type;$/;"	m	language:C++	struct:flock	access:public
flock::l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	language:C++	struct:flock	access:public
floppy	kernel/blk_drv/floppy.c	/^static struct floppy_struct * floppy = floppy_type;$/;"	v	language:C++	typeref:struct:floppy_struct	file:
floppy_change	include/linux/fs.h	/^extern int floppy_change(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
floppy_change	kernel/blk_drv/floppy.c	/^int floppy_change(unsigned int nr)$/;"	f	language:C++	signature:(unsigned int nr)
floppy_deselect	include/linux/fdreg.h	/^extern void floppy_deselect(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
floppy_deselect	kernel/blk_drv/floppy.c	/^void floppy_deselect(unsigned int nr)$/;"	f	language:C++	signature:(unsigned int nr)
floppy_init	init/main.c	/^extern void floppy_init(void);$/;"	p	language:C++	file:	signature:(void)
floppy_init	kernel/blk_drv/floppy.c	/^void floppy_init(void)$/;"	f	language:C++	signature:(void)
floppy_interrupt	kernel/blk_drv/floppy.c	/^extern void floppy_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
floppy_off	include/linux/fdreg.h	/^extern void floppy_off(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
floppy_off	include/linux/fs.h	/^extern void floppy_off(unsigned int dev);$/;"	p	language:C++	signature:(unsigned int dev)
floppy_off	kernel/sched.c	/^void floppy_off(unsigned int nr)$/;"	f	language:C++	signature:(unsigned int nr)
floppy_on	include/linux/fdreg.h	/^extern void floppy_on(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
floppy_on	include/linux/fs.h	/^extern void floppy_on(unsigned int dev);$/;"	p	language:C++	signature:(unsigned int dev)
floppy_on	kernel/sched.c	/^void floppy_on(unsigned int nr)$/;"	f	language:C++	signature:(unsigned int nr)
floppy_on_interrupt	kernel/blk_drv/floppy.c	/^	add_timer(ticks_to_floppy_on(current_drive),&floppy_on_interrupt);$/;"	l	language:C++
floppy_on_interrupt	kernel/blk_drv/floppy.c	/^static void floppy_on_interrupt(void)$/;"	f	language:C++	file:	signature:(void)
floppy_select	include/linux/fdreg.h	/^extern void floppy_select(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
floppy_sizes	kernel/blk_drv/floppy.c	/^static int floppy_sizes[] ={$/;"	v	language:C++	file:
floppy_struct	kernel/blk_drv/floppy.c	/^static struct floppy_struct {$/;"	s	language:C++	file:
floppy_struct::gap	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::head	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::rate	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::sect	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::size	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::spec1	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::stretch	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_struct::track	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
floppy_type	kernel/blk_drv/floppy.c	/^} floppy_type[] = {$/;"	v	language:C++	typeref:struct:floppy_struct	file:
flush	kernel/chr_drv/tty_ioctl.c	/^static void flush(struct tty_queue * queue)$/;"	f	language:C++	file:	signature:(struct tty_queue * queue)
fmul	include/linux/math_emu.h	/^void fmul(const temp_real *, const temp_real *, temp_real *);$/;"	p	language:C++	signature:(const temp_real *, const temp_real *, temp_real *)
fmul	kernel/math/mul.c	/^void fmul(const temp_real * src1, const temp_real * src2, temp_real * result)$/;"	f	language:C++	signature:(const temp_real * src1, const temp_real * src2, temp_real * result)
fn	kernel/sched.c	/^	void (*fn)();$/;"	m	language:C++	struct:timer_list	file:	access:public
fn_ptr	include/linux/sched.h	/^typedef int (*fn_ptr)();$/;"	t	language:C++
follow_link	fs/namei.c	/^static struct m_inode * follow_link(struct m_inode * dir, struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * dir, struct m_inode * inode)
foo	include/linux/sched.h	/^	long	foo;$/;"	m	language:C++	struct:i387_struct	access:public
fork	include/unistd.h	/^int fork(void);$/;"	p	language:C++	signature:(void)
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v	language:C++
fos	include/linux/sched.h	/^	long	fos;$/;"	m	language:C++	struct:i387_struct	access:public
found	kernel/exit.c	/^	int found = 0;$/;"	l	language:C++
fpop	kernel/math/math_emulate.c	/^static void fpop(void)$/;"	f	language:C++	file:	signature:(void)
fpop	kernel/math/math_emulate.c	/^static void fpop(void);$/;"	p	language:C++	file:	signature:(void)
fpush	kernel/math/math_emulate.c	/^static void fpush(void)$/;"	f	language:C++	file:	signature:(void)
fpush	kernel/math/math_emulate.c	/^static void fpush(void);$/;"	p	language:C++	file:	signature:(void)
free	fs/super.c	/^	int i,free;$/;"	l	language:C++
free	include/linux/kernel.h	23;"	d	language:C++
free	mm/memory.c	/^	int i,j,k,free=0,total=0;$/;"	l	language:C++
free_block	fs/bitmap.c	/^int free_block(int dev, int block)$/;"	f	language:C++	signature:(int dev, int block)
free_block	include/linux/fs.h	/^extern int free_block(int dev, int block);$/;"	p	language:C++	signature:(int dev, int block)
free_bucket_desc	lib/malloc.c	/^struct bucket_desc *free_bucket_desc = (struct bucket_desc *) 0;$/;"	v	language:C++	typeref:struct:bucket_desc
free_dind	fs/truncate.c	/^static int free_dind(int dev,int block)$/;"	f	language:C++	file:	signature:(int dev,int block)
free_ind	fs/truncate.c	/^static int free_ind(int dev,int block)$/;"	f	language:C++	file:	signature:(int dev,int block)
free_inode	fs/bitmap.c	/^void free_inode(struct m_inode * inode)$/;"	f	language:C++	signature:(struct m_inode * inode)
free_inode	include/linux/fs.h	/^extern void free_inode(struct m_inode * inode);$/;"	p	language:C++	signature:(struct m_inode * inode)
free_list	fs/buffer.c	/^static struct buffer_head * free_list;$/;"	v	language:C++	typeref:struct:buffer_head	file:
free_page	include/linux/mm.h	/^extern void free_page(unsigned long addr);$/;"	p	language:C++	signature:(unsigned long addr)
free_page	mm/memory.c	/^void free_page(unsigned long addr)$/;"	f	language:C++	signature:(unsigned long addr)
free_page_tables	include/linux/sched.h	/^extern int free_page_tables(unsigned long from, unsigned long size);$/;"	p	language:C++	signature:(unsigned long from, unsigned long size)
free_page_tables	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	f	language:C++	signature:(unsigned long from,unsigned long size)
free_s	include/linux/kernel.h	/^void free_s(void * obj, int size);$/;"	p	language:C++	signature:(void * obj, int size)
free_s	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	f	language:C++	signature:(void *obj, int size)
free_super	fs/super.c	/^static void free_super(struct super_block * sb)$/;"	f	language:C++	file:	signature:(struct super_block * sb)
free_wait	fs/select.c	/^static void free_wait(select_table * p)$/;"	f	language:C++	file:	signature:(select_table * p)
freeptr	lib/malloc.c	/^	void			*freeptr;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
from	mm/memory.c	/^	unsigned long from;$/;"	l	language:C++
from_dir	mm/memory.c	/^	unsigned long * from_dir, * to_dir;$/;"	l	language:C++
from_page	mm/memory.c	/^	unsigned long from_page;$/;"	l	language:C++
from_page_table	mm/memory.c	/^	unsigned long * from_page_table;$/;"	l	language:C++
fs	fs/namei.c	/^	unsigned short fs;$/;"	l	language:C++
fs	include/linux/sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
fstat	include/sys/stat.h	/^extern int fstat(int fildes, struct stat *stat_buf);$/;"	p	language:C++	signature:(int fildes, struct stat *stat_buf)
fstat	include/unistd.h	/^int fstat(int fildes, struct stat * stat_buf);$/;"	p	language:C++	signature:(int fildes, struct stat * stat_buf)
ftst	include/linux/math_emu.h	/^void ftst(const temp_real *);$/;"	p	language:C++	signature:(const temp_real *)
ftst	kernel/math/compare.c	/^void ftst(const temp_real * a)$/;"	f	language:C++	signature:(const temp_real * a)
fucom	include/linux/math_emu.h	/^void fucom(const temp_real *, const temp_real *);$/;"	p	language:C++	signature:(const temp_real *, const temp_real *)
fucom	kernel/math/compare.c	/^void fucom(const temp_real * src1, const temp_real * src2)$/;"	f	language:C++	signature:(const temp_real * src1, const temp_real * src2)
func	kernel/chr_drv/keyboard.S	/^	.long func,func,func,func		\/* 3C-3F f2 f3 f4 f5 *\/$/;"	v	language:C++
func	kernel/chr_drv/keyboard.S	/^	.long func,func,func,func		\/* 40-43 f6 f7 f8 f9 *\/$/;"	v	language:C++
func_table	kernel/chr_drv/keyboard.S	/^	movl func_table(,%eax,4),%eax$/;"	p	language:C++	file:	signature:(,%eax,4)
fxchg	kernel/math/math_emulate.c	/^static void fxchg(temp_real_unaligned * a, temp_real_unaligned * b)$/;"	f	language:C++	file:	signature:(temp_real_unaligned * a, temp_real_unaligned * b)
fxchg	kernel/math/math_emulate.c	/^static void fxchg(temp_real_unaligned * a, temp_real_unaligned * b);$/;"	p	language:C++	file:	signature:(temp_real_unaligned * a, temp_real_unaligned * b)
gap	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
gdt	include/linux/head.h	/^extern desc_table idt,gdt;$/;"	x	language:C++
general_protection	kernel/traps.c	/^void general_protection(void);$/;"	p	language:C++	file:	signature:(void)
get_BCD	include/linux/math_emu.h	/^void get_BCD(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_BCD	kernel/math/get_put.c	/^void get_BCD(temp_real * tmp, struct info * info, unsigned short code)$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_base	include/linux/sched.h	277;"	d	language:C++
get_dir	fs/namei.c	/^static struct m_inode * get_dir(const char * pathname, struct m_inode * inode)$/;"	f	language:C++	file:	signature:(const char * pathname, struct m_inode * inode)
get_ds	fs/exec.c	/^		set_fs(get_ds());$/;"	p	language:C++	file:	signature:()
get_ds	include/asm/segment.h	/^extern inline unsigned long get_ds() $/;"	f	language:C++	signature:()
get_empty_inode	fs/inode.c	/^struct m_inode * get_empty_inode(void)$/;"	f	language:C++	signature:(void)
get_empty_inode	include/linux/fs.h	/^extern struct m_inode * get_empty_inode(void);$/;"	p	language:C++	signature:(void)
get_empty_page	mm/memory.c	/^void get_empty_page(unsigned long address)$/;"	f	language:C++	signature:(unsigned long address)
get_free_page	include/linux/mm.h	/^extern unsigned long get_free_page(void);$/;"	p	language:C++	signature:(void)
get_free_page	mm/swap.c	/^unsigned long get_free_page(void)$/;"	f	language:C++	signature:(void)
get_fs	include/asm/segment.h	/^extern inline unsigned long get_fs() $/;"	f	language:C++	signature:()
get_fs_byte	include/asm/segment.h	/^extern inline unsigned char get_fs_byte(const char * addr)$/;"	f	language:C++	signature:(const char * addr)
get_fs_long	include/asm/segment.h	/^extern inline unsigned long get_fs_long(const unsigned long *addr)$/;"	f	language:C++	signature:(const unsigned long *addr)
get_fs_word	include/asm/segment.h	/^extern inline unsigned short get_fs_word(const unsigned short *addr)$/;"	f	language:C++	signature:(const unsigned short *addr)
get_hash_table	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	f	language:C++	signature:(int dev, int block)
get_hash_table	include/linux/fs.h	/^extern struct buffer_head * get_hash_table(int dev, int block);$/;"	p	language:C++	signature:(int dev, int block)
get_limit	include/linux/sched.h	279;"	d	language:C++
get_long_int	include/linux/math_emu.h	/^void get_long_int(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_long_int	kernel/math/get_put.c	/^void get_long_int(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_long_real	include/linux/math_emu.h	/^void get_long_real(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_long_real	kernel/math/get_put.c	/^void get_long_real(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_longlong_int	include/linux/math_emu.h	/^void get_longlong_int(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_longlong_int	kernel/math/get_put.c	/^void get_longlong_int(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_new	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	f	language:C++	file:	signature:(char * from,char * to)
get_pipe_inode	fs/inode.c	/^struct m_inode * get_pipe_inode(void)$/;"	f	language:C++	signature:(void)
get_pipe_inode	include/linux/fs.h	/^extern struct m_inode * get_pipe_inode(void);$/;"	p	language:C++	signature:(void)
get_seg_byte	kernel/traps.c	22;"	d	language:C++	file:
get_seg_long	kernel/traps.c	28;"	d	language:C++	file:
get_short_int	include/linux/math_emu.h	/^void get_short_int(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_short_int	kernel/math/get_put.c	/^void get_short_int(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_short_real	include/linux/math_emu.h	/^void get_short_real(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_short_real	kernel/math/get_put.c	/^void get_short_real(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_super	fs/super.c	/^struct super_block * get_super(int dev)$/;"	f	language:C++	signature:(int dev)
get_super	include/linux/fs.h	/^extern struct super_block * get_super(int dev);$/;"	p	language:C++	signature:(int dev)
get_swap_page	mm/swap.c	/^static int get_swap_page(void)$/;"	f	language:C++	file:	signature:(void)
get_temp_real	include/linux/math_emu.h	/^void get_temp_real(temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(temp_real *, struct info *, unsigned short)
get_temp_real	kernel/math/get_put.c	/^void get_temp_real(temp_real * tmp,$/;"	f	language:C++	signature:(temp_real * tmp, struct info * info, unsigned short code)
get_termio	kernel/chr_drv/tty_ioctl.c	/^static int get_termio(struct tty_struct * tty, struct termio * termio)$/;"	f	language:C++	file:	signature:(struct tty_struct * tty, struct termio * termio)
get_termios	kernel/chr_drv/tty_ioctl.c	/^static int get_termios(struct tty_struct * tty, struct termios * termios)$/;"	f	language:C++	file:	signature:(struct tty_struct * tty, struct termios * termios)
get_tty	fs/select.c	/^static struct tty_struct * get_tty(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
getblk	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	f	language:C++	signature:(int dev,int block)
getblk	include/linux/fs.h	/^extern struct buffer_head * getblk(int dev, int block);$/;"	p	language:C++	signature:(int dev, int block)
getegid	include/unistd.h	/^int getegid(void);$/;"	p	language:C++	signature:(void)
geteuid	include/unistd.h	/^int geteuid(void);$/;"	p	language:C++	signature:(void)
getgid	include/unistd.h	/^int getgid(void);$/;"	p	language:C++	signature:(void)
getgroups	include/unistd.h	/^int getgroups(int gidsetlen, gid_t *gidset);$/;"	p	language:C++	signature:(int gidsetlen, gid_t *gidset)
getpgrp	include/unistd.h	/^pid_t getpgrp(void);$/;"	p	language:C++	signature:(void)
getpid	include/unistd.h	/^int getpid(void);$/;"	p	language:C++	signature:(void)
getppid	include/unistd.h	/^int getppid(void);$/;"	p	language:C++	signature:(void)
getrlimit	include/unistd.h	/^int getrlimit(int resource, struct rlimit *rlp);$/;"	p	language:C++	signature:(int resource, struct rlimit *rlp)
getrusage	include/unistd.h	/^int getrusage(int who, struct rusage *rusage);$/;"	p	language:C++	signature:(int who, struct rusage *rusage)
gettimeofday	include/sys/time.h	/^int gettimeofday(struct timeval * tp, struct timezone * tz);$/;"	p	language:C++	signature:(struct timeval * tp, struct timezone * tz)
gettimeofday	include/unistd.h	/^int gettimeofday(struct timeval *tv, struct timezone *tz);$/;"	p	language:C++	signature:(struct timeval *tv, struct timezone *tz)
getuid	include/unistd.h	/^int getuid(void);$/;"	p	language:C++	signature:(void)
gid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
gid_t	include/sys/types.h	/^typedef unsigned short gid_t;$/;"	t	language:C++
gmtime	include/time.h	/^struct tm * gmtime(const time_t *tp);$/;"	p	language:C++	signature:(const time_t *tp)
gotoxy	kernel/chr_drv/console.c	/^static inline void gotoxy(int currcons, int new_x,unsigned int new_y)$/;"	f	language:C++	file:	signature:(int currcons, int new_x,unsigned int new_y)
groups	include/linux/sched.h	/^	int	groups[NGROUPS];$/;"	m	language:C++	struct:task_struct	access:public
gs	include/linux/sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
h	fs/buffer.c	/^	struct buffer_head * h = start_buffer;$/;"	l	language:C++
has_stopped_jobs	kernel/exit.c	/^static int has_stopped_jobs(int pgrp)$/;"	f	language:C++	file:	signature:(int pgrp)
hash	fs/buffer.c	129;"	d	language:C++	file:
hash_table	fs/buffer.c	/^struct buffer_head * hash_table[NR_HASH];$/;"	v	language:C++	typeref:struct:buffer_head
hd	kernel/blk_drv/hd.c	/^} hd[5*MAX_HD]={{0,0},};$/;"	v	language:C++	typeref:struct:hd_struct	file:
hd_i_struct	kernel/blk_drv/hd.c	/^struct hd_i_struct {$/;"	s	language:C++	file:
hd_i_struct::ctl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_i_struct::cyl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_i_struct::head	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_i_struct::lzone	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_i_struct::sect	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_i_struct::wpcom	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { HD_TYPE };$/;"	v	language:C++	typeref:struct:hd_i_struct
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { {0,0,0,0,0,0},{0,0,0,0,0,0} };$/;"	v	language:C++	typeref:struct:hd_i_struct
hd_init	init/main.c	/^extern void hd_init(void);$/;"	p	language:C++	file:	signature:(void)
hd_init	kernel/blk_drv/hd.c	/^void hd_init(void)$/;"	f	language:C++	signature:(void)
hd_interrupt	kernel/blk_drv/hd.c	/^extern void hd_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
hd_out	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	f	language:C++	file:	signature:(unsigned int drive,unsigned int nsect,unsigned int sect, unsigned int head,unsigned int cyl,unsigned int cmd, void (*intr_addr)(void))
hd_sizes	kernel/blk_drv/hd.c	/^static int hd_sizes[5*MAX_HD] = {0, };$/;"	v	language:C++	file:
hd_struct	kernel/blk_drv/hd.c	/^static struct hd_struct {$/;"	s	language:C++	file:
hd_struct::nr_sects	kernel/blk_drv/hd.c	/^	long nr_sects;$/;"	m	language:C++	struct:hd_struct	file:	access:public
hd_struct::start_sect	kernel/blk_drv/hd.c	/^	long start_sect;$/;"	m	language:C++	struct:hd_struct	file:	access:public
hd_timeout	include/linux/kernel.h	/^extern int hd_timeout;$/;"	x	language:C++
hd_times_out	include/linux/kernel.h	/^extern void hd_times_out(void);$/;"	p	language:C++	signature:(void)
hd_times_out	kernel/blk_drv/hd.c	/^void hd_times_out(void)$/;"	f	language:C++	signature:(void)
head	include/linux/hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
head	include/linux/tty.h	/^	unsigned long head;$/;"	m	language:C++	struct:tty_queue	access:public
head	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
head	kernel/blk_drv/floppy.c	/^static unsigned char head = 0;$/;"	v	language:C++	file:
head	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
head	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C++
hide_cursor	kernel/chr_drv/console.c	/^static inline void hide_cursor(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
i	fs/bitmap.c	/^	int i,j;$/;"	l	language:C++
i	fs/buffer.c	/^	int i;$/;"	l	language:C++
i	fs/char_dev.c	/^	int i=*pos;$/;"	l	language:C++
i	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C++
i	fs/exec.c	/^	int i;$/;"	l	language:C++
i	fs/exec.c	/^	int i=0;$/;"	l	language:C++
i	fs/file_dev.c	/^	int i=0;$/;"	l	language:C++
i	fs/inode.c	/^			int i;$/;"	l	language:C++
i	fs/inode.c	/^		int i = inode->i_zone[0];$/;"	l	language:C++
i	fs/inode.c	/^	int i;$/;"	l	language:C++
i	fs/namei.c	/^	int block,i;$/;"	l	language:C++
i	fs/namei.c	/^	int namelen, i;$/;"	l	language:C++
i	fs/open.c	/^	int i,fd;$/;"	l	language:C++
i	fs/pipe.c	/^	int i,j;$/;"	l	language:C++
i	fs/select.c	/^	int i;$/;"	l	language:C++
i	fs/stat.c	/^	int i;$/;"	l	language:C++
i	fs/super.c	/^	int i,block;$/;"	l	language:C++
i	fs/super.c	/^	int i,free;$/;"	l	language:C++
i	fs/super.c	/^	int i;$/;"	l	language:C++
i	fs/truncate.c	/^	int i;$/;"	l	language:C++
i	init/main.c	/^	int i;$/;"	l	language:C++
i	init/main.c	/^	int pid,i;$/;"	l	language:C++
i	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C++
i	kernel/blk_drv/floppy.c	/^	int i;$/;"	l	language:C++
i	kernel/blk_drv/hd.c	/^	int	i;$/;"	l	language:C++
i	kernel/blk_drv/hd.c	/^	int i,drive;$/;"	l	language:C++
i	kernel/blk_drv/hd.c	/^	int i,r;$/;"	l	language:C++
i	kernel/blk_drv/hd.c	/^	int i=inb_p(HD_STATUS);$/;"	l	language:C++
i	kernel/blk_drv/hd.c	/^	static int i;$/;"	l	language:C++	file:
i	kernel/blk_drv/hd.c	/^	unsigned int i;$/;"	l	language:C++
i	kernel/blk_drv/ll_rw_blk.c	/^	int i;$/;"	l	language:C++
i	kernel/blk_drv/ramdisk.c	/^	int		i = 1;$/;"	l	language:C++
i	kernel/blk_drv/ramdisk.c	/^	int	i;$/;"	l	language:C++
i	kernel/chr_drv/console.c	/^	int i;$/;"	l	language:C++
i	kernel/chr_drv/console.c	/^	int i=x;$/;"	l	language:C++
i	kernel/chr_drv/tty_io.c	/^	int i;$/;"	l	language:C++
i	kernel/chr_drv/tty_ioctl.c	/^	int i, retsig;$/;"	l	language:C++
i	kernel/chr_drv/tty_ioctl.c	/^	int i;$/;"	l	language:C++
i	kernel/exit.c	/^	int	i;$/;"	l	language:C++
i	kernel/exit.c	/^	int 	i;$/;"	l	language:C++
i	kernel/exit.c	/^	int i;$/;"	l	language:C++
i	kernel/fork.c	/^	int i;$/;"	l	language:C++
i	kernel/math/compare.c	/^	int i = a->exponent & 0x7fff;$/;"	l	language:C++
i	kernel/math/div.c	/^	int i,sign;$/;"	l	language:C++
i	kernel/math/div.c	/^	int i;$/;"	l	language:C++
i	kernel/math/get_put.c	/^	temp_int i;$/;"	l	language:C++
i	kernel/math/mul.c	/^	int i,sign;$/;"	l	language:C++
i	kernel/printk.c	/^	int i;$/;"	l	language:C++
i	kernel/sched.c	/^	int i,j = 4096-sizeof(struct task_struct);$/;"	l	language:C++
i	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C++
i	kernel/sched.c	/^	int i;$/;"	l	language:C++
i	kernel/signal.c	/^	int i;$/;"	l	language:C++
i	kernel/sys.c	/^	int	i;$/;"	l	language:C++
i	kernel/sys.c	/^	int i; $/;"	l	language:C++
i	kernel/sys.c	/^	int i;$/;"	l	language:C++
i	kernel/traps.c	/^	int i;$/;"	l	language:C++
i	kernel/vsprintf.c	/^	int i;$/;"	l	language:C++
i	kernel/vsprintf.c	/^	int i=0;$/;"	l	language:C++
i	lib/malloc.c	/^		int		i;$/;"	l	language:C++
i	lib/malloc.c	/^	int	i;$/;"	l	language:C++
i	mm/memory.c	/^	int block,i;$/;"	l	language:C++
i	mm/memory.c	/^	int i,j,k,free=0,total=0;$/;"	l	language:C++
i	mm/memory.c	/^	int i;$/;"	l	language:C++
i	mm/swap.c	/^	int swap_size,i,j;$/;"	l	language:C++
i	tools/build.c	/^	int i,c,id;$/;"	l	language:C++
i387	include/linux/sched.h	/^	struct i387_struct i387;$/;"	m	language:C++	struct:tss_struct	typeref:struct:tss_struct::i387_struct	access:public
i387_struct	include/linux/sched.h	/^struct i387_struct {$/;"	s	language:C++
i387_struct::cwd	include/linux/sched.h	/^	long	cwd;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::fcs	include/linux/sched.h	/^	long	fcs;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::fip	include/linux/sched.h	/^	long	fip;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::foo	include/linux/sched.h	/^	long	foo;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::fos	include/linux/sched.h	/^	long	fos;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::st_space	include/linux/sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::swd	include/linux/sched.h	/^	long	swd;$/;"	m	language:C++	struct:i387_struct	access:public
i387_struct::twd	include/linux/sched.h	/^	long	twd;$/;"	m	language:C++	struct:i387_struct	access:public
i_arg	fs/exec.c	/^		char buf[128], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C++
i_atime	include/linux/fs.h	/^	unsigned long i_atime;$/;"	m	language:C++	struct:m_inode	access:public
i_count	include/linux/fs.h	/^	unsigned short i_count;$/;"	m	language:C++	struct:m_inode	access:public
i_ctime	include/linux/fs.h	/^	unsigned long i_ctime;$/;"	m	language:C++	struct:m_inode	access:public
i_dev	include/linux/fs.h	/^	unsigned short i_dev;$/;"	m	language:C++	struct:m_inode	access:public
i_dirt	include/linux/fs.h	/^	unsigned char i_dirt;$/;"	m	language:C++	struct:m_inode	access:public
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:d_inode	access:public
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:m_inode	access:public
i_lock	include/linux/fs.h	/^	unsigned char i_lock;$/;"	m	language:C++	struct:m_inode	access:public
i_mode	fs/open.c	/^	int res, i_mode;$/;"	l	language:C++
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:d_inode	access:public
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:m_inode	access:public
i_mount	include/linux/fs.h	/^	unsigned char i_mount;$/;"	m	language:C++	struct:m_inode	access:public
i_mtime	include/linux/fs.h	/^	unsigned long i_mtime;$/;"	m	language:C++	struct:m_inode	access:public
i_name	fs/exec.c	/^		char buf[128], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C++
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:d_inode	access:public
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:m_inode	access:public
i_num	include/linux/fs.h	/^	unsigned short i_num;$/;"	m	language:C++	struct:m_inode	access:public
i_pipe	include/linux/fs.h	/^	unsigned char i_pipe;$/;"	m	language:C++	struct:m_inode	access:public
i_seek	include/linux/fs.h	/^	unsigned char i_seek;$/;"	m	language:C++	struct:m_inode	access:public
i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:d_inode	access:public
i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:m_inode	access:public
i_time	include/linux/fs.h	/^	unsigned long i_time;$/;"	m	language:C++	struct:d_inode	access:public
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:d_inode	access:public
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:m_inode	access:public
i_update	include/linux/fs.h	/^	unsigned char i_update;$/;"	m	language:C++	struct:m_inode	access:public
i_wait	include/linux/fs.h	/^	struct task_struct * i_wait;$/;"	m	language:C++	struct:m_inode	typeref:struct:m_inode::task_struct	access:public
i_wait2	include/linux/fs.h	/^	struct task_struct * i_wait2;	\/* for pipes *\/$/;"	m	language:C++	struct:m_inode	typeref:struct:m_inode::task_struct	access:public
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:d_inode	access:public
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:m_inode	access:public
id	tools/build.c	/^	int i,c,id;$/;"	l	language:C++
idt	include/linux/head.h	/^extern desc_table idt,gdt;$/;"	x	language:C++
ie	include/linux/math_emu.h	/^	int ie:1;$/;"	m	language:C++	struct:swd	access:public
iget	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	f	language:C++	signature:(int dev,int nr)
iget	include/linux/fs.h	/^extern struct m_inode * iget(int dev,int nr);$/;"	p	language:C++	signature:(int dev,int nr)
ignore_int	boot/head.s	/^	lea ignore_int,%edx$/;"	v	language:C++
immoutb_p	kernel/blk_drv/floppy.c	50;"	d	language:C++	file:
in	fs/select.c	/^	fd_set res_in, in = 0, *inp;$/;"	l	language:C++
in_group_p	include/linux/sched.h	/^extern int in_group_p(gid_t grp);$/;"	p	language:C++	signature:(gid_t grp)
in_group_p	kernel/sys.c	/^int in_group_p(gid_t grp)$/;"	f	language:C++	signature:(gid_t grp)
inb	fs/char_dev.c	/^			put_fs_byte(inb(i),buf++);$/;"	p	language:C++	file:	signature:(i)
inb	include/asm/io.h	5;"	d	language:C++
inb	kernel/chr_drv/serial.c	/^	(void)inb(port);	\/* read data port to reset things (?) *\/$/;"	p	language:C++	file:	signature:(port)
inb_p	include/asm/io.h	17;"	d	language:C++
index	kernel/math/ea.c	/^	unsigned char ss,index,base;$/;"	l	language:C++
info	include/linux/math_emu.h	/^struct info {$/;"	s	language:C++
info::___cs	include/linux/math_emu.h	/^	long ___cs;$/;"	m	language:C++	struct:info	access:public
info::___ds	include/linux/math_emu.h	/^	long ___ds;$/;"	m	language:C++	struct:info	access:public
info::___eax	include/linux/math_emu.h	/^	long ___eax;$/;"	m	language:C++	struct:info	access:public
info::___ebp	include/linux/math_emu.h	/^	long ___ebp;$/;"	m	language:C++	struct:info	access:public
info::___ebx	include/linux/math_emu.h	/^	long ___ebx;$/;"	m	language:C++	struct:info	access:public
info::___ecx	include/linux/math_emu.h	/^	long ___ecx;$/;"	m	language:C++	struct:info	access:public
info::___edi	include/linux/math_emu.h	/^	long ___edi;$/;"	m	language:C++	struct:info	access:public
info::___edx	include/linux/math_emu.h	/^	long ___edx;$/;"	m	language:C++	struct:info	access:public
info::___eflags	include/linux/math_emu.h	/^	long ___eflags;$/;"	m	language:C++	struct:info	access:public
info::___eip	include/linux/math_emu.h	/^	long ___eip;$/;"	m	language:C++	struct:info	access:public
info::___es	include/linux/math_emu.h	/^	long ___es;$/;"	m	language:C++	struct:info	access:public
info::___esi	include/linux/math_emu.h	/^	long ___esi;$/;"	m	language:C++	struct:info	access:public
info::___esp	include/linux/math_emu.h	/^	long ___esp;$/;"	m	language:C++	struct:info	access:public
info::___fs	include/linux/math_emu.h	/^	long ___fs;$/;"	m	language:C++	struct:info	access:public
info::___math_ret	include/linux/math_emu.h	/^	long ___math_ret;$/;"	m	language:C++	struct:info	access:public
info::___orig_eax	include/linux/math_emu.h	/^	long ___orig_eax;$/;"	m	language:C++	struct:info	access:public
info::___orig_eip	include/linux/math_emu.h	/^	long ___orig_eip;$/;"	m	language:C++	struct:info	access:public
info::___ss	include/linux/math_emu.h	/^	long ___ss;$/;"	m	language:C++	struct:info	access:public
info::___sys_call_ret	include/linux/math_emu.h	/^	long ___sys_call_ret;$/;"	m	language:C++	struct:info	access:public
init	init/main.c	/^extern void init(void);$/;"	p	language:C++	file:	signature:(void)
init	init/main.c	/^void init(void)$/;"	f	language:C++	signature:(void)
init	kernel/chr_drv/serial.c	/^static void init(int port)$/;"	f	language:C++	file:	signature:(int port)
init_bucket_desc	lib/malloc.c	/^static inline void init_bucket_desc()$/;"	f	language:C++	file:	signature:()
init_swapping	mm/swap.c	/^void init_swapping(void)$/;"	f	language:C++	signature:(void)
init_task	kernel/sched.c	/^static union task_union init_task = {INIT_TASK,};$/;"	v	language:C++	typeref:union:task_union	file:
inline	lib/string.c	12;"	d	language:C++	file:
ino_t	include/sys/types.h	/^typedef unsigned short ino_t;$/;"	t	language:C++
inode	fs/bitmap.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/exec.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/inode.c	/^	struct m_inode * inode, * empty;$/;"	l	language:C++
inode	fs/inode.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C++
inode	fs/namei.c	/^	struct m_inode * dir, *inode;$/;"	l	language:C++
inode	fs/namei.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/pipe.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/read_write.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/stat.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	fs/super.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode	include/linux/fs.h	/^	unsigned short inode;$/;"	m	language:C++	struct:dir_entry	access:public
inode	mm/memory.c	/^	struct m_inode * inode;$/;"	l	language:C++
inode_table	fs/inode.c	/^struct m_inode inode_table[NR_INODE]={{0,},};$/;"	v	language:C++	typeref:struct:m_inode
inode_table	include/linux/fs.h	/^extern struct m_inode inode_table[NR_INODE];$/;"	x	language:C++
inp	fs/select.c	/^	fd_set res_in, in = 0, *inp;$/;"	l	language:C++
inr	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C++
inr	fs/namei.c	/^	int inr,namelen;$/;"	l	language:C++
inr	fs/namei.c	/^	int namelen,inr;$/;"	l	language:C++
insert_char	kernel/chr_drv/console.c	/^static void insert_char(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
insert_into_queues	fs/buffer.c	/^static inline void insert_into_queues(struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(struct buffer_head * bh)
insert_line	kernel/chr_drv/console.c	/^static void insert_line(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
int3	kernel/traps.c	/^void int3(void);$/;"	p	language:C++	file:	signature:(void)
int_to_real	include/linux/math_emu.h	/^void int_to_real(const temp_int * __a, temp_real * __b);$/;"	p	language:C++	signature:(const temp_int * __a, temp_real * __b)
int_to_real	kernel/math/convert.c	/^void int_to_real(const temp_int * a, temp_real * b)$/;"	f	language:C++	signature:(const temp_int * a, temp_real * b)
interp	fs/exec.c	/^		char buf[128], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C++
interruptible_sleep_on	include/linux/sched.h	/^extern void interruptible_sleep_on(struct task_struct ** p);$/;"	p	language:C++	signature:(struct task_struct ** p)
interruptible_sleep_on	kernel/sched.c	/^void interruptible_sleep_on(struct task_struct **p)$/;"	f	language:C++	signature:(struct task_struct **p)
invalid_TSS	kernel/traps.c	/^void invalid_TSS(void);$/;"	p	language:C++	file:	signature:(void)
invalid_op	kernel/traps.c	/^void invalid_op(void);$/;"	p	language:C++	file:	signature:(void)
invalidate	include/linux/mm.h	26;"	d	language:C++
invalidate_buffers	fs/buffer.c	/^void inline invalidate_buffers(int dev)$/;"	f	language:C++	signature:(int dev)
invalidate_inodes	fs/inode.c	/^void invalidate_inodes(int dev)$/;"	f	language:C++	signature:(int dev)
ioctl	include/unistd.h	/^int ioctl(int fildes, int cmd, ...);$/;"	p	language:C++	signature:(int fildes, int cmd, ...)
ioctl_ptr	fs/ioctl.c	/^typedef int (*ioctl_ptr)(int dev,int cmd,int arg);$/;"	t	language:C++	file:
ioctl_table	fs/ioctl.c	/^static ioctl_ptr ioctl_table[]={$/;"	v	language:C++	file:
ip	kernel/vsprintf.c	/^	int *ip;$/;"	l	language:C++
iput	fs/inode.c	/^void iput(struct m_inode * inode)$/;"	f	language:C++	signature:(struct m_inode * inode)
iput	include/linux/fs.h	/^extern void iput(struct m_inode * inode);$/;"	p	language:C++	signature:(struct m_inode * inode)
ir	include/linux/math_emu.h	/^	int ir:1;$/;"	m	language:C++	struct:swd	access:public
iret	include/asm/system.h	20;"	d	language:C++
irq13	kernel/traps.c	/^void irq13(void);$/;"	p	language:C++	file:	signature:(void)
is_digit	kernel/vsprintf.c	16;"	d	language:C++	file:
is_orphaned_pgrp	kernel/chr_drv/tty_io.c	/^int is_orphaned_pgrp(int pgrp);$/;"	p	language:C++	file:	signature:(int pgrp)
is_orphaned_pgrp	kernel/exit.c	/^int is_orphaned_pgrp(int pgrp)$/;"	f	language:C++	signature:(int pgrp)
isalnum	include/ctype.h	16;"	d	language:C++
isalpha	include/ctype.h	17;"	d	language:C++
isascii	include/ctype.h	28;"	d	language:C++
iscntrl	include/ctype.h	18;"	d	language:C++
iscolor	kernel/chr_drv/console.c	136;"	d	language:C++	file:
isdigit	include/ctype.h	19;"	d	language:C++
isgraph	include/ctype.h	20;"	d	language:C++
islower	include/ctype.h	21;"	d	language:C++
isprint	include/ctype.h	22;"	d	language:C++
ispunct	include/ctype.h	23;"	d	language:C++
isspace	include/ctype.h	24;"	d	language:C++
isupper	include/ctype.h	25;"	d	language:C++
isxdigit	include/ctype.h	26;"	d	language:C++
it_interval	include/sys/time.h	/^	struct	timeval it_interval;	\/* timer interval *\/$/;"	m	language:C++	struct:itimerval	typeref:struct:itimerval::timeval	access:public
it_value	include/sys/time.h	/^	struct	timeval it_value;	\/* current value *\/$/;"	m	language:C++	struct:itimerval	typeref:struct:itimerval::timeval	access:public
itimerval	include/sys/time.h	/^struct	itimerval {$/;"	s	language:C++
itimerval::it_interval	include/sys/time.h	/^	struct	timeval it_interval;	\/* timer interval *\/$/;"	m	language:C++	struct:itimerval	typeref:struct:itimerval::timeval	access:public
itimerval::it_value	include/sys/time.h	/^	struct	timeval it_value;	\/* current value *\/$/;"	m	language:C++	struct:itimerval	typeref:struct:itimerval::timeval	access:public
j	fs/bitmap.c	/^	int i,j;$/;"	l	language:C++
j	fs/pipe.c	/^	int i,j;$/;"	l	language:C++
j	kernel/sched.c	/^	int i,j = 4096-sizeof(struct task_struct);$/;"	l	language:C++
j	mm/memory.c	/^	int i,j,k,free=0,total=0;$/;"	l	language:C++
j	mm/swap.c	/^	int swap_size,i,j;$/;"	l	language:C++
jiffies	include/linux/sched.h	/^extern unsigned long volatile jiffies;$/;"	x	language:C++
jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	language:C++	struct:timer_list	file:	access:public
jiffies	kernel/sched.c	/^unsigned long volatile jiffies=0;$/;"	v	language:C++
jiffies_offset	include/linux/sched.h	/^extern int jiffies_offset;$/;"	x	language:C++
jiffies_offset	kernel/sched.c	/^int jiffies_offset = 0;		\/* # clock ticks to add to get "true$/;"	v	language:C++
k	kernel/math/get_put.c	/^	int k,rem;$/;"	l	language:C++
k	kernel/math/get_put.c	/^	int k;$/;"	l	language:C++
k	mm/memory.c	/^	int i,j,k,free=0,total=0;$/;"	l	language:C++
kernel_mktime	init/main.c	/^extern long kernel_mktime(struct tm * tm);$/;"	p	language:C++	file:	signature:(struct tm * tm)
kernel_mktime	kernel/mktime.c	/^long kernel_mktime(struct tm * tm)$/;"	f	language:C++	signature:(struct tm * tm)
key_map	kernel/chr_drv/keyboard.S	/^	lea key_map,%ebx$/;"	v	language:C++
keyboard_interrupt	kernel/chr_drv/console.c	/^extern void keyboard_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
kill	include/signal.h	/^int kill(pid_t pid, int sig);$/;"	p	language:C++	signature:(pid_t pid, int sig)
kill	include/unistd.h	/^int kill(pid_t pid, int signal);$/;"	p	language:C++	signature:(pid_t pid, int signal)
kill_pg	kernel/chr_drv/tty_io.c	/^int kill_pg(int pgrp, int sig, int priv);$/;"	p	language:C++	file:	signature:(int pgrp, int sig, int priv)
kill_pg	kernel/exit.c	/^int kill_pg(int pgrp, int sig, int priv)$/;"	f	language:C++	signature:(int pgrp, int sig, int priv)
kill_proc	kernel/exit.c	/^int kill_proc(int pid, int sig, int priv)$/;"	f	language:C++	signature:(int pid, int sig, int priv)
l	kernel/chr_drv/console.c	/^	int currcons, l;$/;"	l	language:C++
l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	language:C++	struct:flock	access:public
l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	language:C++	struct:flock	access:public
l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	language:C++	struct:flock	access:public
l_type	include/fcntl.h	/^	short l_type;$/;"	m	language:C++	struct:flock	access:public
l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	language:C++	struct:flock	access:public
last_inode	fs/inode.c	/^	static struct m_inode * last_inode = inode_table;$/;"	l	language:C++	file:
last_pid	kernel/fork.c	/^long last_pid=0;$/;"	v	language:C++
last_task_used_math	include/linux/sched.h	/^extern struct task_struct *last_task_used_math;$/;"	x	language:C++
last_task_used_math	kernel/sched.c	/^struct task_struct *last_task_used_math = NULL;$/;"	v	language:C++	typeref:struct:task_struct
ldiv_t	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	t	language:C++	typeref:struct:__anon3
ldt	include/linux/sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
ldt	include/linux/sched.h	/^	struct desc_struct ldt[3];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::desc_struct	access:public
leader	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
leds	kernel/chr_drv/keyboard.S	/^	movb leds,%al$/;"	v	language:C++
left	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C++
len	fs/exec.c	/^	int len, offset = 0;$/;"	l	language:C++
len	fs/namei.c	/^	int len;$/;"	l	language:C++
len	kernel/blk_drv/ramdisk.c	/^	int	len;$/;"	l	language:C++
len	kernel/vsprintf.c	/^	int len;$/;"	l	language:C++
lf	kernel/chr_drv/console.c	/^static void lf(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
library	include/linux/sched.h	/^	struct m_inode * library;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
link	include/unistd.h	/^int link(const char * filename1, const char * filename2);$/;"	p	language:C++	signature:(const char * filename1, const char * filename2)
ll_rw_block	include/linux/fs.h	/^extern void ll_rw_block(int rw, struct buffer_head * bh);$/;"	p	language:C++	signature:(int rw, struct buffer_head * bh)
ll_rw_block	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_block(int rw, struct buffer_head * bh)$/;"	f	language:C++	signature:(int rw, struct buffer_head * bh)
ll_rw_page	include/linux/fs.h	/^extern void ll_rw_page(int rw, int dev, int nr, char * buffer);$/;"	p	language:C++	signature:(int rw, int dev, int nr, char * buffer)
ll_rw_page	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_page(int rw, int dev, int page, char * buffer)$/;"	f	language:C++	signature:(int rw, int dev, int page, char * buffer)
lldt	include/linux/sched.h	209;"	d	language:C++
lnamei	fs/namei.c	/^struct m_inode * lnamei(const char * pathname)$/;"	f	language:C++	signature:(const char * pathname)
lnamei	include/linux/fs.h	/^extern struct m_inode * lnamei(const char * pathname);$/;"	p	language:C++	signature:(const char * pathname)
localtime	include/time.h	/^struct tm *localtime(const time_t * tp);$/;"	p	language:C++	signature:(const time_t * tp)
lock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void lock_buffer(struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(struct buffer_head * bh)
lock_inode	fs/inode.c	/^static inline void lock_inode(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
lock_super	fs/super.c	/^static void lock_super(struct super_block * sb)$/;"	f	language:C++	file:	signature:(struct super_block * sb)
long_real	include/linux/math_emu.h	/^} long_real;$/;"	t	language:C++	typeref:struct:__anon6
long_to_temp	include/linux/math_emu.h	/^void long_to_temp(const long_real * __a, temp_real * __b);$/;"	p	language:C++	signature:(const long_real * __a, temp_real * __b)
long_to_temp	kernel/math/convert.c	/^void long_to_temp(const long_real * a, temp_real * b)$/;"	f	language:C++	signature:(const long_real * a, temp_real * b)
longs	kernel/signal.c	/^	int longs;$/;"	l	language:C++
lp	kernel/sys.c	/^	unsigned long	*lp, *lpend, *dest;$/;"	l	language:C++
lpend	kernel/sys.c	/^	unsigned long	*lp, *lpend, *dest;$/;"	l	language:C++
lr	kernel/math/get_put.c	/^	long_real lr;$/;"	l	language:C++
lseek	include/unistd.h	/^int lseek(int fildes, off_t offset, int origin);$/;"	p	language:C++	signature:(int fildes, off_t offset, int origin)
lshift	kernel/chr_drv/keyboard.S	/^	.long do_self,do_self,lshift,do_self	\/* 28-2B { para lshift , *\/$/;"	v	language:C++
ltr	include/linux/sched.h	208;"	d	language:C++
lzone	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
m0	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
m1	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
m2	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
m3	include/linux/math_emu.h	/^	short m0,m1,m2,m3;$/;"	m	language:C++	struct:__anon5	access:public
m_inode	include/linux/fs.h	/^struct m_inode {$/;"	s	language:C++
m_inode::i_atime	include/linux/fs.h	/^	unsigned long i_atime;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_count	include/linux/fs.h	/^	unsigned short i_count;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_ctime	include/linux/fs.h	/^	unsigned long i_ctime;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_dev	include/linux/fs.h	/^	unsigned short i_dev;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_dirt	include/linux/fs.h	/^	unsigned char i_dirt;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_lock	include/linux/fs.h	/^	unsigned char i_lock;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_mount	include/linux/fs.h	/^	unsigned char i_mount;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_mtime	include/linux/fs.h	/^	unsigned long i_mtime;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_num	include/linux/fs.h	/^	unsigned short i_num;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_pipe	include/linux/fs.h	/^	unsigned char i_pipe;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_seek	include/linux/fs.h	/^	unsigned char i_seek;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_update	include/linux/fs.h	/^	unsigned char i_update;$/;"	m	language:C++	struct:m_inode	access:public
m_inode::i_wait	include/linux/fs.h	/^	struct task_struct * i_wait;$/;"	m	language:C++	struct:m_inode	typeref:struct:m_inode::task_struct	access:public
m_inode::i_wait2	include/linux/fs.h	/^	struct task_struct * i_wait2;	\/* for pipes *\/$/;"	m	language:C++	struct:m_inode	typeref:struct:m_inode::task_struct	access:public
m_inode::i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:m_inode	access:public
machine	include/sys/utsname.h	/^	char machine[9];$/;"	m	language:C++	struct:utsname	access:public
main	init/main.c	/^void main(void)		\/* This really IS void, no error here. *\/$/;"	f	language:C++	signature:(void)
main	tools/build.c	/^int main(int argc, char ** argv)$/;"	f	language:C++	signature:(int argc, char ** argv)
main_memory_start	init/main.c	/^static long main_memory_start = 0;$/;"	v	language:C++	file:
major	fs/select.c	/^	int major, minor;$/;"	l	language:C++
major	kernel/blk_drv/ll_rw_blk.c	/^	unsigned int major = MAJOR(dev);$/;"	l	language:C++
major	kernel/blk_drv/ll_rw_blk.c	/^	unsigned int major;$/;"	l	language:C++
major_root	tools/build.c	/^	char major_root, minor_root;$/;"	l	language:C++
major_swap	tools/build.c	/^	char major_swap, minor_swap;$/;"	l	language:C++
make_request	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(int major,int rw, struct buffer_head * bh)
malloc	include/linux/kernel.h	/^void * malloc(unsigned int size);$/;"	p	language:C++	signature:(unsigned int size)
malloc	lib/malloc.c	/^void *malloc(unsigned int len)$/;"	f	language:C++	signature:(unsigned int len)
mask	fs/select.c	/^	fd_set mask;$/;"	l	language:C++
mask	kernel/math/div.c	/^	unsigned int mask = 0;$/;"	l	language:C++
mask	kernel/sched.c	/^	unsigned char mask = 0x10 << nr;$/;"	l	language:C++
mask	kernel/sched.c	/^	unsigned char mask = 0x10;$/;"	l	language:C++
match	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	f	language:C++	file:	signature:(int len,const char * name,struct dir_entry * de)
math_abort	include/linux/math_emu.h	52;"	d	language:C++
math_emulate	kernel/math/math_emulate.c	/^void math_emulate(long ___false)$/;"	f	language:C++	signature:(long ___false)
math_error	kernel/math/error.c	/^void math_error(void)$/;"	f	language:C++	signature:(void)
math_state_restore	kernel/sched.c	/^void math_state_restore()$/;"	f	language:C++	signature:()
mem_init	init/main.c	/^extern void mem_init(long start, long end);$/;"	p	language:C++	file:	signature:(long start, long end)
mem_init	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	f	language:C++	signature:(long start_mem, long end_mem)
mem_map	include/linux/mm.h	/^extern unsigned char mem_map [ PAGING_PAGES ];$/;"	x	language:C++
mem_map	mm/memory.c	/^unsigned char mem_map [ PAGING_PAGES ] = {0,};$/;"	v	language:C++
mem_use	kernel/sched.c	/^extern void mem_use(void);$/;"	p	language:C++	file:	signature:(void)
memchr	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	f	language:C++	signature:(const void * cs,char c,int count)
memcmp	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	f	language:C++	signature:(const void * cs,const void * ct,int count)
memcpy	include/asm/memory.h	8;"	d	language:C++
memcpy	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	f	language:C++	signature:(void * dest,const void * src, int n)
memcpy	kernel/blk_drv/ramdisk.c	/^		(void ) memcpy(addr,$/;"	p	language:C++	file:	signature:(addr, CURRENT->buffer, len)
memcpy	kernel/blk_drv/ramdisk.c	/^		(void) memcpy(cp, bh->b_data, BLOCK_SIZE);$/;"	p	language:C++	file:	signature:(cp, bh->b_data, BLOCK_SIZE)
memmove	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	f	language:C++	signature:(void * dest,const void * src, int n)
memory_end	init/main.c	/^static long memory_end = 0;$/;"	v	language:C++	file:
memset	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	f	language:C++	signature:(void * s,char c,int count)
mi	fs/super.c	/^	struct m_inode * mi;$/;"	l	language:C++
min	fs/open.c	/^	int min;$/;"	l	language:C++
minimum	kernel/chr_drv/tty_io.c	/^	int minimum,time;$/;"	l	language:C++
minor	fs/select.c	/^	int major, minor;$/;"	l	language:C++
minor_root	tools/build.c	/^	char major_root, minor_root;$/;"	l	language:C++
minor_swap	tools/build.c	/^	char major_swap, minor_swap;$/;"	l	language:C++
minus	kernel/chr_drv/keyboard.S	/^	.long do_self,minus,rshift,do_self	\/* 34-37 . - rshift * *\/$/;"	v	language:C++
mkdir	include/sys/stat.h	/^extern int mkdir(const char *_path, mode_t mode);$/;"	p	language:C++	signature:(const char *_path, mode_t mode)
mkfifo	include/sys/stat.h	/^extern int mkfifo(const char *_path, mode_t mode);$/;"	p	language:C++	signature:(const char *_path, mode_t mode)
mknod	include/unistd.h	/^int mknod(const char * filename, mode_t mode, dev_t dev);$/;"	p	language:C++	signature:(const char * filename, mode_t mode, dev_t dev)
mktime	include/time.h	/^time_t mktime(struct tm * tp);$/;"	p	language:C++	signature:(struct tm * tp)
mod	kernel/math/ea.c	/^	unsigned char mod,rm;$/;"	l	language:C++
mode	fs/ioctl.c	/^	int dev,mode;$/;"	l	language:C++
mode	fs/namei.c	/^	int mode = inode->i_mode;$/;"	l	language:C++
mode_t	include/sys/types.h	/^typedef unsigned short mode_t;$/;"	t	language:C++
modtime	fs/open.c	/^	long actime,modtime;$/;"	l	language:C++
modtime	include/utime.h	/^	time_t modtime;$/;"	m	language:C++	struct:utimbuf	access:public
moff_timer	kernel/sched.c	/^static int moff_timer[4]={0,0,0,0};$/;"	v	language:C++	file:
mon_timer	kernel/sched.c	/^static int  mon_timer[4]={0,0,0,0};$/;"	v	language:C++	file:
month	kernel/mktime.c	/^static int month[12] = {$/;"	v	language:C++	file:
mount	include/unistd.h	/^int mount(const char * specialfile, const char * dir, int rwflag);$/;"	p	language:C++	signature:(const char * specialfile, const char * dir, int rwflag)
mount_root	fs/super.c	/^void mount_root(void)$/;"	f	language:C++	signature:(void)
mount_root	include/linux/fs.h	/^extern void mount_root(void);$/;"	p	language:C++	signature:(void)
mov	boot/setup.S	/^	mov	[0],dx		! it from 0x90000.$/;"	v	language:C++
mov	boot/setup.S	/^	mov	[10],bx$/;"	v	language:C++
mov	boot/setup.S	/^	mov	[12],cx$/;"	v	language:C++
mov	boot/setup.S	/^	mov	[2],ax$/;"	v	language:C++
mov	boot/setup.S	/^	mov	[4],bx		! bh = display page$/;"	v	language:C++
mov	boot/setup.S	/^	mov	[8],ax$/;"	v	language:C++
mov	boot/setup.S	/^novga:	mov	[14],ax$/;"	v	language:C++
move_to_user_mode	include/asm/system.h	1;"	d	language:C++
movw	init/main.s	/^	movw 589838,%ax$/;"	v	language:C++
movw	init/main.s	/^	movw 589838,%dx$/;"	v	language:C++
movzwl	init/main.s	/^	movzwl 589826,%eax$/;"	v	language:C++
movzwl	init/main.s	/^	movzwl 590330,%eax$/;"	v	language:C++
movzwl	init/main.s	/^	movzwl 590332,%eax$/;"	v	language:C++
mpty_queues	kernel/chr_drv/tty_io.c	67;"	d	language:C++	file:
mpty_table	kernel/chr_drv/tty_io.c	72;"	d	language:C++	file:
mpty_write	include/linux/tty.h	/^void mpty_write(struct tty_struct * tty);$/;"	p	language:C++	signature:(struct tty_struct * tty)
mpty_write	kernel/chr_drv/pty.c	/^void mpty_write(struct tty_struct * tty)$/;"	f	language:C++	signature:(struct tty_struct * tty)
msb	boot/setup.S	/^!			msb = Cols lsb = Rows:$/;"	v	language:C++
mul64	kernel/math/mul.c	/^static void mul64(const temp_real * a, const temp_real * b, int * c)$/;"	f	language:C++	file:	signature:(const temp_real * a, const temp_real * b, int * c)
n_desc	include/a.out.h	/^  short n_desc;$/;"	m	language:C++	struct:nlist	access:public
n_name	include/a.out.h	/^    char *n_name;$/;"	m	language:C++	union:nlist::__anon1	access:public
n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	language:C++	union:nlist::__anon1	typeref:struct:nlist::__anon1::nlist	access:public
n_other	include/a.out.h	/^  char n_other;$/;"	m	language:C++	struct:nlist	access:public
n_strx	include/a.out.h	/^    long n_strx;$/;"	m	language:C++	union:nlist::__anon1	access:public
n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	language:C++	struct:nlist	access:public
n_un	include/a.out.h	/^  } n_un;$/;"	m	language:C++	struct:nlist	typeref:union:nlist::__anon1	access:public
n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	language:C++	struct:nlist	access:public
name	include/linux/fs.h	/^	char name[NAME_LEN];$/;"	m	language:C++	struct:dir_entry	access:public
name_block	fs/namei.c	/^	struct buffer_head * bh, * name_block;$/;"	l	language:C++
namei	fs/namei.c	/^struct m_inode * namei(const char * pathname)$/;"	f	language:C++	signature:(const char * pathname)
namei	include/linux/fs.h	/^extern struct m_inode * namei(const char * pathname);$/;"	p	language:C++	signature:(const char * pathname)
namelen	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C++
namelen	fs/namei.c	/^	int inr,namelen;$/;"	l	language:C++
namelen	fs/namei.c	/^	int namelen, i;$/;"	l	language:C++
namelen	fs/namei.c	/^	int namelen,inr;$/;"	l	language:C++
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C++
nblocks	kernel/blk_drv/ramdisk.c	/^	int		nblocks;$/;"	l	language:C++
new_block	fs/bitmap.c	/^int new_block(int dev)$/;"	f	language:C++	signature:(int dev)
new_block	include/linux/fs.h	/^extern int new_block(int dev);$/;"	p	language:C++	signature:(int dev)
new_code_base	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C++
new_data_base	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C++
new_fs	fs/exec.c	/^	unsigned long old_fs, new_fs;$/;"	l	language:C++
new_inode	fs/bitmap.c	/^struct m_inode * new_inode(int dev)$/;"	f	language:C++	signature:(int dev)
new_inode	include/linux/fs.h	/^extern struct m_inode * new_inode(int dev);$/;"	p	language:C++	signature:(int dev)
new_page	mm/memory.c	/^	unsigned long new_page;$/;"	l	language:C++
new_page	mm/memory.c	/^	unsigned long old_page,new_page;$/;"	l	language:C++
newattr	kernel/chr_drv/console.c	/^			    { short newattr = (attr&0xf0)|(0xf&(~attr));$/;"	l	language:C++
next	kernel/blk_drv/blk.h	/^	struct request * next;$/;"	m	language:C++	struct:request	typeref:struct:request::request	access:public
next	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C++
next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	language:C++	struct:timer_list	typeref:struct:timer_list::timer_list	file:	access:public
next	lib/malloc.c	/^	struct bucket_desc	*next;$/;"	m	language:C++	struct:bucket_desc	typeref:struct:bucket_desc::bucket_desc	file:	access:public
next_timer	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	language:C++	typeref:struct:timer_list	file:
nice	include/unistd.h	/^int nice(int val);$/;"	p	language:C++	signature:(int val)
nlink_t	include/sys/types.h	/^typedef unsigned char nlink_t;$/;"	t	language:C++
nlist	include/a.out.h	/^struct nlist {$/;"	s	language:C++
nlist::__anon1::n_name	include/a.out.h	/^    char *n_name;$/;"	m	language:C++	union:nlist::__anon1	access:public
nlist::__anon1::n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	language:C++	union:nlist::__anon1	typeref:struct:nlist::__anon1::nlist	access:public
nlist::__anon1::n_strx	include/a.out.h	/^    long n_strx;$/;"	m	language:C++	union:nlist::__anon1	access:public
nlist::n_desc	include/a.out.h	/^  short n_desc;$/;"	m	language:C++	struct:nlist	access:public
nlist::n_other	include/a.out.h	/^  char n_other;$/;"	m	language:C++	struct:nlist	access:public
nlist::n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	language:C++	struct:nlist	access:public
nlist::n_un	include/a.out.h	/^  } n_un;$/;"	m	language:C++	struct:nlist	typeref:union:nlist::__anon1	access:public
nlist::n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	language:C++	struct:nlist	access:public
nmi	kernel/traps.c	/^void nmi(void);$/;"	p	language:C++	file:	signature:(void)
nodename	include/sys/utsname.h	/^	char nodename[MAXHOSTNAMELEN+1];$/;"	m	language:C++	struct:utsname	access:public
none	kernel/chr_drv/keyboard.S	/^	.long func,none,none,none		\/* 58-5B f12 ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,do_self,func		\/* 54-57 sysreq ? < f11 *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 5C-5F ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 60-63 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 64-67 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 68-6B ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 6C-6F ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 70-73 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 74-77 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 78-7B ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 7C-7F ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 80-83 ? br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 84-87 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 88-8B br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 8C-8F br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 90-93 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 94-97 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* 98-9B br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* A0-A3 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* A4-A7 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* AC-AF br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* B0-B3 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* BC-BF br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* C0-C3 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* C4-C7 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* C8-CB br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* CC-CF br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* D0-D3 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* D4-D7 br br br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* D8-DB br ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* DC-DF ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* E0-E3 e0 e1 ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* E4-E7 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* E8-EB ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* EC-EF ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* F0-F3 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* F4-F7 ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* F8-FB ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,none,none		\/* FC-FF ? ? ? ? *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,unlshift,none		\/* A8-AB br br unlshift br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,none,unrshift,none		\/* B4-B7 br br unrshift br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long none,unctrl,none,none		\/* 9C-9F br unctrl br br *\/$/;"	v	language:C++
none	kernel/chr_drv/keyboard.S	/^	.long unalt,none,uncaps,none		\/* B8-BB unalt br uncaps br *\/$/;"	v	language:C++
nop	include/asm/system.h	18;"	d	language:C++
normalize	kernel/math/compare.c	/^static void normalize(temp_real * a)$/;"	f	language:C++	file:	signature:(temp_real * a)
npar	kernel/chr_drv/console.c	125;"	d	language:C++	file:
nr	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C++
nr	fs/namei.c	/^	int nr,block;$/;"	l	language:C++
nr	fs/select.c	/^	int nr;$/;"	m	language:C++	struct:__anon9	file:	access:public
nr	kernel/chr_drv/console.c	/^	int nr;$/;"	l	language:C++
nr	kernel/chr_drv/pty.c	/^	int nr = tty - tty_table;$/;"	l	language:C++
nr	mm/memory.c	/^	int nr[4];$/;"	l	language:C++
nr	mm/memory.c	/^	unsigned long * dir, nr;$/;"	l	language:C++
nr	mm/memory.c	/^	unsigned long nr;$/;"	l	language:C++
nr	mm/swap.c	/^	int nr;$/;"	l	language:C++
nr_buffers	include/linux/fs.h	/^extern int nr_buffers;$/;"	x	language:C++
nr_sectors	kernel/blk_drv/blk.h	/^	unsigned long nr_sectors;$/;"	m	language:C++	struct:request	access:public
nr_sects	include/linux/hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	language:C++	struct:partition	access:public
nr_sects	kernel/blk_drv/hd.c	/^	long nr_sects;$/;"	m	language:C++	struct:hd_struct	file:	access:public
nsect	kernel/blk_drv/hd.c	/^	unsigned int nsect;$/;"	l	language:C++
num	kernel/chr_drv/keyboard.S	/^	.long func,num,scroll,cursor		\/* 44-47 f10 num scr home *\/$/;"	v	language:C++
number	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	f	language:C++	file:	signature:(char * str, int num, int base, int size, int precision ,int type)
oe	include/linux/math_emu.h	/^	int oe:1;$/;"	m	language:C++	struct:swd	access:public
off_t	include/sys/types.h	/^typedef long off_t;$/;"	t	language:C++
offset	fs/block_dev.c	/^	int offset = *pos & (BLOCK_SIZE-1);$/;"	l	language:C++
offset	fs/exec.c	/^	int len, offset = 0;$/;"	l	language:C++
offset	kernel/math/ea.c	/^	int offset = 0;$/;"	l	language:C++
offset	kernel/math/ea.c	/^	long offset = 0;$/;"	l	language:C++
offsetof	include/stddef.h	17;"	d	language:C++
ok	boot/setup.S	/^! well, that went ok, I hope. Now we have to reprogram the interrupts :-($/;"	v	language:C++
ok	kernel/math/div.c	/^	char ok;$/;"	l	language:C++
old	kernel/chr_drv/console.c	/^	unsigned short tmp, old = video_erase_char;$/;"	l	language:C++
old	kernel/sched.c	/^	int old = current->alarm;$/;"	l	language:C++
old	kernel/signal.c	/^	int old=current->blocked;$/;"	l	language:C++
old	kernel/sys.c	/^	int old = current->umask;$/;"	l	language:C++
old	kernel/sys.c	/^	struct rlimit new, *old;$/;"	l	language:C++
old_code_base	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C++
old_data_base	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C++
old_eip	kernel/signal.c	/^	long old_eip=eip;$/;"	l	language:C++
old_fs	fs/exec.c	/^		unsigned long old_fs;$/;"	l	language:C++
old_fs	fs/exec.c	/^	unsigned long old_fs, new_fs;$/;"	l	language:C++
old_page	mm/memory.c	/^	unsigned long old_page,new_page;$/;"	l	language:C++
old_ruid	kernel/sys.c	/^	int old_ruid = current->uid;$/;"	l	language:C++
old_task	fs/select.c	/^	struct task_struct * old_task;$/;"	m	language:C++	struct:__anon8	typeref:struct:__anon8::task_struct	file:	access:public
oldblocked	kernel/exit.c	/^	unsigned long oldblocked;$/;"	l	language:C++
oldbottom	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C++
oldinode	fs/namei.c	/^	struct m_inode * oldinode, * dir;$/;"	l	language:C++
oldtop	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C++
oom	include/linux/mm.h	/^extern inline volatile void oom(void)$/;"	f	language:C++	signature:(void)
open	include/fcntl.h	/^extern int open(const char * filename, int flags, ...);$/;"	p	language:C++	signature:(const char * filename, int flags, ...)
open	include/unistd.h	/^int open(const char * filename, int flag, ...);$/;"	p	language:C++	signature:(const char * filename, int flag, ...)
open	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	f	language:C++	signature:(const char * filename, int flag, ...)
open_namei	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	f	language:C++	signature:(const char * pathname, int flag, int mode, struct m_inode ** res_inode)
open_namei	include/linux/fs.h	/^extern int open_namei(const char * pathname, int flag, int mode,$/;"	p	language:C++	signature:(const char * pathname, int flag, int mode, struct m_inode ** res_inode)
origin	kernel/chr_drv/console.c	115;"	d	language:C++	file:
other_tty	kernel/chr_drv/tty_io.c	/^	struct tty_struct * other_tty = NULL;$/;"	l	language:C++
out	fs/select.c	/^	fd_set res_out, out = 0, *outp;$/;"	l	language:C++
outb	include/asm/io.h	1;"	d	language:C++
outb_p	include/asm/io.h	11;"	d	language:C++
outp	fs/select.c	/^	fd_set res_out, out = 0, *outp;$/;"	l	language:C++
output_byte	kernel/blk_drv/floppy.c	/^static void output_byte(char byte)$/;"	f	language:C++	file:	signature:(char byte)
overflow	kernel/traps.c	/^void overflow(void);$/;"	p	language:C++	file:	signature:(void)
p	fs/block_dev.c	/^	register char * p;$/;"	l	language:C++
p	fs/exec.c	/^	unsigned long p=PAGE_SIZE*MAX_ARG_PAGES-4;$/;"	l	language:C++
p	fs/file_dev.c	/^			char * p = nr + bh->b_data;$/;"	l	language:C++
p	fs/file_dev.c	/^	char * p;$/;"	l	language:C++
p	fs/super.c	/^	struct super_block * p;$/;"	l	language:C++
p	fs/truncate.c	/^	unsigned short * p;$/;"	l	language:C++
p	kernel/blk_drv/hd.c	/^	struct partition *p;$/;"	l	language:C++
p	kernel/chr_drv/console.c	/^	char * p = RESPONSE;$/;"	l	language:C++
p	kernel/chr_drv/console.c	/^	unsigned short * p = (unsigned short *) pos;$/;"	l	language:C++
p	kernel/exit.c	/^		struct task_struct **p;$/;"	l	language:C++
p	kernel/exit.c	/^	struct task_struct ** p;$/;"	l	language:C++
p	kernel/exit.c	/^	struct task_struct **p = NR_TASKS + task;$/;"	l	language:C++
p	kernel/exit.c	/^	struct task_struct **p;$/;"	l	language:C++
p	kernel/exit.c	/^	struct task_struct *p;$/;"	l	language:C++
p	kernel/exit.c	/^ 	struct task_struct **p;$/;"	l	language:C++
p	kernel/fork.c	/^	struct task_struct *p;$/;"	l	language:C++
p	kernel/sched.c	/^	struct desc_struct * p;$/;"	l	language:C++
p	kernel/sched.c	/^	struct task_struct ** p;$/;"	l	language:C++
p	kernel/sched.c	/^	struct timer_list * p;$/;"	l	language:C++
p	mm/memory.c	/^	struct task_struct ** p;$/;"	l	language:C++
p_cptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
p_osptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
p_pptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::task_struct	access:public
p_ysptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
pag	fs/exec.c	/^	char *tmp, *pag;$/;"	l	language:C++
page	fs/exec.c	/^	unsigned long page[MAX_ARG_PAGES];$/;"	l	language:C++
page	lib/malloc.c	/^	void			*page;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
page	lib/malloc.c	/^	void		*page;$/;"	l	language:C++
page	mm/memory.c	/^	unsigned long page;$/;"	l	language:C++
page	mm/swap.c	/^	unsigned long page;$/;"	l	language:C++
page_entry	mm/swap.c	/^	static int page_entry = -1;$/;"	l	language:C++	file:
page_exception	kernel/traps.c	/^void page_exception(void);$/;"	p	language:C++	file:	signature:(void)
page_fault	kernel/traps.c	/^void page_fault(void);$/;"	p	language:C++	file:	signature:(void)
page_table	mm/memory.c	/^	unsigned long tmp, *page_table;$/;"	l	language:C++
painless	boot/setup.S	/^! that was painless, now we enable A20$/;"	v	language:C++
panic	include/linux/kernel.h	/^volatile void panic(const char * str);$/;"	p	language:C++	signature:(const char * str)
panic	include/linux/sched.h	/^extern void panic(const char * str);$/;"	p	language:C++	signature:(const char * str)
panic	kernel/panic.c	/^volatile void panic(const char * s)$/;"	f	language:C++	signature:(const char * s)
par	kernel/chr_drv/console.c	126;"	d	language:C++	file:
parallel_interrupt	kernel/traps.c	/^void parallel_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
partition	include/linux/hdreg.h	/^struct partition {$/;"	s	language:C++
partition::boot_ind	include/linux/hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	language:C++	struct:partition	access:public
partition::cyl	include/linux/hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::end_cyl	include/linux/hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::end_head	include/linux/hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::end_sector	include/linux/hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::head	include/linux/hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::nr_sects	include/linux/hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	language:C++	struct:partition	access:public
partition::sector	include/linux/hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
partition::start_sect	include/linux/hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	language:C++	struct:partition	access:public
partition::sys_ind	include/linux/hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
pause	include/unistd.h	/^int pause(void);$/;"	p	language:C++	signature:(void)
pe	include/linux/math_emu.h	/^	int pe:1;$/;"	m	language:C++	struct:swd	access:public
permission	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	f	language:C++	file:	signature:(struct m_inode * inode,int mask)
pg_dir	include/linux/head.h	/^extern unsigned long pg_dir[1024];$/;"	x	language:C++
pg_table	mm/memory.c	/^	unsigned long *pg_table;$/;"	l	language:C++
pg_table	mm/swap.c	/^	int pg_table;$/;"	l	language:C++
pg_tbl	mm/memory.c	/^	unsigned long * pg_tbl;$/;"	l	language:C++
pgrp	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
pgrp	include/linux/tty.h	/^	int pgrp;$/;"	m	language:C++	struct:tty_struct	access:public
pgrp	kernel/chr_drv/tty_ioctl.c	/^	int	pgrp;$/;"	l	language:C++
phys_addr	mm/memory.c	/^	unsigned long phys_addr;$/;"	l	language:C++
pid	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
pid	init/main.c	/^	int pid,i;$/;"	l	language:C++
pid_t	include/sys/types.h	/^typedef int pid_t;$/;"	t	language:C++
pipe	include/unistd.h	/^int pipe(int * fildes);$/;"	p	language:C++	signature:(int * fildes)
pipe_ioctl	fs/ioctl.c	/^extern int pipe_ioctl(struct m_inode *pino, int cmd, int arg);$/;"	p	language:C++	file:	signature:(struct m_inode *pino, int cmd, int arg)
pipe_ioctl	fs/pipe.c	/^int pipe_ioctl(struct m_inode *pino, int cmd, int arg)$/;"	f	language:C++	signature:(struct m_inode *pino, int cmd, int arg)
place	boot/setup.S	/^	int	0x10		! save it in known place, con_init fetches$/;"	v	language:C++
port	kernel/chr_drv/tty_ioctl.c	/^	unsigned short port,quot;$/;"	l	language:C++
port_read	kernel/blk_drv/hd.c	64;"	d	language:C++	file:
port_write	kernel/blk_drv/hd.c	67;"	d	language:C++	file:
pos	fs/file_dev.c	/^	off_t pos;$/;"	l	language:C++
pos	kernel/chr_drv/console.c	117;"	d	language:C++	file:
precision	kernel/vsprintf.c	/^	int precision;		\/* min. # of digits for integers; max$/;"	l	language:C++
prev	lib/malloc.c	/^	struct bucket_desc	*bdesc, *prev;$/;"	l	language:C++
printbuf	init/main.c	/^static char printbuf[1024];$/;"	v	language:C++	file:
printf	include/linux/kernel.h	/^int printf(const char * fmt, ...);$/;"	p	language:C++	signature:(const char * fmt, ...)
printf	init/main.c	/^static int printf(const char *fmt, ...)$/;"	f	language:C++	file:	signature:(const char *fmt, ...)
printk	include/linux/kernel.h	/^int printk(const char * fmt, ...);$/;"	p	language:C++	signature:(const char * fmt, ...)
printk	kernel/printk.c	/^int printk(const char *fmt, ...)$/;"	f	language:C++	signature:(const char *fmt, ...)
priority	include/linux/sched.h	/^	long priority;$/;"	m	language:C++	struct:task_struct	access:public
proc_list	include/linux/tty.h	/^	struct task_struct * proc_list;$/;"	m	language:C++	struct:tty_queue	typeref:struct:tty_queue::task_struct	access:public
ptrdiff_t	include/stddef.h	/^typedef long ptrdiff_t;$/;"	t	language:C++
ptrdiff_t	include/sys/types.h	/^typedef long ptrdiff_t;$/;"	t	language:C++
pty_copy	kernel/chr_drv/pty.c	/^static inline void pty_copy(struct tty_struct * from, struct tty_struct * to)$/;"	f	language:C++	file:	signature:(struct tty_struct * from, struct tty_struct * to)
put_BCD	include/linux/math_emu.h	/^void put_BCD(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_BCD	kernel/math/get_put.c	/^void put_BCD(const temp_real * tmp,struct info * info, unsigned short code)$/;"	f	language:C++	signature:(const temp_real * tmp,struct info * info, unsigned short code)
put_dirty_page	include/linux/mm.h	/^extern unsigned long put_dirty_page(unsigned long page,unsigned long address);$/;"	p	language:C++	signature:(unsigned long page,unsigned long address)
put_dirty_page	mm/memory.c	/^unsigned long put_dirty_page(unsigned long page, unsigned long address)$/;"	f	language:C++	signature:(unsigned long page, unsigned long address)
put_fs_byte	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	f	language:C++	signature:(char val,char *addr)
put_fs_long	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	f	language:C++	signature:(unsigned long val,unsigned long * addr)
put_fs_word	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	f	language:C++	signature:(short val,short * addr)
put_long_int	include/linux/math_emu.h	/^void put_long_int(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_long_int	kernel/math/get_put.c	/^void put_long_int(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
put_long_real	include/linux/math_emu.h	/^void put_long_real(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_long_real	kernel/math/get_put.c	/^void put_long_real(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
put_longlong_int	include/linux/math_emu.h	/^void put_longlong_int(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_longlong_int	kernel/math/get_put.c	/^void put_longlong_int(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
put_page	mm/memory.c	/^static unsigned long put_page(unsigned long page,unsigned long address)$/;"	f	language:C++	file:	signature:(unsigned long page,unsigned long address)
put_short_int	include/linux/math_emu.h	/^void put_short_int(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_short_int	kernel/math/get_put.c	/^void put_short_int(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
put_short_real	include/linux/math_emu.h	/^void put_short_real(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_short_real	kernel/math/get_put.c	/^void put_short_real(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
put_super	fs/super.c	/^void put_super(int dev)$/;"	f	language:C++	signature:(int dev)
put_temp_real	include/linux/math_emu.h	/^void put_temp_real(const temp_real *, struct info *, unsigned short);$/;"	p	language:C++	signature:(const temp_real *, struct info *, unsigned short)
put_temp_real	kernel/math/get_put.c	/^void put_temp_real(const temp_real * tmp,$/;"	f	language:C++	signature:(const temp_real * tmp, struct info * info, unsigned short code)
pwd	include/linux/sched.h	/^	struct m_inode * pwd;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
qualifier	kernel/vsprintf.c	/^	int qualifier;		\/* 'h', 'l', or 'L' for integer fields *\/$/;"	l	language:C++
ques	kernel/chr_drv/console.c	127;"	d	language:C++	file:
quot	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon2	access:public
quot	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon3	access:public
quot	kernel/chr_drv/tty_ioctl.c	/^	unsigned short port,quot;$/;"	l	language:C++
quotient	kernel/chr_drv/tty_ioctl.c	/^static unsigned short quotient[] = {$/;"	v	language:C++	file:
r	kernel/blk_drv/hd.c	/^	int i,r;$/;"	l	language:C++
r	kernel/sys.c	/^	struct rusage r;$/;"	l	language:C++
r_address	include/a.out.h	/^  int r_address;$/;"	m	language:C++	struct:relocation_info	access:public
r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	language:C++	struct:relocation_info	access:public
r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	language:C++	struct:relocation_info	access:public
r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	language:C++	struct:relocation_info	access:public
r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	language:C++	struct:relocation_info	access:public
r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	language:C++	struct:relocation_info	access:public
raise	include/signal.h	/^int raise(int sig);$/;"	p	language:C++	signature:(int sig)
rate	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
rd_init	init/main.c	/^extern long rd_init(long mem_start, int length);$/;"	p	language:C++	file:	signature:(long mem_start, int length)
rd_init	kernel/blk_drv/ramdisk.c	/^long rd_init(long mem_start, int length)$/;"	f	language:C++	signature:(long mem_start, int length)
rd_length	kernel/blk_drv/ramdisk.c	/^int	rd_length = 0;$/;"	v	language:C++
rd_load	kernel/blk_drv/hd.c	/^extern void rd_load(void);$/;"	p	language:C++	file:	signature:(void)
rd_load	kernel/blk_drv/ramdisk.c	/^void rd_load(void)$/;"	f	language:C++	signature:(void)
rd_start	kernel/blk_drv/ramdisk.c	/^char	*rd_start;$/;"	v	language:C++
read	fs/block_dev.c	/^	int read = 0;$/;"	l	language:C++
read	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C++
read	include/unistd.h	/^int read(int fildes, char * buf, off_t count);$/;"	p	language:C++	signature:(int fildes, char * buf, off_t count)
read_char	kernel/chr_drv/rs_io.s	/^	.long modem_status,write_char,read_char,line_status$/;"	v	language:C++
read_inode	fs/inode.c	/^static void read_inode(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
read_inode	fs/inode.c	/^static void read_inode(struct m_inode * inode);$/;"	p	language:C++	file:	signature:(struct m_inode * inode)
read_intr	kernel/blk_drv/hd.c	/^static void read_intr(void)$/;"	f	language:C++	file:	signature:(void)
read_pipe	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	f	language:C++	signature:(struct m_inode * inode, char * buf, int count)
read_pipe	fs/read_write.c	/^extern int read_pipe(struct m_inode * inode, char * buf, int count);$/;"	p	language:C++	file:	signature:(struct m_inode * inode, char * buf, int count)
read_q	include/linux/tty.h	/^	struct tty_queue *read_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
read_super	fs/super.c	/^static struct super_block * read_super(int dev)$/;"	f	language:C++	file:	signature:(int dev)
read_swap_page	include/linux/mm.h	11;"	d	language:C++
real_to_int	include/linux/math_emu.h	/^void real_to_int(const temp_real * __a, temp_int * __b);$/;"	p	language:C++	signature:(const temp_real * __a, temp_int * __b)
real_to_int	kernel/math/convert.c	/^void real_to_int(const temp_real * a, temp_int * b)$/;"	f	language:C++	signature:(const temp_real * a, temp_int * b)
real_to_real	include/linux/math_emu.h	72;"	d	language:C++
recal_interrupt	kernel/blk_drv/floppy.c	/^static void recal_interrupt(void)$/;"	f	language:C++	file:	signature:(void)
recal_intr	kernel/blk_drv/hd.c	/^static void recal_intr(void)$/;"	f	language:C++	file:	signature:(void)
recal_intr	kernel/blk_drv/hd.c	/^static void recal_intr(void);$/;"	p	language:C++	file:	signature:(void)
recalibrate	kernel/blk_drv/floppy.c	/^static int recalibrate = 0;$/;"	v	language:C++	file:
recalibrate	kernel/blk_drv/hd.c	/^static int recalibrate = 0;$/;"	v	language:C++	file:
recalibrate_floppy	kernel/blk_drv/floppy.c	/^static void recalibrate_floppy(void)$/;"	f	language:C++	file:	signature:(void)
refcnt	lib/malloc.c	/^	unsigned short		refcnt;$/;"	m	language:C++	struct:bucket_desc	file:	access:public
release	include/sys/utsname.h	/^	char release[9];$/;"	m	language:C++	struct:utsname	access:public
release	kernel/exit.c	/^void release(struct task_struct * p)$/;"	f	language:C++	signature:(struct task_struct * p)
relocation_info	include/a.out.h	/^struct relocation_info$/;"	s	language:C++
relocation_info::r_address	include/a.out.h	/^  int r_address;$/;"	m	language:C++	struct:relocation_info	access:public
relocation_info::r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	language:C++	struct:relocation_info	access:public
relocation_info::r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	language:C++	struct:relocation_info	access:public
relocation_info::r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	language:C++	struct:relocation_info	access:public
relocation_info::r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	language:C++	struct:relocation_info	access:public
relocation_info::r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	language:C++	struct:relocation_info	access:public
rem	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon2	access:public
rem	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon3	access:public
rem	kernel/math/get_put.c	/^	int k,rem;$/;"	l	language:C++
remove_from_queues	fs/buffer.c	/^static inline void remove_from_queues(struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(struct buffer_head * bh)
reply_buffer	kernel/blk_drv/floppy.c	/^static unsigned char reply_buffer[MAX_REPLIES];$/;"	v	language:C++	file:
req	kernel/blk_drv/ll_rw_blk.c	/^	struct request * req;$/;"	l	language:C++
request	kernel/blk_drv/blk.h	/^extern struct request request[NR_REQUEST];$/;"	x	language:C++
request	kernel/blk_drv/blk.h	/^struct request {$/;"	s	language:C++
request	kernel/blk_drv/ll_rw_blk.c	/^struct request request[NR_REQUEST];$/;"	v	language:C++	typeref:struct:request
request::bh	kernel/blk_drv/blk.h	/^	struct buffer_head * bh;$/;"	m	language:C++	struct:request	typeref:struct:request::buffer_head	access:public
request::buffer	kernel/blk_drv/blk.h	/^	char * buffer;$/;"	m	language:C++	struct:request	access:public
request::cmd	kernel/blk_drv/blk.h	/^	int cmd;		\/* READ or WRITE *\/$/;"	m	language:C++	struct:request	access:public
request::dev	kernel/blk_drv/blk.h	/^	int dev;		\/* -1 if no request *\/$/;"	m	language:C++	struct:request	access:public
request::errors	kernel/blk_drv/blk.h	/^	int errors;$/;"	m	language:C++	struct:request	access:public
request::next	kernel/blk_drv/blk.h	/^	struct request * next;$/;"	m	language:C++	struct:request	typeref:struct:request::request	access:public
request::nr_sectors	kernel/blk_drv/blk.h	/^	unsigned long nr_sectors;$/;"	m	language:C++	struct:request	access:public
request::sector	kernel/blk_drv/blk.h	/^	unsigned long sector;$/;"	m	language:C++	struct:request	access:public
request::waiting	kernel/blk_drv/blk.h	/^	struct task_struct * waiting;$/;"	m	language:C++	struct:request	typeref:struct:request::task_struct	access:public
request_fn	kernel/blk_drv/blk.h	/^	void (*request_fn)(void);$/;"	m	language:C++	struct:blk_dev_struct	access:public
request_fn	kernel/blk_drv/ll_rw_blk.c	/^		(dev->request_fn)();$/;"	p	language:C++	file:	signature:()
res	fs/open.c	/^	int res, i_mode;$/;"	l	language:C++
res	kernel/mktime.c	/^	long res;$/;"	l	language:C++
res	lib/open.c	/^	register int res;$/;"	l	language:C++
res_ex	fs/select.c	/^	fd_set res_ex, ex = 0, *exp;$/;"	l	language:C++
res_in	fs/select.c	/^	fd_set res_in, in = 0, *inp;$/;"	l	language:C++
res_out	fs/select.c	/^	fd_set res_out, out = 0, *outp;$/;"	l	language:C++
reserved	kernel/traps.c	/^void reserved(void);$/;"	p	language:C++	file:	signature:(void)
reset	kernel/blk_drv/floppy.c	/^static int reset = 0;$/;"	v	language:C++	file:
reset	kernel/blk_drv/hd.c	/^static int reset = 0;$/;"	v	language:C++	file:
reset_controller	kernel/blk_drv/hd.c	/^static void reset_controller(void)$/;"	f	language:C++	file:	signature:(void)
reset_floppy	kernel/blk_drv/floppy.c	/^static void reset_floppy(void)$/;"	f	language:C++	file:	signature:(void)
reset_hd	kernel/blk_drv/hd.c	/^static void reset_hd(void)$/;"	f	language:C++	file:	signature:(void)
reset_interrupt	kernel/blk_drv/floppy.c	/^static void reset_interrupt(void)$/;"	f	language:C++	file:	signature:(void)
respond	kernel/chr_drv/console.c	/^static void respond(int currcons, struct tty_struct * tty)$/;"	f	language:C++	file:	signature:(int currcons, struct tty_struct * tty)
restate	kernel/chr_drv/console.c	123;"	d	language:C++	file:
restore_cur	kernel/chr_drv/console.c	/^static void restore_cur(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
result	kernel/blk_drv/floppy.c	/^	(void) result();$/;"	p	language:C++	file:	signature:()
result	kernel/blk_drv/floppy.c	/^static int result(void)$/;"	f	language:C++	file:	signature:(void)
retries	kernel/blk_drv/hd.c	/^	int retries = 100000;$/;"	l	language:C++
retsig	kernel/chr_drv/tty_ioctl.c	/^	int i, retsig;$/;"	l	language:C++
retval	fs/exec.c	/^	int retval;$/;"	l	language:C++
retval	kernel/exit.c	/^	int err, retval = 0;$/;"	l	language:C++
retval	kernel/exit.c	/^	int err,retval = -ESRCH;$/;"	l	language:C++
retval	lib/malloc.c	/^	void			*retval;$/;"	l	language:C++
ri	kernel/chr_drv/console.c	/^static void ri(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
right	boot/setup.S	/^	mov	ax,#SETUPSEG	! right, forgot this at first. didn't work :-)$/;"	v	language:C++
rlim	include/linux/sched.h	/^	struct rlimit rlim[RLIM_NLIMITS]; $/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::rlimit	access:public
rlim_cur	include/sys/resource.h	/^	int	rlim_cur;$/;"	m	language:C++	struct:rlimit	access:public
rlim_max	include/sys/resource.h	/^	int	rlim_max;$/;"	m	language:C++	struct:rlimit	access:public
rlimit	include/sys/resource.h	/^struct rlimit {$/;"	s	language:C++
rlimit::rlim_cur	include/sys/resource.h	/^	int	rlim_cur;$/;"	m	language:C++	struct:rlimit	access:public
rlimit::rlim_max	include/sys/resource.h	/^	int	rlim_max;$/;"	m	language:C++	struct:rlimit	access:public
rm	kernel/math/ea.c	/^	unsigned char mod,rm;$/;"	l	language:C++
root	include/linux/sched.h	/^	struct m_inode * root;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
routine	boot/setup.S	/^! Part of above routine, this one just prints ascii al$/;"	v	language:C++
rs1_interrupt	kernel/chr_drv/serial.c	/^extern void rs1_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
rs2_interrupt	kernel/chr_drv/serial.c	/^extern void rs2_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
rs_init	include/linux/tty.h	/^void rs_init(void);$/;"	p	language:C++	signature:(void)
rs_init	kernel/chr_drv/serial.c	/^void rs_init(void)$/;"	f	language:C++	signature:(void)
rs_queues	kernel/chr_drv/tty_io.c	66;"	d	language:C++	file:
rs_table	kernel/chr_drv/tty_io.c	71;"	d	language:C++	file:
rs_write	include/linux/tty.h	/^void rs_write(struct tty_struct * tty);$/;"	p	language:C++	signature:(struct tty_struct * tty)
rs_write	kernel/chr_drv/serial.c	/^void rs_write(struct tty_struct * tty)$/;"	f	language:C++	signature:(struct tty_struct * tty)
rshift	kernel/chr_drv/keyboard.S	/^	.long do_self,minus,rshift,do_self	\/* 34-37 . - rshift * *\/$/;"	v	language:C++
ru_idrss	include/sys/resource.h	/^	long	ru_idrss;		\/* integral unshared data size *\/$/;"	m	language:C++	struct:rusage	access:public
ru_inblock	include/sys/resource.h	/^	long	ru_inblock;		\/* block input operations *\/$/;"	m	language:C++	struct:rusage	access:public
ru_isrss	include/sys/resource.h	/^	long	ru_isrss;		\/* integral unshared stack size *\/$/;"	m	language:C++	struct:rusage	access:public
ru_ixrss	include/sys/resource.h	/^	long	ru_ixrss;		\/* integral shared memory size *\/$/;"	m	language:C++	struct:rusage	access:public
ru_majflt	include/sys/resource.h	/^	long	ru_majflt;		\/* page faults *\/$/;"	m	language:C++	struct:rusage	access:public
ru_maxrss	include/sys/resource.h	/^	long	ru_maxrss;		\/* maximum resident set size *\/$/;"	m	language:C++	struct:rusage	access:public
ru_minflt	include/sys/resource.h	/^	long	ru_minflt;		\/* page reclaims *\/$/;"	m	language:C++	struct:rusage	access:public
ru_msgrcv	include/sys/resource.h	/^	long	ru_msgrcv;		\/* messages received *\/$/;"	m	language:C++	struct:rusage	access:public
ru_msgsnd	include/sys/resource.h	/^	long	ru_msgsnd;		\/* messages sent *\/$/;"	m	language:C++	struct:rusage	access:public
ru_nivcsw	include/sys/resource.h	/^	long	ru_nivcsw;		\/* involuntary " *\/$/;"	m	language:C++	struct:rusage	access:public
ru_nsignals	include/sys/resource.h	/^	long	ru_nsignals;		\/* signals received *\/$/;"	m	language:C++	struct:rusage	access:public
ru_nswap	include/sys/resource.h	/^	long	ru_nswap;		\/* swaps *\/$/;"	m	language:C++	struct:rusage	access:public
ru_nvcsw	include/sys/resource.h	/^	long	ru_nvcsw;		\/* voluntary context switches *\/$/;"	m	language:C++	struct:rusage	access:public
ru_oublock	include/sys/resource.h	/^	long	ru_oublock;		\/* block output operations *\/$/;"	m	language:C++	struct:rusage	access:public
ru_stime	include/sys/resource.h	/^	struct timeval ru_stime;	\/* system time used *\/$/;"	m	language:C++	struct:rusage	typeref:struct:rusage::timeval	access:public
ru_utime	include/sys/resource.h	/^	struct timeval ru_utime;	\/* user time used *\/$/;"	m	language:C++	struct:rusage	typeref:struct:rusage::timeval	access:public
rusage	include/sys/resource.h	/^struct	rusage {$/;"	s	language:C++
rusage::ru_idrss	include/sys/resource.h	/^	long	ru_idrss;		\/* integral unshared data size *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_inblock	include/sys/resource.h	/^	long	ru_inblock;		\/* block input operations *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_isrss	include/sys/resource.h	/^	long	ru_isrss;		\/* integral unshared stack size *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_ixrss	include/sys/resource.h	/^	long	ru_ixrss;		\/* integral shared memory size *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_majflt	include/sys/resource.h	/^	long	ru_majflt;		\/* page faults *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_maxrss	include/sys/resource.h	/^	long	ru_maxrss;		\/* maximum resident set size *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_minflt	include/sys/resource.h	/^	long	ru_minflt;		\/* page reclaims *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_msgrcv	include/sys/resource.h	/^	long	ru_msgrcv;		\/* messages received *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_msgsnd	include/sys/resource.h	/^	long	ru_msgsnd;		\/* messages sent *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_nivcsw	include/sys/resource.h	/^	long	ru_nivcsw;		\/* involuntary " *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_nsignals	include/sys/resource.h	/^	long	ru_nsignals;		\/* signals received *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_nswap	include/sys/resource.h	/^	long	ru_nswap;		\/* swaps *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_nvcsw	include/sys/resource.h	/^	long	ru_nvcsw;		\/* voluntary context switches *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_oublock	include/sys/resource.h	/^	long	ru_oublock;		\/* block output operations *\/$/;"	m	language:C++	struct:rusage	access:public
rusage::ru_stime	include/sys/resource.h	/^	struct timeval ru_stime;	\/* system time used *\/$/;"	m	language:C++	struct:rusage	typeref:struct:rusage::timeval	access:public
rusage::ru_utime	include/sys/resource.h	/^	struct timeval ru_utime;	\/* user time used *\/$/;"	m	language:C++	struct:rusage	typeref:struct:rusage::timeval	access:public
rw_ahead	kernel/blk_drv/ll_rw_blk.c	/^	int rw_ahead;$/;"	l	language:C++
rw_char	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	f	language:C++	signature:(int rw,int dev, char * buf, int count, off_t * pos)
rw_char	fs/read_write.c	/^extern int rw_char(int rw,int dev, char * buf, int count, off_t * pos);$/;"	p	language:C++	file:	signature:(int rw,int dev, char * buf, int count, off_t * pos)
rw_interrupt	kernel/blk_drv/floppy.c	/^static void rw_interrupt(void)$/;"	f	language:C++	file:	signature:(void)
rw_kmem	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C++	file:	signature:(int rw,char * buf, int count, off_t * pos)
rw_mem	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C++	file:	signature:(int rw,char * buf, int count, off_t * pos)
rw_memory	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	f	language:C++	file:	signature:(int rw, unsigned minor, char * buf, int count, off_t * pos)
rw_port	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C++	file:	signature:(int rw,char * buf, int count, off_t * pos)
rw_ram	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	f	language:C++	file:	signature:(int rw,char * buf, int count, off_t *pos)
rw_tty	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	f	language:C++	file:	signature:(int rw,unsigned minor,char * buf,int count, off_t * pos)
rw_ttyx	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	f	language:C++	file:	signature:(int rw,unsigned minor,char * buf,int count,off_t * pos)
s	fs/super.c	/^	struct super_block * s;$/;"	l	language:C++
s	kernel/blk_drv/ramdisk.c	/^	struct super_block	s;$/;"	l	language:C++
s	kernel/vsprintf.c	/^	char *s;$/;"	l	language:C++
s_dev	include/linux/fs.h	/^	unsigned short s_dev;$/;"	m	language:C++	struct:super_block	access:public
s_dirt	include/linux/fs.h	/^	unsigned char s_dirt;$/;"	m	language:C++	struct:super_block	access:public
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:d_super_block	access:public
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:super_block	access:public
s_imap	include/linux/fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::buffer_head	access:public
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:d_super_block	access:public
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:super_block	access:public
s_imount	include/linux/fs.h	/^	struct m_inode * s_imount;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::m_inode	access:public
s_isup	include/linux/fs.h	/^	struct m_inode * s_isup;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::m_inode	access:public
s_lock	include/linux/fs.h	/^	unsigned char s_lock;$/;"	m	language:C++	struct:super_block	access:public
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:d_super_block	access:public
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:super_block	access:public
s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:d_super_block	access:public
s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:super_block	access:public
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:d_super_block	access:public
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:super_block	access:public
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:d_super_block	access:public
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:super_block	access:public
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:d_super_block	access:public
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:super_block	access:public
s_rd_only	include/linux/fs.h	/^	unsigned char s_rd_only;$/;"	m	language:C++	struct:super_block	access:public
s_time	include/linux/fs.h	/^	unsigned long s_time;$/;"	m	language:C++	struct:super_block	access:public
s_wait	include/linux/fs.h	/^	struct task_struct * s_wait;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::task_struct	access:public
s_zmap	include/linux/fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::buffer_head	access:public
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:d_super_block	access:public
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:super_block	access:public
sa	kernel/signal.c	/^	struct sigaction * sa = current->sigaction + signr - 1;$/;"	l	language:C++
sa_flags	include/signal.h	/^	int sa_flags;$/;"	m	language:C++	struct:sigaction	access:public
sa_handler	include/signal.h	/^	void (*sa_handler)(int);$/;"	m	language:C++	struct:sigaction	access:public
sa_handler	kernel/signal.c	/^	unsigned long sa_handler;$/;"	l	language:C++
sa_mask	include/signal.h	/^	sigset_t sa_mask;$/;"	m	language:C++	struct:sigaction	access:public
sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);$/;"	m	language:C++	struct:sigaction	access:public
save_cur	kernel/chr_drv/console.c	/^static void save_cur(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
save_old	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	f	language:C++	file:	signature:(char * from,char * to)
saved_x	kernel/chr_drv/console.c	129;"	d	language:C++	file:
saved_y	kernel/chr_drv/console.c	130;"	d	language:C++	file:
sb	fs/bitmap.c	/^	struct super_block * sb;$/;"	l	language:C++
sb	fs/inode.c	/^	struct super_block * sb;$/;"	l	language:C++
sb	fs/namei.c	/^	struct super_block * sb;$/;"	l	language:C++
sb	fs/super.c	/^	struct super_block * sb;$/;"	l	language:C++
sb	tools/build.c	/^	struct stat sb;$/;"	l	language:C++
sbrk	include/unistd.h	/^void * sbrk(ptrdiff_t increment);$/;"	p	language:C++	signature:(ptrdiff_t increment)
sched_init	include/linux/sched.h	/^extern void sched_init(void);$/;"	p	language:C++	signature:(void)
sched_init	kernel/sched.c	/^void sched_init(void)$/;"	f	language:C++	signature:(void)
schedule	include/linux/sched.h	/^extern void schedule(void);$/;"	p	language:C++	signature:(void)
schedule	kernel/sched.c	/^void schedule(void)$/;"	f	language:C++	signature:(void)
scr_end	kernel/chr_drv/console.c	116;"	d	language:C++	file:
scrdown	kernel/chr_drv/console.c	/^static void scrdown(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
screen	boot/setup.S	/^! Routine to print a decimal value on screen, the value to be$/;"	v	language:C++
scroll	kernel/chr_drv/keyboard.S	/^	.long func,num,scroll,cursor		\/* 44-47 f10 num scr home *\/$/;"	v	language:C++
scrup	kernel/chr_drv/console.c	/^static void scrup(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
sec	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C++
sec	kernel/sys.c	/^		int sec, usec;$/;"	l	language:C++
secondary	include/linux/tty.h	/^	struct tty_queue *secondary;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
sect	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
sect	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
sector	include/linux/hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
sector	kernel/blk_drv/blk.h	/^	unsigned long sector;$/;"	m	language:C++	struct:request	access:public
sector	kernel/blk_drv/floppy.c	/^static unsigned char sector = 0;$/;"	v	language:C++	file:
seek	kernel/blk_drv/floppy.c	/^static int seek = 0;$/;"	v	language:C++	file:
seek_interrupt	kernel/blk_drv/floppy.c	/^static void seek_interrupt(void)$/;"	f	language:C++	file:	signature:(void)
seek_track	kernel/blk_drv/floppy.c	/^static unsigned char seek_track = 0;$/;"	v	language:C++	file:
segment	kernel/sys_call.s	/^	cmpw $0x17,OLDSS(%esp)		# was stack segment = 0x17 ?$/;"	v	language:C++
segment_not_present	kernel/traps.c	/^void segment_not_present(void);$/;"	p	language:C++	file:	signature:(void)
select	include/sys/time.h	/^int select(int width, fd_set * readfds, fd_set * writefds,$/;"	p	language:C++	signature:(int width, fd_set * readfds, fd_set * writefds, fd_set * exceptfds, struct timeval * timeout)
select	include/unistd.h	/^int select(int width, fd_set * readfds, fd_set * writefds,$/;"	p	language:C++	signature:(int width, fd_set * readfds, fd_set * writefds, fd_set * exceptfds, struct timeval * timeout)
select_table	fs/select.c	/^} select_table;$/;"	t	language:C++	typeref:struct:__anon9	file:
selected	kernel/blk_drv/floppy.c	/^unsigned char selected = 0;$/;"	v	language:C++
selected	kernel/sched.c	/^	extern unsigned char selected;$/;"	x	language:C++
send_break	kernel/chr_drv/tty_ioctl.c	/^static void send_break(struct tty_struct * tty)$/;"	f	language:C++	file:	signature:(struct tty_struct * tty)
send_sig	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	f	language:C++	file:	signature:(long sig,struct task_struct * p,int priv)
session	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
session	include/linux/tty.h	/^	int session;$/;"	m	language:C++	struct:tty_struct	access:public
session_of_pgrp	kernel/chr_drv/tty_ioctl.c	/^extern int session_of_pgrp(int pgrp);$/;"	p	language:C++	file:	signature:(int pgrp)
session_of_pgrp	kernel/exit.c	/^int session_of_pgrp(int pgrp)$/;"	f	language:C++	signature:(int pgrp)
session_of_pgrp	kernel/sys.c	/^extern int session_of_pgrp(int pgrp);$/;"	p	language:C++	file:	signature:(int pgrp)
set_C0	include/linux/math_emu.h	132;"	d	language:C++
set_C1	include/linux/math_emu.h	133;"	d	language:C++
set_C2	include/linux/math_emu.h	134;"	d	language:C++
set_C3	include/linux/math_emu.h	135;"	d	language:C++
set_DE	include/linux/math_emu.h	126;"	d	language:C++
set_IE	include/linux/math_emu.h	125;"	d	language:C++
set_OE	include/linux/math_emu.h	128;"	d	language:C++
set_PE	include/linux/math_emu.h	130;"	d	language:C++
set_UE	include/linux/math_emu.h	129;"	d	language:C++
set_ZE	include/linux/math_emu.h	127;"	d	language:C++
set_base	include/linux/sched.h	262;"	d	language:C++
set_bit	fs/bitmap.c	19;"	d	language:C++	file:
set_bit	fs/super.c	22;"	d	language:C++	file:
set_cursor	kernel/chr_drv/console.c	/^static inline void set_cursor(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
set_fs	include/asm/segment.h	/^extern inline void set_fs(unsigned long val)$/;"	f	language:C++	signature:(unsigned long val)
set_intr_gate	include/asm/system.h	33;"	d	language:C++
set_ldt_desc	include/asm/system.h	66;"	d	language:C++
set_limit	include/linux/sched.h	263;"	d	language:C++
set_origin	kernel/chr_drv/console.c	/^static inline void set_origin(int currcons)$/;"	f	language:C++	file:	signature:(int currcons)
set_system_gate	include/asm/system.h	39;"	d	language:C++
set_termio	kernel/chr_drv/tty_ioctl.c	/^static int set_termio(struct tty_struct * tty, struct termio * termio,$/;"	f	language:C++	file:	signature:(struct tty_struct * tty, struct termio * termio, int channel)
set_termios	kernel/chr_drv/tty_ioctl.c	/^static int set_termios(struct tty_struct * tty, struct termios * termios,$/;"	f	language:C++	file:	signature:(struct tty_struct * tty, struct termios * termios, int channel)
set_trap_gate	include/asm/system.h	36;"	d	language:C++
set_tss_desc	include/asm/system.h	65;"	d	language:C++
setgid	include/unistd.h	/^int setgid(gid_t gid);$/;"	p	language:C++	signature:(gid_t gid)
setgroups	include/unistd.h	/^int setgroups(int gidsetlen, gid_t *gidset);$/;"	p	language:C++	signature:(int gidsetlen, gid_t *gidset)
sethostname	include/unistd.h	/^int sethostname(char *name, int len);$/;"	p	language:C++	signature:(char *name, int len)
setpgid	include/unistd.h	/^int setpgid(pid_t pid,pid_t pgid);$/;"	p	language:C++	signature:(pid_t pid,pid_t pgid)
setpgrp	include/unistd.h	/^int setpgrp(void);$/;"	p	language:C++	signature:(void)
setrlimit	include/unistd.h	/^int setrlimit(int resource, struct rlimit *rlp);$/;"	p	language:C++	signature:(int resource, struct rlimit *rlp)
setsid	include/unistd.h	/^pid_t setsid(void);$/;"	p	language:C++	signature:(void)
settimeofday	include/unistd.h	/^int settimeofday(struct timeval *tv, struct timezone *tz);$/;"	p	language:C++	signature:(struct timeval *tv, struct timezone *tz)
setuid	include/unistd.h	/^int setuid(uid_t uid);$/;"	p	language:C++	signature:(uid_t uid)
setup_DMA	kernel/blk_drv/floppy.c	/^static void setup_DMA(void)$/;"	f	language:C++	file:	signature:(void)
setup_rw_floppy	kernel/blk_drv/floppy.c	/^inline void setup_rw_floppy(void)$/;"	f	language:C++	signature:(void)
sf	include/linux/math_emu.h	/^	int sf:1;$/;"	m	language:C++	struct:swd	access:public
sgid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
sh_bang	fs/exec.c	/^	int sh_bang = 0;$/;"	l	language:C++
share_page	mm/memory.c	/^static int share_page(struct m_inode * inode, unsigned long address)$/;"	f	language:C++	file:	signature:(struct m_inode * inode, unsigned long address)
shared	mm/memory.c	/^	int shared=0;$/;"	l	language:C++
shift	kernel/math/add.c	/^	int x1,x2,shift;$/;"	l	language:C++
shift	kernel/math/convert.c	/^	int shift =  16383 + 63 - (a->exponent & 0x7fff);$/;"	l	language:C++
shift	kernel/math/mul.c	/^static void shift(int * c)$/;"	f	language:C++	file:	signature:(int * c)
shift_left	kernel/math/div.c	/^static void shift_left(int * c)$/;"	f	language:C++	file:	signature:(int * c)
shift_map	kernel/chr_drv/keyboard.S	/^	lea shift_map,%ebx$/;"	v	language:C++
shift_right	kernel/math/div.c	/^static void shift_right(int * c)$/;"	f	language:C++	file:	signature:(int * c)
short_real	include/linux/math_emu.h	/^typedef long short_real;$/;"	t	language:C++
short_to_temp	include/linux/math_emu.h	/^void short_to_temp(const short_real * __a, temp_real * __b);$/;"	p	language:C++	signature:(const short_real * __a, temp_real * __b)
short_to_temp	kernel/math/convert.c	/^void short_to_temp(const short_real * a, temp_real * b)$/;"	f	language:C++	signature:(const short_real * a, temp_real * b)
show_mem	mm/memory.c	/^void show_mem(void)$/;"	f	language:C++	signature:(void)
show_state	kernel/sched.c	/^void show_state(void)$/;"	f	language:C++	signature:(void)
show_task	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	f	language:C++	signature:(int nr,struct task_struct * p)
si	boot/setup.S	/^	add	si,ax$/;"	v	language:C++
si	boot/setup.S	/^	lds	si,[4*0x41]$/;"	v	language:C++
si	boot/setup.S	/^	lds	si,[4*0x46]$/;"	v	language:C++
si	boot/setup.S	/^	lea	si,dsctseng$/;"	v	language:C++
si	boot/setup.S	/^	lea	si,dscvideo7$/;"	v	language:C++
si	boot/setup.S	/^	lea	si,msg2$/;"	v	language:C++
si	boot/setup.S	/^	lea	si,msg3$/;"	v	language:C++
si	boot/setup.S	/^	sub	si,si$/;"	v	language:C++
sib	kernel/math/ea.c	/^static char * sib(struct info * info, int mod)$/;"	f	language:C++	file:	signature:(struct info * info, int mod)
sig_atomic_t	include/signal.h	/^typedef int sig_atomic_t;$/;"	t	language:C++
sigaction	include/linux/sched.h	/^	struct sigaction sigaction[32];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::sigaction	access:public
sigaction	include/signal.h	/^int sigaction(int sig, struct sigaction *act, struct sigaction *oldact);$/;"	p	language:C++	signature:(int sig, struct sigaction *act, struct sigaction *oldact)
sigaction	include/signal.h	/^struct sigaction {$/;"	s	language:C++
sigaction::sa_flags	include/signal.h	/^	int sa_flags;$/;"	m	language:C++	struct:sigaction	access:public
sigaction::sa_handler	include/signal.h	/^	void (*sa_handler)(int);$/;"	m	language:C++	struct:sigaction	access:public
sigaction::sa_mask	include/signal.h	/^	sigset_t sa_mask;$/;"	m	language:C++	struct:sigaction	access:public
sigaction::sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);$/;"	m	language:C++	struct:sigaction	access:public
sigaddset	include/signal.h	/^int sigaddset(sigset_t *mask, int signo);$/;"	p	language:C++	signature:(sigset_t *mask, int signo)
sigdelset	include/signal.h	/^int sigdelset(sigset_t *mask, int signo);$/;"	p	language:C++	signature:(sigset_t *mask, int signo)
sigemptyset	include/signal.h	/^int sigemptyset(sigset_t *mask);$/;"	p	language:C++	signature:(sigset_t *mask)
sigemptyset	include/signal.h	51;"	d	language:C++
sigfillset	include/signal.h	/^int sigfillset(sigset_t *mask);$/;"	p	language:C++	signature:(sigset_t *mask)
sigfillset	include/signal.h	52;"	d	language:C++
sigismember	include/signal.h	/^int sigismember(sigset_t *mask, int signo); \/* 1 - is, 0 - not, -1 error *\/$/;"	p	language:C++	signature:(sigset_t *mask, int signo)
sign	include/linux/math_emu.h	/^	short sign;$/;"	m	language:C++	struct:__anon7	access:public
sign	kernel/math/compare.c	/^	int sign = a->exponent & 0x8000;$/;"	l	language:C++
sign	kernel/math/div.c	/^	int i,sign;$/;"	l	language:C++
sign	kernel/math/mul.c	/^	int i,sign;$/;"	l	language:C++
sign	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C++
signal	include/linux/sched.h	/^	long signal;$/;"	m	language:C++	struct:task_struct	access:public
signal	include/signal.h	/^void (*signal(int _sig, void (*_func)(int)))(int);$/;"	p	language:C++	signature:(int _sig, void (*_func)(int))
signal	include/unistd.h	/^void (*signal(int sig, void (*fn)(int)))(int);$/;"	p	language:C++	signature:(int sig, void (*fn)(int))
signify	kernel/math/add.c	/^static void signify(temp_real * a)$/;"	f	language:C++	file:	signature:(temp_real * a)
sigpending	include/signal.h	/^int sigpending(sigset_t *set);$/;"	p	language:C++	signature:(sigset_t *set)
sigprocmask	include/signal.h	/^int sigprocmask(int how, sigset_t *set, sigset_t *oldset);$/;"	p	language:C++	signature:(int how, sigset_t *set, sigset_t *oldset)
sigset_t	include/signal.h	/^typedef unsigned int sigset_t;		\/* 32 bits *\/$/;"	t	language:C++
sigsuspend	include/signal.h	/^int sigsuspend(sigset_t *sigmask);$/;"	p	language:C++	signature:(sigset_t *sigmask)
size	fs/block_dev.c	/^	int size;$/;"	l	language:C++
size	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C++
size	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C++
size	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
size	kernel/chr_drv/rs_io.s	/^size	= 1024				\/* must be power of two !$/;"	v	language:C++
size	lib/malloc.c	/^	int			size;$/;"	m	language:C++	struct:_bucket_dir	file:	access:public
size_t	include/stddef.h	/^typedef unsigned long size_t;$/;"	t	language:C++
size_t	include/string.h	/^typedef unsigned int size_t;$/;"	t	language:C++
size_t	include/sys/types.h	/^typedef unsigned int size_t;$/;"	t	language:C++
size_t	include/time.h	/^typedef unsigned int size_t;$/;"	t	language:C++
skip_atoi	kernel/vsprintf.c	/^static int skip_atoi(const char **s)$/;"	f	language:C++	file:	signature:(const char **s)
sleep_if_empty	kernel/chr_drv/tty_io.c	/^static void sleep_if_empty(struct tty_queue * queue)$/;"	f	language:C++	file:	signature:(struct tty_queue * queue)
sleep_if_full	kernel/chr_drv/tty_io.c	/^static void sleep_if_full(struct tty_queue * queue)$/;"	f	language:C++	file:	signature:(struct tty_queue * queue)
sleep_on	include/linux/sched.h	/^extern void sleep_on(struct task_struct ** p);$/;"	p	language:C++	signature:(struct task_struct ** p)
sleep_on	kernel/sched.c	/^void sleep_on(struct task_struct **p)$/;"	f	language:C++	signature:(struct task_struct **p)
sp	fs/exec.c	/^	unsigned long * sp;$/;"	l	language:C++
spec1	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
speed_t	include/sys/types.h	/^typedef unsigned int speed_t;$/;"	t	language:C++
sprintf	init/main.c	/^static int sprintf(char * str, const char *fmt, ...)$/;"	f	language:C++	file:	signature:(char * str, const char *fmt, ...)
sptr	kernel/chr_drv/console.c	/^	char *sptr, *buf = (char *)arg;$/;"	l	language:C++
spty_queues	kernel/chr_drv/tty_io.c	68;"	d	language:C++	file:
spty_table	kernel/chr_drv/tty_io.c	73;"	d	language:C++	file:
spty_write	include/linux/tty.h	/^void spty_write(struct tty_struct * tty);$/;"	p	language:C++	signature:(struct tty_struct * tty)
spty_write	kernel/chr_drv/pty.c	/^void spty_write(struct tty_struct * tty)$/;"	f	language:C++	signature:(struct tty_struct * tty)
sr	kernel/math/get_put.c	/^	short_real sr;$/;"	l	language:C++
ss	include/linux/sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
ss	kernel/math/ea.c	/^	offset <<= ss;$/;"	l	language:C++
ss	kernel/math/ea.c	/^	unsigned char ss,index,base;$/;"	l	language:C++
ss0	include/linux/sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
ss1	include/linux/sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
ss2	include/linux/sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
st_atime	include/sys/stat.h	/^	time_t	st_atime;$/;"	m	language:C++	struct:stat	access:public
st_ctime	include/sys/stat.h	/^	time_t	st_ctime;$/;"	m	language:C++	struct:stat	access:public
st_dev	include/sys/stat.h	/^	dev_t	st_dev;$/;"	m	language:C++	struct:stat	access:public
st_gid	include/sys/stat.h	/^	gid_t	st_gid;$/;"	m	language:C++	struct:stat	access:public
st_ino	include/sys/stat.h	/^	ino_t	st_ino;$/;"	m	language:C++	struct:stat	access:public
st_mode	include/sys/stat.h	/^	umode_t	st_mode;$/;"	m	language:C++	struct:stat	access:public
st_mtime	include/sys/stat.h	/^	time_t	st_mtime;$/;"	m	language:C++	struct:stat	access:public
st_nlink	include/sys/stat.h	/^	nlink_t	st_nlink;$/;"	m	language:C++	struct:stat	access:public
st_rdev	include/sys/stat.h	/^	dev_t	st_rdev;$/;"	m	language:C++	struct:stat	access:public
st_size	include/sys/stat.h	/^	off_t	st_size;$/;"	m	language:C++	struct:stat	access:public
st_space	include/linux/sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	language:C++	struct:i387_struct	access:public
st_uid	include/sys/stat.h	/^	uid_t	st_uid;$/;"	m	language:C++	struct:stat	access:public
stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	language:C++	union:task_union	file:	access:public
stack_segment	kernel/traps.c	/^void stack_segment(void);$/;"	p	language:C++	file:	signature:(void)
stack_start	kernel/sched.c	/^	} stack_start = { & user_stack [PAGE_SIZE>>2] , 0x10 };$/;"	v	language:C++	typeref:struct:__anon12
start	kernel/fork.c	/^	unsigned long start;$/;"	l	language:C++
start_buffer	fs/buffer.c	/^struct buffer_head * start_buffer = (struct buffer_head *) &end;$/;"	v	language:C++	typeref:struct:buffer_head
start_buffer	include/linux/fs.h	/^extern struct buffer_head * start_buffer;$/;"	x	language:C++
start_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
start_sect	include/linux/hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	language:C++	struct:partition	access:public
start_sect	kernel/blk_drv/hd.c	/^	long start_sect;$/;"	m	language:C++	struct:hd_struct	file:	access:public
start_stack	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
start_time	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
startup_time	include/linux/sched.h	/^extern unsigned long startup_time;$/;"	x	language:C++
startup_time	kernel/sched.c	/^unsigned long startup_time=0;$/;"	v	language:C++
stat	include/sys/stat.h	/^extern int stat(const char *filename, struct stat *stat_buf);$/;"	p	language:C++	signature:(const char *filename, struct stat *stat_buf)
stat	include/sys/stat.h	/^struct stat {$/;"	s	language:C++
stat	include/unistd.h	/^int stat(const char * filename, struct stat * stat_buf);$/;"	p	language:C++	signature:(const char * filename, struct stat * stat_buf)
stat::st_atime	include/sys/stat.h	/^	time_t	st_atime;$/;"	m	language:C++	struct:stat	access:public
stat::st_ctime	include/sys/stat.h	/^	time_t	st_ctime;$/;"	m	language:C++	struct:stat	access:public
stat::st_dev	include/sys/stat.h	/^	dev_t	st_dev;$/;"	m	language:C++	struct:stat	access:public
stat::st_gid	include/sys/stat.h	/^	gid_t	st_gid;$/;"	m	language:C++	struct:stat	access:public
stat::st_ino	include/sys/stat.h	/^	ino_t	st_ino;$/;"	m	language:C++	struct:stat	access:public
stat::st_mode	include/sys/stat.h	/^	umode_t	st_mode;$/;"	m	language:C++	struct:stat	access:public
stat::st_mtime	include/sys/stat.h	/^	time_t	st_mtime;$/;"	m	language:C++	struct:stat	access:public
stat::st_nlink	include/sys/stat.h	/^	nlink_t	st_nlink;$/;"	m	language:C++	struct:stat	access:public
stat::st_rdev	include/sys/stat.h	/^	dev_t	st_rdev;$/;"	m	language:C++	struct:stat	access:public
stat::st_size	include/sys/stat.h	/^	off_t	st_size;$/;"	m	language:C++	struct:stat	access:public
stat::st_uid	include/sys/stat.h	/^	uid_t	st_uid;$/;"	m	language:C++	struct:stat	access:public
state	include/linux/sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	language:C++	struct:task_struct	access:public
state	kernel/chr_drv/console.c	122;"	d	language:C++	file:
status	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C++
status	kernel/blk_drv/floppy.c	/^	unsigned char status;$/;"	l	language:C++
sti	include/asm/system.h	16;"	d	language:C++
stime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
stime	include/unistd.h	/^int stime(time_t * tptr);$/;"	p	language:C++	signature:(time_t * tptr)
stopped	include/linux/tty.h	/^	int stopped;$/;"	m	language:C++	struct:tty_struct	access:public
str	include/linux/sched.h	210;"	d	language:C++
str	kernel/vsprintf.c	/^	char * str;$/;"	l	language:C++
strcat	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	f	language:C++	signature:(char * dest,const char * src)
strchr	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	f	language:C++	signature:(const char * s,char c)
strcmp	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	f	language:C++	signature:(const char * cs,const char * ct)
strcpy	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	f	language:C++	signature:(char * dest,const char *src)
strcpy	init/main.c	/^extern char *strcpy();$/;"	p	language:C++	file:	signature:()
strcspn	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	f	language:C++	signature:(const char * cs, const char * ct)
strerror	include/string.h	/^extern char * strerror(int errno);$/;"	p	language:C++	signature:(int errno)
stretch	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
strftime	include/time.h	/^size_t strftime(char * s, size_t smax, const char * fmt, const struct tm * tp);$/;"	p	language:C++	signature:(char * s, size_t smax, const char * fmt, const struct tm * tp)
strlen	include/string.h	/^extern inline int strlen(const char * s)$/;"	f	language:C++	signature:(const char * s)
strncat	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	f	language:C++	signature:(char * dest,const char * src,int count)
strncmp	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	f	language:C++	signature:(const char * cs,const char * ct,int count)
strncpy	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	f	language:C++	signature:(char * dest,const char *src,int count)
strpbrk	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	f	language:C++	signature:(const char * cs,const char * ct)
strrchr	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	f	language:C++	signature:(const char * s,char c)
strspn	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	f	language:C++	signature:(const char * cs, const char * ct)
strstr	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	f	language:C++	signature:(const char * cs,const char * ct)
strtok	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	f	language:C++	signature:(char * s,const char * ct)
suid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
super_block	fs/super.c	/^struct super_block super_block[NR_SUPER];$/;"	v	language:C++	typeref:struct:super_block
super_block	include/linux/fs.h	/^extern struct super_block super_block[NR_SUPER];$/;"	x	language:C++
super_block	include/linux/fs.h	/^struct super_block {$/;"	s	language:C++
super_block::s_dev	include/linux/fs.h	/^	unsigned short s_dev;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_dirt	include/linux/fs.h	/^	unsigned char s_dirt;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_imap	include/linux/fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::buffer_head	access:public
super_block::s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_imount	include/linux/fs.h	/^	struct m_inode * s_imount;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::m_inode	access:public
super_block::s_isup	include/linux/fs.h	/^	struct m_inode * s_isup;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::m_inode	access:public
super_block::s_lock	include/linux/fs.h	/^	unsigned char s_lock;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_rd_only	include/linux/fs.h	/^	unsigned char s_rd_only;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_time	include/linux/fs.h	/^	unsigned long s_time;$/;"	m	language:C++	struct:super_block	access:public
super_block::s_wait	include/linux/fs.h	/^	struct task_struct * s_wait;$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::task_struct	access:public
super_block::s_zmap	include/linux/fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:super_block::buffer_head	access:public
super_block::s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:super_block	access:public
suser	include/linux/kernel.h	32;"	d	language:C++
swap_bitmap	mm/swap.c	/^static char * swap_bitmap = NULL;$/;"	v	language:C++	file:
swap_free	include/linux/mm.h	/^void swap_free(int page_nr);$/;"	p	language:C++	signature:(int page_nr)
swap_free	mm/swap.c	/^void swap_free(int swap_nr)$/;"	f	language:C++	signature:(int swap_nr)
swap_in	include/linux/mm.h	/^void swap_in(unsigned long *table_ptr);$/;"	p	language:C++	signature:(unsigned long *table_ptr)
swap_in	mm/swap.c	/^void swap_in(unsigned long *table_ptr)$/;"	f	language:C++	signature:(unsigned long *table_ptr)
swap_nr	mm/swap.c	/^	int swap_nr;$/;"	l	language:C++
swap_nr	mm/swap.c	/^	unsigned long swap_nr;$/;"	l	language:C++
swap_out	mm/swap.c	/^int swap_out(void)$/;"	f	language:C++	signature:(void)
swap_size	mm/swap.c	/^	int swap_size,i,j;$/;"	l	language:C++
swd	include/linux/math_emu.h	/^struct swd {$/;"	s	language:C++
swd	include/linux/sched.h	/^	long	swd;$/;"	m	language:C++	struct:i387_struct	access:public
swd::b	include/linux/math_emu.h	/^	int b:1;$/;"	m	language:C++	struct:swd	access:public
swd::c0	include/linux/math_emu.h	/^	int c0:1;$/;"	m	language:C++	struct:swd	access:public
swd::c1	include/linux/math_emu.h	/^	int c1:1;$/;"	m	language:C++	struct:swd	access:public
swd::c2	include/linux/math_emu.h	/^	int c2:1;$/;"	m	language:C++	struct:swd	access:public
swd::c3	include/linux/math_emu.h	/^	int c3:1;$/;"	m	language:C++	struct:swd	access:public
swd::de	include/linux/math_emu.h	/^	int de:1;$/;"	m	language:C++	struct:swd	access:public
swd::ie	include/linux/math_emu.h	/^	int ie:1;$/;"	m	language:C++	struct:swd	access:public
swd::ir	include/linux/math_emu.h	/^	int ir:1;$/;"	m	language:C++	struct:swd	access:public
swd::oe	include/linux/math_emu.h	/^	int oe:1;$/;"	m	language:C++	struct:swd	access:public
swd::pe	include/linux/math_emu.h	/^	int pe:1;$/;"	m	language:C++	struct:swd	access:public
swd::sf	include/linux/math_emu.h	/^	int sf:1;$/;"	m	language:C++	struct:swd	access:public
swd::top	include/linux/math_emu.h	/^	int top:3;$/;"	m	language:C++	struct:swd	access:public
swd::ue	include/linux/math_emu.h	/^	int ue:1;$/;"	m	language:C++	struct:swd	access:public
swd::ze	include/linux/math_emu.h	/^	int ze:1;$/;"	m	language:C++	struct:swd	access:public
switch_to	include/linux/sched.h	222;"	d	language:C++
sync	include/unistd.h	/^int sync(void);$/;"	p	language:C++	signature:(void)
sync_dev	fs/buffer.c	/^int sync_dev(int dev)$/;"	f	language:C++	signature:(int dev)
sync_dev	fs/super.c	/^int sync_dev(int dev);$/;"	p	language:C++	file:	signature:(int dev)
sync_dev	include/linux/fs.h	/^extern int sync_dev(int dev);$/;"	p	language:C++	signature:(int dev)
sync_inodes	fs/inode.c	/^void sync_inodes(void)$/;"	f	language:C++	signature:(void)
sync_inodes	include/linux/fs.h	/^extern void sync_inodes(void);$/;"	p	language:C++	signature:(void)
sys_access	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	f	language:C++	signature:(const char * filename,int mode)
sys_access	include/linux/sys.h	/^extern int sys_access();$/;"	p	language:C++	signature:()
sys_acct	include/linux/sys.h	/^extern int sys_acct();$/;"	p	language:C++	signature:()
sys_acct	kernel/sys.c	/^int sys_acct()$/;"	f	language:C++	signature:()
sys_alarm	include/linux/sys.h	/^extern int sys_alarm();$/;"	p	language:C++	signature:()
sys_alarm	kernel/sched.c	/^int sys_alarm(long seconds)$/;"	f	language:C++	signature:(long seconds)
sys_break	include/linux/sys.h	/^extern int sys_break();$/;"	p	language:C++	signature:()
sys_break	kernel/sys.c	/^int sys_break()$/;"	f	language:C++	signature:()
sys_brk	include/linux/sys.h	/^extern int sys_brk();$/;"	p	language:C++	signature:()
sys_brk	kernel/sys.c	/^int sys_brk(unsigned long end_data_seg)$/;"	f	language:C++	signature:(unsigned long end_data_seg)
sys_call_table	include/linux/sys.h	/^fn_ptr sys_call_table[] = { sys_setup, sys_exit, sys_fork, sys_read,$/;"	v	language:C++
sys_chdir	fs/open.c	/^int sys_chdir(const char * filename)$/;"	f	language:C++	signature:(const char * filename)
sys_chdir	include/linux/sys.h	/^extern int sys_chdir();$/;"	p	language:C++	signature:()
sys_chmod	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	f	language:C++	signature:(const char * filename,int mode)
sys_chmod	include/linux/sys.h	/^extern int sys_chmod();$/;"	p	language:C++	signature:()
sys_chown	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	f	language:C++	signature:(const char * filename,int uid,int gid)
sys_chown	include/linux/sys.h	/^extern int sys_chown();$/;"	p	language:C++	signature:()
sys_chroot	fs/open.c	/^int sys_chroot(const char * filename)$/;"	f	language:C++	signature:(const char * filename)
sys_chroot	include/linux/sys.h	/^extern int sys_chroot();$/;"	p	language:C++	signature:()
sys_close	fs/exec.c	/^extern int sys_close(int fd);$/;"	p	language:C++	file:	signature:(int fd)
sys_close	fs/fcntl.c	/^extern int sys_close(int fd);$/;"	p	language:C++	file:	signature:(int fd)
sys_close	fs/open.c	/^int sys_close(unsigned int fd)$/;"	f	language:C++	signature:(unsigned int fd)
sys_close	include/linux/sys.h	/^extern int sys_close();$/;"	p	language:C++	signature:()
sys_close	kernel/exit.c	/^int sys_close(int fd);$/;"	p	language:C++	file:	signature:(int fd)
sys_creat	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	f	language:C++	signature:(const char * pathname, int mode)
sys_creat	include/linux/sys.h	/^extern int sys_creat();$/;"	p	language:C++	signature:()
sys_dup	fs/fcntl.c	/^int sys_dup(unsigned int fildes)$/;"	f	language:C++	signature:(unsigned int fildes)
sys_dup	include/linux/sys.h	/^extern int sys_dup();$/;"	p	language:C++	signature:()
sys_dup2	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	f	language:C++	signature:(unsigned int oldfd, unsigned int newfd)
sys_dup2	include/linux/sys.h	/^extern int sys_dup2();$/;"	p	language:C++	signature:()
sys_execve	include/linux/sys.h	/^extern int sys_execve();$/;"	p	language:C++	signature:()
sys_exit	fs/exec.c	/^extern int sys_exit(int exit_code);$/;"	p	language:C++	file:	signature:(int exit_code)
sys_exit	include/linux/sys.h	/^extern int sys_exit();$/;"	p	language:C++	signature:()
sys_exit	kernel/exit.c	/^int sys_exit(int error_code)$/;"	f	language:C++	signature:(int error_code)
sys_fcntl	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f	language:C++	signature:(unsigned int fd, unsigned int cmd, unsigned long arg)
sys_fcntl	include/linux/sys.h	/^extern int sys_fcntl();$/;"	p	language:C++	signature:()
sys_fork	include/linux/sys.h	/^extern int sys_fork();$/;"	p	language:C++	signature:()
sys_fstat	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	f	language:C++	signature:(unsigned int fd, struct stat * statbuf)
sys_fstat	include/linux/sys.h	/^extern int sys_fstat();$/;"	p	language:C++	signature:()
sys_ftime	include/linux/sys.h	/^extern int sys_ftime();$/;"	p	language:C++	signature:()
sys_ftime	kernel/sys.c	/^int sys_ftime()$/;"	f	language:C++	signature:()
sys_getegid	include/linux/sys.h	/^extern int sys_getegid();$/;"	p	language:C++	signature:()
sys_getegid	kernel/sched.c	/^int sys_getegid(void)$/;"	f	language:C++	signature:(void)
sys_geteuid	include/linux/sys.h	/^extern int sys_geteuid();$/;"	p	language:C++	signature:()
sys_geteuid	kernel/sched.c	/^int sys_geteuid(void)$/;"	f	language:C++	signature:(void)
sys_getgid	include/linux/sys.h	/^extern int sys_getgid();$/;"	p	language:C++	signature:()
sys_getgid	kernel/sched.c	/^int sys_getgid(void)$/;"	f	language:C++	signature:(void)
sys_getgroups	include/linux/sys.h	/^extern int sys_getgroups();$/;"	p	language:C++	signature:()
sys_getgroups	kernel/sys.c	/^int sys_getgroups(int gidsetsize, gid_t *grouplist)$/;"	f	language:C++	signature:(int gidsetsize, gid_t *grouplist)
sys_getpgrp	include/linux/sys.h	/^extern int sys_getpgrp();$/;"	p	language:C++	signature:()
sys_getpgrp	kernel/sys.c	/^int sys_getpgrp(void)$/;"	f	language:C++	signature:(void)
sys_getpid	include/linux/sys.h	/^extern int sys_getpid();$/;"	p	language:C++	signature:()
sys_getpid	kernel/sched.c	/^int sys_getpid(void)$/;"	f	language:C++	signature:(void)
sys_getppid	include/linux/sys.h	/^extern int sys_getppid();$/;"	p	language:C++	signature:()
sys_getppid	kernel/sched.c	/^int sys_getppid(void)$/;"	f	language:C++	signature:(void)
sys_getrlimit	include/linux/sys.h	/^extern int sys_getrlimit();$/;"	p	language:C++	signature:()
sys_getrlimit	kernel/sys.c	/^int sys_getrlimit(int resource, struct rlimit *rlim)$/;"	f	language:C++	signature:(int resource, struct rlimit *rlim)
sys_getrusage	include/linux/sys.h	/^extern int sys_getrusage();$/;"	p	language:C++	signature:()
sys_getrusage	kernel/sys.c	/^int sys_getrusage(int who, struct rusage *ru)$/;"	f	language:C++	signature:(int who, struct rusage *ru)
sys_gettimeofday	include/linux/sys.h	/^extern int sys_gettimeofday();$/;"	p	language:C++	signature:()
sys_gettimeofday	kernel/sys.c	/^int sys_gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f	language:C++	signature:(struct timeval *tv, struct timezone *tz)
sys_getuid	include/linux/sys.h	/^extern int sys_getuid();$/;"	p	language:C++	signature:()
sys_getuid	kernel/sched.c	/^int sys_getuid(void)$/;"	f	language:C++	signature:(void)
sys_gtty	include/linux/sys.h	/^extern int sys_gtty();$/;"	p	language:C++	signature:()
sys_gtty	kernel/sys.c	/^int sys_gtty()$/;"	f	language:C++	signature:()
sys_ind	include/linux/hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	language:C++	struct:partition	access:public
sys_ioctl	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f	language:C++	signature:(unsigned int fd, unsigned int cmd, unsigned long arg)
sys_ioctl	include/linux/sys.h	/^extern int sys_ioctl();$/;"	p	language:C++	signature:()
sys_kill	include/linux/sys.h	/^extern int sys_kill();$/;"	p	language:C++	signature:()
sys_kill	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	f	language:C++	signature:(int pid,int sig)
sys_link	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	f	language:C++	signature:(const char * oldname, const char * newname)
sys_link	include/linux/sys.h	/^extern int sys_link();$/;"	p	language:C++	signature:()
sys_lock	include/linux/sys.h	/^extern int sys_lock();$/;"	p	language:C++	signature:()
sys_lock	kernel/sys.c	/^int sys_lock()$/;"	f	language:C++	signature:()
sys_lseek	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	f	language:C++	signature:(unsigned int fd,off_t offset, int origin)
sys_lseek	include/linux/sys.h	/^extern int sys_lseek();$/;"	p	language:C++	signature:()
sys_lstat	fs/stat.c	/^int sys_lstat(char * filename, struct stat * statbuf)$/;"	f	language:C++	signature:(char * filename, struct stat * statbuf)
sys_lstat	include/linux/sys.h	/^extern int sys_lstat();$/;"	p	language:C++	signature:()
sys_mkdir	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	f	language:C++	signature:(const char * pathname, int mode)
sys_mkdir	include/linux/sys.h	/^extern int sys_mkdir();$/;"	p	language:C++	signature:()
sys_mknod	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	f	language:C++	signature:(const char * filename, int mode, int dev)
sys_mknod	include/linux/sys.h	/^extern int sys_mknod();$/;"	p	language:C++	signature:()
sys_mount	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	f	language:C++	signature:(char * dev_name, char * dir_name, int rw_flag)
sys_mount	include/linux/sys.h	/^extern int sys_mount();$/;"	p	language:C++	signature:()
sys_mpx	include/linux/sys.h	/^extern int sys_mpx();$/;"	p	language:C++	signature:()
sys_mpx	kernel/sys.c	/^int sys_mpx()$/;"	f	language:C++	signature:()
sys_nice	include/linux/sys.h	/^extern int sys_nice();$/;"	p	language:C++	signature:()
sys_nice	kernel/sched.c	/^int sys_nice(long increment)$/;"	f	language:C++	signature:(long increment)
sys_open	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	f	language:C++	signature:(const char * filename,int flag,int mode)
sys_open	include/linux/sys.h	/^extern int sys_open();$/;"	p	language:C++	signature:()
sys_pause	include/linux/sys.h	/^extern int sys_pause();$/;"	p	language:C++	signature:()
sys_pause	kernel/exit.c	/^int sys_pause(void);$/;"	p	language:C++	file:	signature:(void)
sys_pause	kernel/sched.c	/^int sys_pause(void)$/;"	f	language:C++	signature:(void)
sys_pause	kernel/signal.c	/^    (void) sys_pause();			\/* return after a signal arrives *\/$/;"	p	language:C++	file:	signature:()
sys_pause	kernel/signal.c	/^    extern int sys_pause(void);$/;"	p	language:C++	file:	signature:(void)
sys_phys	include/linux/sys.h	/^extern int sys_phys();$/;"	p	language:C++	signature:()
sys_phys	kernel/sys.c	/^int sys_phys()$/;"	f	language:C++	signature:()
sys_pipe	fs/pipe.c	/^int sys_pipe(unsigned long * fildes)$/;"	f	language:C++	signature:(unsigned long * fildes)
sys_pipe	include/linux/sys.h	/^extern int sys_pipe();$/;"	p	language:C++	signature:()
sys_prof	include/linux/sys.h	/^extern int sys_prof();$/;"	p	language:C++	signature:()
sys_prof	kernel/sys.c	/^int sys_prof()$/;"	f	language:C++	signature:()
sys_ptrace	include/linux/sys.h	/^extern int sys_ptrace();$/;"	p	language:C++	signature:()
sys_ptrace	kernel/sys.c	/^int sys_ptrace()$/;"	f	language:C++	signature:()
sys_read	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	f	language:C++	signature:(unsigned int fd,char * buf,int count)
sys_read	include/linux/sys.h	/^extern int sys_read();$/;"	p	language:C++	signature:()
sys_readlink	fs/stat.c	/^int sys_readlink(const char * path, char * buf, int bufsiz)$/;"	f	language:C++	signature:(const char * path, char * buf, int bufsiz)
sys_readlink	include/linux/sys.h	/^extern int sys_readlink();$/;"	p	language:C++	signature:()
sys_rename	include/linux/sys.h	/^extern int sys_rename();$/;"	p	language:C++	signature:()
sys_rename	kernel/sys.c	/^int sys_rename()$/;"	f	language:C++	signature:()
sys_rmdir	fs/namei.c	/^int sys_rmdir(const char * name)$/;"	f	language:C++	signature:(const char * name)
sys_rmdir	include/linux/sys.h	/^extern int sys_rmdir();$/;"	p	language:C++	signature:()
sys_select	fs/select.c	/^int sys_select( unsigned long *buffer )$/;"	f	language:C++	signature:( unsigned long *buffer )
sys_select	include/linux/sys.h	/^extern int sys_select();$/;"	p	language:C++	signature:()
sys_setgid	include/linux/sys.h	/^extern int sys_setgid();$/;"	p	language:C++	signature:()
sys_setgid	kernel/sys.c	/^int sys_setgid(int gid)$/;"	f	language:C++	signature:(int gid)
sys_setgroups	include/linux/sys.h	/^extern int sys_setgroups();$/;"	p	language:C++	signature:()
sys_setgroups	kernel/sys.c	/^int sys_setgroups(int gidsetsize, gid_t *grouplist)$/;"	f	language:C++	signature:(int gidsetsize, gid_t *grouplist)
sys_sethostname	include/linux/sys.h	/^extern int sys_sethostname();$/;"	p	language:C++	signature:()
sys_sethostname	kernel/sys.c	/^int sys_sethostname(char *name, int len)$/;"	f	language:C++	signature:(char *name, int len)
sys_setpgid	include/linux/sys.h	/^extern int sys_setpgid();$/;"	p	language:C++	signature:()
sys_setpgid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	f	language:C++	signature:(int pid, int pgid)
sys_setregid	include/linux/sys.h	/^extern int sys_setregid();$/;"	p	language:C++	signature:()
sys_setregid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	f	language:C++	signature:(int rgid, int egid)
sys_setreuid	include/linux/sys.h	/^extern int sys_setreuid();$/;"	p	language:C++	signature:()
sys_setreuid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	f	language:C++	signature:(int ruid, int euid)
sys_setrlimit	include/linux/sys.h	/^extern int sys_setrlimit();$/;"	p	language:C++	signature:()
sys_setrlimit	kernel/sys.c	/^int sys_setrlimit(int resource, struct rlimit *rlim)$/;"	f	language:C++	signature:(int resource, struct rlimit *rlim)
sys_setsid	include/linux/sys.h	/^extern int sys_setsid();$/;"	p	language:C++	signature:()
sys_setsid	kernel/sys.c	/^int sys_setsid(void)$/;"	f	language:C++	signature:(void)
sys_settimeofday	include/linux/sys.h	/^extern int sys_settimeofday();$/;"	p	language:C++	signature:()
sys_settimeofday	kernel/sys.c	/^int sys_settimeofday(struct timeval *tv, struct timezone *tz)$/;"	f	language:C++	signature:(struct timeval *tv, struct timezone *tz)
sys_setuid	include/linux/sys.h	/^extern int sys_setuid();$/;"	p	language:C++	signature:()
sys_setuid	kernel/sys.c	/^int sys_setuid(int uid)$/;"	f	language:C++	signature:(int uid)
sys_setup	include/linux/sys.h	/^extern int sys_setup();$/;"	p	language:C++	signature:()
sys_setup	kernel/blk_drv/hd.c	/^int sys_setup(void * BIOS)$/;"	f	language:C++	signature:(void * BIOS)
sys_sgetmask	include/linux/sys.h	/^extern int sys_sgetmask();$/;"	p	language:C++	signature:()
sys_sgetmask	kernel/signal.c	/^int sys_sgetmask()$/;"	f	language:C++	signature:()
sys_sigaction	include/linux/sys.h	/^extern int sys_sigaction();$/;"	p	language:C++	signature:()
sys_sigaction	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	f	language:C++	signature:(int signum, const struct sigaction * action, struct sigaction * oldaction)
sys_signal	include/linux/sys.h	/^extern int sys_signal();$/;"	p	language:C++	signature:()
sys_signal	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	f	language:C++	signature:(int signum, long handler, long restorer)
sys_sigpending	include/linux/sys.h	/^extern int sys_sigpending();$/;"	p	language:C++	signature:()
sys_sigpending	kernel/signal.c	/^int sys_sigpending(sigset_t *set)$/;"	f	language:C++	signature:(sigset_t *set)
sys_sigsuspend	include/linux/sys.h	/^extern int sys_sigsuspend();$/;"	p	language:C++	signature:()
sys_sigsuspend	kernel/signal.c	/^int sys_sigsuspend(int restart, unsigned long old_mask, unsigned long set)$/;"	f	language:C++	signature:(int restart, unsigned long old_mask, unsigned long set)
sys_ssetmask	include/linux/sys.h	/^extern int sys_ssetmask();$/;"	p	language:C++	signature:()
sys_ssetmask	kernel/signal.c	/^int sys_ssetmask(int newmask)$/;"	f	language:C++	signature:(int newmask)
sys_stat	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	f	language:C++	signature:(char * filename, struct stat * statbuf)
sys_stat	include/linux/sys.h	/^extern int sys_stat();$/;"	p	language:C++	signature:()
sys_stime	include/linux/sys.h	/^extern int sys_stime();$/;"	p	language:C++	signature:()
sys_stime	kernel/sys.c	/^int sys_stime(long * tptr)$/;"	f	language:C++	signature:(long * tptr)
sys_stty	include/linux/sys.h	/^extern int sys_stty();$/;"	p	language:C++	signature:()
sys_stty	kernel/sys.c	/^int sys_stty()$/;"	f	language:C++	signature:()
sys_symlink	fs/namei.c	/^int sys_symlink(const char * oldname, const char * newname)$/;"	f	language:C++	signature:(const char * oldname, const char * newname)
sys_symlink	include/linux/sys.h	/^extern int sys_symlink();$/;"	p	language:C++	signature:()
sys_sync	fs/buffer.c	/^int sys_sync(void)$/;"	f	language:C++	signature:(void)
sys_sync	include/linux/sys.h	/^extern int sys_sync();$/;"	p	language:C++	signature:()
sys_sync	kernel/panic.c	/^void sys_sync(void);	\/* it's really int *\/$/;"	p	language:C++	file:	signature:(void)
sys_time	include/linux/sys.h	/^extern int sys_time();$/;"	p	language:C++	signature:()
sys_time	kernel/sys.c	/^int sys_time(long * tloc)$/;"	f	language:C++	signature:(long * tloc)
sys_times	include/linux/sys.h	/^extern int sys_times();$/;"	p	language:C++	signature:()
sys_times	kernel/sys.c	/^int sys_times(struct tms * tbuf)$/;"	f	language:C++	signature:(struct tms * tbuf)
sys_tz	kernel/sys.c	/^struct timezone sys_tz = { 0, 0};$/;"	v	language:C++	typeref:struct:timezone
sys_ulimit	include/linux/sys.h	/^extern int sys_ulimit();$/;"	p	language:C++	signature:()
sys_ulimit	kernel/sys.c	/^int sys_ulimit()$/;"	f	language:C++	signature:()
sys_umask	include/linux/sys.h	/^extern int sys_umask();$/;"	p	language:C++	signature:()
sys_umask	kernel/sys.c	/^int sys_umask(int mask)$/;"	f	language:C++	signature:(int mask)
sys_umount	fs/super.c	/^int sys_umount(char * dev_name)$/;"	f	language:C++	signature:(char * dev_name)
sys_umount	include/linux/sys.h	/^extern int sys_umount();$/;"	p	language:C++	signature:()
sys_uname	include/linux/sys.h	/^extern int sys_uname();$/;"	p	language:C++	signature:()
sys_uname	kernel/sys.c	/^int sys_uname(struct utsname * name)$/;"	f	language:C++	signature:(struct utsname * name)
sys_unlink	fs/namei.c	/^int sys_unlink(const char * name)$/;"	f	language:C++	signature:(const char * name)
sys_unlink	include/linux/sys.h	/^extern int sys_unlink();$/;"	p	language:C++	signature:()
sys_uselib	fs/exec.c	/^int sys_uselib(const char * library)$/;"	f	language:C++	signature:(const char * library)
sys_uselib	include/linux/sys.h	/^extern int sys_uselib();$/;"	p	language:C++	signature:()
sys_ustat	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	f	language:C++	signature:(int dev, struct ustat * ubuf)
sys_ustat	include/linux/sys.h	/^extern int sys_ustat();$/;"	p	language:C++	signature:()
sys_utime	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	f	language:C++	signature:(char * filename, struct utimbuf * times)
sys_utime	include/linux/sys.h	/^extern int sys_utime();$/;"	p	language:C++	signature:()
sys_waitpid	include/linux/sys.h	/^extern int sys_waitpid();$/;"	p	language:C++	signature:()
sys_waitpid	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	f	language:C++	signature:(pid_t pid,unsigned long * stat_addr, int options)
sys_write	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	f	language:C++	signature:(unsigned int fd,char * buf,int count)
sys_write	include/linux/sys.h	/^extern int sys_write();$/;"	p	language:C++	signature:()
sysbeep	kernel/chr_drv/console.c	/^static void sysbeep(void)$/;"	f	language:C++	file:	signature:(void)
sysbeep	kernel/chr_drv/console.c	/^static void sysbeep(void);$/;"	p	language:C++	file:	signature:(void)
sysbeepstop	include/linux/kernel.h	/^extern void sysbeepstop(void);$/;"	p	language:C++	signature:(void)
sysbeepstop	kernel/chr_drv/console.c	/^void sysbeepstop(void)$/;"	f	language:C++	signature:(void)
sysname	include/sys/utsname.h	/^	char sysname[9];$/;"	m	language:C++	struct:utsname	access:public
system_call	kernel/sched.c	/^extern int system_call(void);$/;"	p	language:C++	file:	signature:(void)
table_list	kernel/chr_drv/tty_io.c	/^struct tty_queue * table_list[]={$/;"	v	language:C++	typeref:struct:tty_queue
tail	include/linux/tty.h	/^	unsigned long tail;$/;"	m	language:C++	struct:tty_queue	access:public
task	include/linux/sched.h	/^extern struct task_struct *task[NR_TASKS];$/;"	x	language:C++
task	kernel/sched.c	/^	struct task_struct task;$/;"	m	language:C++	union:task_union	typeref:struct:task_union::task_struct	file:	access:public
task	kernel/sched.c	/^struct task_struct * task[NR_TASKS] = {&(init_task.task), };$/;"	v	language:C++	typeref:struct:task_struct
task_struct	include/linux/sched.h	/^struct task_struct {$/;"	s	language:C++
task_struct::alarm	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::blocked	include/linux/sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	language:C++	struct:task_struct	access:public
task_struct::brk	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::close_on_exec	include/linux/sched.h	/^	unsigned long close_on_exec;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::counter	include/linux/sched.h	/^	long counter;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::cstime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::cutime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::egid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::end_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::end_data	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::euid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::executable	include/linux/sched.h	/^	struct m_inode * executable;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
task_struct::exit_code	include/linux/sched.h	/^	int exit_code;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::filp	include/linux/sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::file	access:public
task_struct::flags	include/linux/sched.h	/^	unsigned int flags;	\/* per process flags, defined below *\/$/;"	m	language:C++	struct:task_struct	access:public
task_struct::gid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::groups	include/linux/sched.h	/^	int	groups[NGROUPS];$/;"	m	language:C++	struct:task_struct	access:public
task_struct::ldt	include/linux/sched.h	/^	struct desc_struct ldt[3];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::desc_struct	access:public
task_struct::leader	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::library	include/linux/sched.h	/^	struct m_inode * library;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
task_struct::p_cptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
task_struct::p_osptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
task_struct::p_pptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::task_struct	access:public
task_struct::p_ysptr	include/linux/sched.h	/^	struct task_struct	*p_pptr, *p_cptr, *p_ysptr, *p_osptr;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::	access:public
task_struct::pgrp	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::pid	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::priority	include/linux/sched.h	/^	long priority;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::pwd	include/linux/sched.h	/^	struct m_inode * pwd;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
task_struct::rlim	include/linux/sched.h	/^	struct rlimit rlim[RLIM_NLIMITS]; $/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::rlimit	access:public
task_struct::root	include/linux/sched.h	/^	struct m_inode * root;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::m_inode	access:public
task_struct::session	include/linux/sched.h	/^	long pid,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::sgid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::sigaction	include/linux/sched.h	/^	struct sigaction sigaction[32];$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::sigaction	access:public
task_struct::signal	include/linux/sched.h	/^	long signal;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::start_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::start_stack	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::start_time	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::state	include/linux/sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	language:C++	struct:task_struct	access:public
task_struct::stime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::suid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::timeout	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::tss	include/linux/sched.h	/^	struct tss_struct tss;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::tss_struct	access:public
task_struct::tty	include/linux/sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	language:C++	struct:task_struct	access:public
task_struct::uid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::umask	include/linux/sched.h	/^	unsigned short umask;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::used_math	include/linux/sched.h	/^	unsigned short used_math;$/;"	m	language:C++	struct:task_struct	access:public
task_struct::utime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
task_union	kernel/sched.c	/^union task_union {$/;"	u	language:C++	file:
task_union::stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	language:C++	union:task_union	file:	access:public
task_union::task	kernel/sched.c	/^	struct task_struct task;$/;"	m	language:C++	union:task_union	typeref:struct:task_union::task_struct	file:	access:public
tcdrain	include/termios.h	/^extern int tcdrain(int fildes);$/;"	p	language:C++	signature:(int fildes)
tcflag_t	include/sys/types.h	/^typedef unsigned long tcflag_t;$/;"	t	language:C++
tcflow	include/termios.h	/^extern int tcflow(int fildes, int action);$/;"	p	language:C++	signature:(int fildes, int action)
tcflush	include/termios.h	/^extern int tcflush(int fildes, int queue_selector);$/;"	p	language:C++	signature:(int fildes, int queue_selector)
tcgetattr	include/termios.h	/^extern int tcgetattr(int fildes, struct termios *termios_p);$/;"	p	language:C++	signature:(int fildes, struct termios *termios_p)
tcsendbreak	include/termios.h	/^extern int tcsendbreak(int fildes, int duration);$/;"	p	language:C++	signature:(int fildes, int duration)
tcsetattr	include/termios.h	/^extern int tcsetattr(int fildes, int optional_actions,$/;"	p	language:C++	signature:(int fildes, int optional_actions, struct termios *termios_p)
temp_int	include/linux/math_emu.h	/^} temp_int;$/;"	t	language:C++	typeref:struct:__anon7
temp_real	include/linux/math_emu.h	/^} temp_real;$/;"	t	language:C++	typeref:struct:__anon4
temp_real_unaligned	include/linux/math_emu.h	/^} temp_real_unaligned;$/;"	t	language:C++	typeref:struct:__anon5
temp_to_long	include/linux/math_emu.h	/^void temp_to_long(const temp_real * __a, long_real * __b);$/;"	p	language:C++	signature:(const temp_real * __a, long_real * __b)
temp_to_long	kernel/math/convert.c	/^void temp_to_long(const temp_real * a, long_real * b)$/;"	f	language:C++	signature:(const temp_real * a, long_real * b)
temp_to_short	include/linux/math_emu.h	/^void temp_to_short(const temp_real * __a, short_real * __b);$/;"	p	language:C++	signature:(const temp_real * __a, short_real * __b)
temp_to_short	kernel/math/convert.c	/^void temp_to_short(const temp_real * a, short_real * b)$/;"	f	language:C++	signature:(const temp_real * a, short_real * b)
term	init/main.c	/^static char term[32];$/;"	v	language:C++	file:
term	kernel/chr_drv/console.c	/^	long base, term;$/;"	l	language:C++
termio	include/termios.h	/^struct termio {$/;"	s	language:C++
termio::c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	language:C++	struct:termio	access:public
termio::c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termio	access:public
termio::c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termio	access:public
termio::c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termio	access:public
termio::c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termio	access:public
termio::c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termio	access:public
termios	include/linux/tty.h	/^	struct termios termios;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::termios	access:public
termios	include/termios.h	/^struct termios {$/;"	s	language:C++
termios::c_cc	include/termios.h	/^	cc_t c_cc[NCCS];		\/* control characters *\/$/;"	m	language:C++	struct:termios	access:public
termios::c_cflag	include/termios.h	/^	tcflag_t c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termios	access:public
termios::c_iflag	include/termios.h	/^	tcflag_t c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termios	access:public
termios::c_lflag	include/termios.h	/^	tcflag_t c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termios	access:public
termios::c_line	include/termios.h	/^	cc_t c_line;			\/* line discipline *\/$/;"	m	language:C++	struct:termios	access:public
termios::c_oflag	include/termios.h	/^	tcflag_t c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termios	access:public
this_page	mm/memory.c	/^	unsigned long this_page;$/;"	l	language:C++
thisname	fs/namei.c	/^	const char * thisname;$/;"	l	language:C++
thisname	kernel/sys.c	/^static struct utsname thisname = {$/;"	v	language:C++	typeref:struct:utsname	file:
ti	kernel/math/get_put.c	/^	temp_int ti;$/;"	l	language:C++
ticks_to_floppy_on	include/linux/fdreg.h	/^extern int ticks_to_floppy_on(unsigned int nr);$/;"	p	language:C++	signature:(unsigned int nr)
ticks_to_floppy_on	include/linux/fs.h	/^extern int ticks_to_floppy_on(unsigned int dev);$/;"	p	language:C++	signature:(unsigned int dev)
ticks_to_floppy_on	kernel/blk_drv/floppy.c	/^	add_timer(ticks_to_floppy_on(current_drive),&floppy_on_interrupt);$/;"	p	language:C++	file:	signature:(current_drive)
ticks_to_floppy_on	kernel/sched.c	/^int ticks_to_floppy_on(unsigned int nr)$/;"	f	language:C++	signature:(unsigned int nr)
time	include/time.h	/^time_t time(time_t * tp);$/;"	p	language:C++	signature:(time_t * tp)
time	include/unistd.h	/^time_t time(time_t * tloc);$/;"	p	language:C++	signature:(time_t * tloc)
time	init/main.c	/^	struct tm time;$/;"	l	language:C++
time	kernel/chr_drv/tty_io.c	/^	int minimum,time;$/;"	l	language:C++
time_init	init/main.c	/^static void time_init(void)$/;"	f	language:C++	file:	signature:(void)
time_t	include/sys/types.h	/^typedef long time_t;$/;"	t	language:C++
time_t	include/time.h	/^typedef long time_t;$/;"	t	language:C++
timeout	fs/select.c	/^	unsigned long timeout;$/;"	l	language:C++
timeout	include/linux/sched.h	/^	unsigned long timeout,alarm;$/;"	m	language:C++	struct:task_struct	access:public
timer_interrupt	kernel/sched.c	/^extern int timer_interrupt(void);$/;"	p	language:C++	file:	signature:(void)
timer_list	kernel/sched.c	/^static struct timer_list {$/;"	s	language:C++	file:
timer_list	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	language:C++	typeref:struct:timer_list	file:
timer_list::fn	kernel/sched.c	/^	void (*fn)();$/;"	m	language:C++	struct:timer_list	file:	access:public
timer_list::jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	language:C++	struct:timer_list	file:	access:public
timer_list::next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	language:C++	struct:timer_list	typeref:struct:timer_list::timer_list	file:	access:public
timerclear	include/sys/time.h	41;"	d	language:C++
timercmp	include/sys/time.h	38;"	d	language:C++
timerisset	include/sys/time.h	37;"	d	language:C++
times	include/sys/times.h	/^extern time_t times(struct tms * tp);$/;"	p	language:C++	signature:(struct tms * tp)
times	include/unistd.h	/^time_t times(struct tms * tbuf);$/;"	p	language:C++	signature:(struct tms * tbuf)
timeval	include/sys/time.h	/^struct timeval {$/;"	s	language:C++
timeval::tv_sec	include/sys/time.h	/^	long	tv_sec;		\/* seconds *\/$/;"	m	language:C++	struct:timeval	access:public
timeval::tv_usec	include/sys/time.h	/^	long	tv_usec;	\/* microseconds *\/$/;"	m	language:C++	struct:timeval	access:public
timezone	include/sys/time.h	/^struct timezone {$/;"	s	language:C++
timezone::tz_dsttime	include/sys/time.h	/^	int	tz_dsttime;	\/* type of dst correction *\/$/;"	m	language:C++	struct:timezone	access:public
timezone::tz_minuteswest	include/sys/time.h	/^	int	tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	language:C++	struct:timezone	access:public
tm	include/time.h	/^struct tm {$/;"	s	language:C++
tm::tm_hour	include/time.h	/^	int tm_hour;$/;"	m	language:C++	struct:tm	access:public
tm::tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	language:C++	struct:tm	access:public
tm::tm_mday	include/time.h	/^	int tm_mday;$/;"	m	language:C++	struct:tm	access:public
tm::tm_min	include/time.h	/^	int tm_min;$/;"	m	language:C++	struct:tm	access:public
tm::tm_mon	include/time.h	/^	int tm_mon;$/;"	m	language:C++	struct:tm	access:public
tm::tm_sec	include/time.h	/^	int tm_sec;$/;"	m	language:C++	struct:tm	access:public
tm::tm_wday	include/time.h	/^	int tm_wday;$/;"	m	language:C++	struct:tm	access:public
tm::tm_yday	include/time.h	/^	int tm_yday;$/;"	m	language:C++	struct:tm	access:public
tm::tm_year	include/time.h	/^	int tm_year;$/;"	m	language:C++	struct:tm	access:public
tm_hour	include/time.h	/^	int tm_hour;$/;"	m	language:C++	struct:tm	access:public
tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	language:C++	struct:tm	access:public
tm_mday	include/time.h	/^	int tm_mday;$/;"	m	language:C++	struct:tm	access:public
tm_min	include/time.h	/^	int tm_min;$/;"	m	language:C++	struct:tm	access:public
tm_mon	include/time.h	/^	int tm_mon;$/;"	m	language:C++	struct:tm	access:public
tm_sec	include/time.h	/^	int tm_sec;$/;"	m	language:C++	struct:tm	access:public
tm_wday	include/time.h	/^	int tm_wday;$/;"	m	language:C++	struct:tm	access:public
tm_yday	include/time.h	/^	int tm_yday;$/;"	m	language:C++	struct:tm	access:public
tm_year	include/time.h	/^	int tm_year;$/;"	m	language:C++	struct:tm	access:public
tmp	fs/buffer.c	/^	struct buffer_head * bh, *tmp;$/;"	l	language:C++
tmp	fs/buffer.c	/^	struct buffer_head * tmp, * bh;$/;"	l	language:C++
tmp	fs/buffer.c	/^	struct buffer_head * tmp;$/;"	l	language:C++
tmp	fs/exec.c	/^	char ** tmp;$/;"	l	language:C++
tmp	fs/exec.c	/^	char *tmp, *pag;$/;"	l	language:C++
tmp	fs/read_write.c	/^	int tmp;$/;"	l	language:C++
tmp	fs/stat.c	/^	struct stat tmp;$/;"	l	language:C++
tmp	kernel/blk_drv/ll_rw_blk.c	/^	struct request * tmp;$/;"	l	language:C++
tmp	kernel/chr_drv/console.c	/^	unsigned short tmp, old = video_erase_char;$/;"	l	language:C++
tmp	kernel/math/div.c	/^	int a[4],b[4],tmp[4] = {0,0,0,0};$/;"	l	language:C++
tmp	kernel/math/div.c	/^	int tmp[4];$/;"	l	language:C++
tmp	kernel/math/ea.c	/^	long * tmp = &EAX;$/;"	l	language:C++
tmp	kernel/math/math_emulate.c	/^	temp_real tmp;$/;"	l	language:C++
tmp	kernel/math/math_emulate.c	/^	unsigned long tmp;$/;"	l	language:C++
tmp	kernel/math/mul.c	/^	int tmp[4] = {0,0,0,0};$/;"	l	language:C++
tmp	kernel/sched.c	/^	struct task_struct *tmp;$/;"	l	language:C++
tmp	kernel/signal.c	/^	struct sigaction tmp;$/;"	l	language:C++
tmp	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C++
tmp	mm/memory.c	/^	unsigned long tmp, *page_table;$/;"	l	language:C++
tmp	mm/memory.c	/^	unsigned long tmp;$/;"	l	language:C++
tmp_esp	kernel/signal.c	/^	unsigned long * tmp_esp;$/;"	l	language:C++
tmp_floppy_area	kernel/blk_drv/floppy.c	/^extern char tmp_floppy_area[1024];$/;"	x	language:C++
tmp_termio	kernel/chr_drv/tty_ioctl.c	/^	struct termio tmp_termio;$/;"	l	language:C++
tms	include/sys/times.h	/^struct tms {$/;"	s	language:C++
tms::tms_cstime	include/sys/times.h	/^	time_t tms_cstime;$/;"	m	language:C++	struct:tms	access:public
tms::tms_cutime	include/sys/times.h	/^	time_t tms_cutime;$/;"	m	language:C++	struct:tms	access:public
tms::tms_stime	include/sys/times.h	/^	time_t tms_stime;$/;"	m	language:C++	struct:tms	access:public
tms::tms_utime	include/sys/times.h	/^	time_t tms_utime;$/;"	m	language:C++	struct:tms	access:public
tms_cstime	include/sys/times.h	/^	time_t tms_cstime;$/;"	m	language:C++	struct:tms	access:public
tms_cutime	include/sys/times.h	/^	time_t tms_cutime;$/;"	m	language:C++	struct:tms	access:public
tms_stime	include/sys/times.h	/^	time_t tms_stime;$/;"	m	language:C++	struct:tms	access:public
tms_utime	include/sys/times.h	/^	time_t tms_utime;$/;"	m	language:C++	struct:tms	access:public
to	mm/memory.c	/^	unsigned long to;$/;"	l	language:C++
to_dir	mm/memory.c	/^	unsigned long * from_dir, * to_dir;$/;"	l	language:C++
to_page	mm/memory.c	/^	unsigned long to_page;$/;"	l	language:C++
to_page_table	mm/memory.c	/^	unsigned long * to_page_table;$/;"	l	language:C++
toascii	include/ctype.h	29;"	d	language:C++
tolower	include/ctype.h	31;"	d	language:C++
top	include/linux/math_emu.h	/^	int top:3;$/;"	m	language:C++	struct:swd	access:public
top	kernel/chr_drv/console.c	118;"	d	language:C++	file:
total	mm/memory.c	/^	int i,j,k,free=0,total=0;$/;"	l	language:C++
toupper	include/ctype.h	32;"	d	language:C++
tpp	fs/select.c	/^	struct task_struct ** tpp;$/;"	l	language:C++
tr	kernel/traps.c	/^	int tr;$/;"	l	language:C++
trace_bitmap	include/linux/sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	language:C++	struct:tss_struct	access:public
track	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C++	struct:floppy_struct	file:	access:public
track	kernel/blk_drv/floppy.c	/^static unsigned char track = 0;$/;"	v	language:C++	file:
transfer	kernel/blk_drv/floppy.c	/^static void transfer(void)$/;"	f	language:C++	file:	signature:(void)
translate	kernel/chr_drv/console.c	131;"	d	language:C++	file:
translations	kernel/chr_drv/console.c	/^static char * translations[] = {$/;"	v	language:C++	file:
trap_init	include/linux/sched.h	/^extern void trap_init(void);$/;"	p	language:C++	signature:(void)
trap_init	kernel/traps.c	/^void trap_init(void)$/;"	f	language:C++	signature:(void)
truncate	fs/truncate.c	/^void truncate(struct m_inode * inode)$/;"	f	language:C++	signature:(struct m_inode * inode)
truncate	include/linux/fs.h	/^extern void truncate(struct m_inode * inode);$/;"	p	language:C++	signature:(struct m_inode * inode)
try_sub	kernel/math/div.c	/^static int try_sub(int * a, int * b)$/;"	f	language:C++	file:	signature:(int * a, int * b)
try_to_share	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	f	language:C++	file:	signature:(unsigned long address, struct task_struct * p)
try_to_swap_out	mm/swap.c	/^int try_to_swap_out(unsigned long * table_ptr)$/;"	f	language:C++	signature:(unsigned long * table_ptr)
tss	include/linux/sched.h	/^	struct tss_struct tss;$/;"	m	language:C++	struct:task_struct	typeref:struct:task_struct::tss_struct	access:public
tss_struct	include/linux/sched.h	/^struct tss_struct {$/;"	s	language:C++
tss_struct::back_link	include/linux/sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::cr3	include/linux/sched.h	/^	long	cr3;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::cs	include/linux/sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ds	include/linux/sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::eax	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ebp	include/linux/sched.h	/^	long	ebp;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ebx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ecx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::edi	include/linux/sched.h	/^	long	edi;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::edx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::eflags	include/linux/sched.h	/^	long	eflags;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::eip	include/linux/sched.h	/^	long	eip;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::es	include/linux/sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::esi	include/linux/sched.h	/^	long	esi;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::esp	include/linux/sched.h	/^	long	esp;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::esp0	include/linux/sched.h	/^	long	esp0;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::esp1	include/linux/sched.h	/^	long	esp1;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::esp2	include/linux/sched.h	/^	long	esp2;$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::fs	include/linux/sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::gs	include/linux/sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::i387	include/linux/sched.h	/^	struct i387_struct i387;$/;"	m	language:C++	struct:tss_struct	typeref:struct:tss_struct::i387_struct	access:public
tss_struct::ldt	include/linux/sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ss	include/linux/sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ss0	include/linux/sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ss1	include/linux/sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::ss2	include/linux/sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	access:public
tss_struct::trace_bitmap	include/linux/sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	language:C++	struct:tss_struct	access:public
tty	fs/open.c	/^	struct tty_struct *tty;$/;"	l	language:C++
tty	fs/select.c	/^	struct tty_struct * tty;$/;"	l	language:C++
tty	include/linux/sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	language:C++	struct:task_struct	access:public
tty	kernel/chr_drv/tty_io.c	/^	struct tty_struct * tty;$/;"	l	language:C++
tty	kernel/chr_drv/tty_ioctl.c	/^	struct tty_struct * tty;$/;"	l	language:C++
tty	kernel/exit.c	/^		struct tty_struct *tty;$/;"	l	language:C++
tty_init	include/linux/tty.h	/^void tty_init(void);$/;"	p	language:C++	signature:(void)
tty_init	kernel/chr_drv/tty_io.c	/^void tty_init(void)$/;"	f	language:C++	signature:(void)
tty_ioctl	fs/ioctl.c	/^extern int tty_ioctl(int dev, int cmd, int arg);$/;"	p	language:C++	file:	signature:(int dev, int cmd, int arg)
tty_ioctl	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	f	language:C++	signature:(int dev, int cmd, int arg)
tty_queue	include/linux/tty.h	/^struct tty_queue {$/;"	s	language:C++
tty_queue::buf	include/linux/tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	language:C++	struct:tty_queue	access:public
tty_queue::data	include/linux/tty.h	/^	unsigned long data;$/;"	m	language:C++	struct:tty_queue	access:public
tty_queue::head	include/linux/tty.h	/^	unsigned long head;$/;"	m	language:C++	struct:tty_queue	access:public
tty_queue::proc_list	include/linux/tty.h	/^	struct task_struct * proc_list;$/;"	m	language:C++	struct:tty_queue	typeref:struct:tty_queue::task_struct	access:public
tty_queue::tail	include/linux/tty.h	/^	unsigned long tail;$/;"	m	language:C++	struct:tty_queue	access:public
tty_queues	kernel/chr_drv/tty_io.c	/^static struct tty_queue tty_queues[QUEUES];$/;"	v	language:C++	typeref:struct:tty_queue	file:
tty_read	fs/char_dev.c	/^extern int tty_read(unsigned minor,char * buf,int count);$/;"	p	language:C++	file:	signature:(unsigned minor,char * buf,int count)
tty_read	include/linux/tty.h	/^int tty_read(unsigned c, char * buf, int n);$/;"	p	language:C++	signature:(unsigned c, char * buf, int n)
tty_read	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	f	language:C++	signature:(unsigned channel, char * buf, int nr)
tty_signal	kernel/chr_drv/tty_io.c	/^int tty_signal(int sig, struct tty_struct *tty)$/;"	f	language:C++	signature:(int sig, struct tty_struct *tty)
tty_signal	kernel/chr_drv/tty_ioctl.c	/^extern int tty_signal(int sig, struct tty_struct *tty);$/;"	p	language:C++	file:	signature:(int sig, struct tty_struct *tty)
tty_struct	include/linux/tty.h	/^struct tty_struct {$/;"	s	language:C++
tty_struct::pgrp	include/linux/tty.h	/^	int pgrp;$/;"	m	language:C++	struct:tty_struct	access:public
tty_struct::read_q	include/linux/tty.h	/^	struct tty_queue *read_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
tty_struct::secondary	include/linux/tty.h	/^	struct tty_queue *secondary;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
tty_struct::session	include/linux/tty.h	/^	int session;$/;"	m	language:C++	struct:tty_struct	access:public
tty_struct::stopped	include/linux/tty.h	/^	int stopped;$/;"	m	language:C++	struct:tty_struct	access:public
tty_struct::termios	include/linux/tty.h	/^	struct termios termios;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::termios	access:public
tty_struct::write	include/linux/tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	language:C++	struct:tty_struct	access:public
tty_struct::write_q	include/linux/tty.h	/^	struct tty_queue *write_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
tty_table	include/linux/tty.h	/^extern struct tty_struct tty_table[];$/;"	x	language:C++
tty_table	kernel/chr_drv/tty_io.c	/^struct tty_struct tty_table[256];$/;"	v	language:C++	typeref:struct:tty_struct
tty_write	fs/char_dev.c	/^extern int tty_write(unsigned minor,char * buf,int count);$/;"	p	language:C++	file:	signature:(unsigned minor,char * buf,int count)
tty_write	include/linux/kernel.h	/^int tty_write(unsigned ch,char * buf,int count);$/;"	p	language:C++	signature:(unsigned ch,char * buf,int count)
tty_write	include/linux/sched.h	/^extern int tty_write(unsigned minor,char * buf,int count);$/;"	p	language:C++	signature:(unsigned minor,char * buf,int count)
tty_write	include/linux/tty.h	/^int tty_write(unsigned c, char * buf, int n);$/;"	p	language:C++	signature:(unsigned c, char * buf, int n)
tty_write	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	f	language:C++	signature:(unsigned channel, char * buf, int nr)
tv_sec	include/sys/time.h	/^	long	tv_sec;		\/* seconds *\/$/;"	m	language:C++	struct:timeval	access:public
tv_usec	include/sys/time.h	/^	long	tv_usec;	\/* microseconds *\/$/;"	m	language:C++	struct:timeval	access:public
tvp	fs/select.c	/^	struct timeval *tvp;$/;"	l	language:C++
twd	include/linux/sched.h	/^	long	twd;$/;"	m	language:C++	struct:i387_struct	access:public
tz_dsttime	include/sys/time.h	/^	int	tz_dsttime;	\/* type of dst correction *\/$/;"	m	language:C++	struct:timezone	access:public
tz_minuteswest	include/sys/time.h	/^	int	tz_minuteswest;	\/* minutes west of Greenwich *\/$/;"	m	language:C++	struct:timezone	access:public
tzset	include/time.h	/^void tzset(void);$/;"	p	language:C++	signature:(void)
u_char	include/sys/types.h	/^typedef unsigned char u_char;$/;"	t	language:C++
ue	include/linux/math_emu.h	/^	int ue:1;$/;"	m	language:C++	struct:swd	access:public
uid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	access:public
uid_t	include/sys/types.h	/^typedef unsigned short uid_t;$/;"	t	language:C++
ulimit	include/unistd.h	/^int ulimit(int cmd, long limit);$/;"	p	language:C++	signature:(int cmd, long limit)
umask	include/linux/sched.h	/^	unsigned short umask;$/;"	m	language:C++	struct:task_struct	access:public
umask	include/sys/stat.h	/^extern mode_t umask(mode_t mask);$/;"	p	language:C++	signature:(mode_t mask)
umask	include/unistd.h	/^mode_t umask(mode_t mask);$/;"	p	language:C++	signature:(mode_t mask)
umode_t	include/sys/types.h	/^typedef unsigned short umode_t;$/;"	t	language:C++
umount	include/unistd.h	/^int umount(const char * specialfile);$/;"	p	language:C++	signature:(const char * specialfile)
un_wp_page	mm/memory.c	/^void un_wp_page(unsigned long * table_entry)$/;"	f	language:C++	signature:(unsigned long * table_entry)
uname	include/sys/utsname.h	/^extern int uname(struct utsname * utsbuf);$/;"	p	language:C++	signature:(struct utsname * utsbuf)
uname	include/unistd.h	/^int uname(struct utsname * name);$/;"	p	language:C++	signature:(struct utsname * name)
unblank_screen	include/linux/kernel.h	/^extern void unblank_screen(void);$/;"	p	language:C++	signature:(void)
unblank_screen	kernel/chr_drv/console.c	/^void unblank_screen()$/;"	f	language:C++	signature:()
uncaps	kernel/chr_drv/keyboard.S	/^	.long unalt,none,uncaps,none		\/* B8-BB unalt br uncaps br *\/$/;"	v	language:C++
unctrl	kernel/chr_drv/keyboard.S	/^	.long none,unctrl,none,none		\/* 9C-9F br unctrl br br *\/$/;"	v	language:C++
underflow	kernel/math/convert.c	/^	unsigned long underflow;$/;"	l	language:C++
unexpected_floppy_interrupt	kernel/blk_drv/floppy.c	/^void unexpected_floppy_interrupt(void)$/;"	f	language:C++	signature:(void)
unexpected_hd_interrupt	kernel/blk_drv/hd.c	/^void unexpected_hd_interrupt(void)$/;"	f	language:C++	signature:(void)
unlink	include/unistd.h	/^int unlink(const char * filename);$/;"	p	language:C++	signature:(const char * filename)
unlock_buffer	kernel/blk_drv/blk.h	/^extern inline void unlock_buffer(struct buffer_head * bh)$/;"	f	language:C++	signature:(struct buffer_head * bh)
unlock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void unlock_buffer(struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(struct buffer_head * bh)
unlock_inode	fs/inode.c	/^static inline void unlock_inode(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
unlshift	kernel/chr_drv/keyboard.S	/^	.long none,none,unlshift,none		\/* A8-AB br br unlshift br *\/$/;"	v	language:C++
unrshift	kernel/chr_drv/keyboard.S	/^	.long none,none,unrshift,none		\/* B4-B7 br br unrshift br *\/$/;"	v	language:C++
unsignify	kernel/math/add.c	/^static void unsignify(temp_real * a)$/;"	f	language:C++	file:	signature:(temp_real * a)
update_screen	include/linux/tty.h	/^void update_screen(void);$/;"	p	language:C++	signature:(void)
update_screen	kernel/chr_drv/console.c	/^void update_screen(void)$/;"	f	language:C++	signature:(void)
usage	tools/build.c	/^void usage(void)$/;"	f	language:C++	signature:(void)
usec	kernel/sys.c	/^		int sec, usec;$/;"	l	language:C++
used_math	include/linux/sched.h	/^	unsigned short used_math;$/;"	m	language:C++	struct:task_struct	access:public
user_stack	kernel/sched.c	/^long user_stack [ PAGE_SIZE>>2 ] ;$/;"	v	language:C++
ushort	include/sys/types.h	/^typedef unsigned short ushort;$/;"	t	language:C++
ustat	include/sys/types.h	/^struct ustat {$/;"	s	language:C++
ustat	include/unistd.h	/^int ustat(dev_t dev, struct ustat * ubuf);$/;"	p	language:C++	signature:(dev_t dev, struct ustat * ubuf)
ustat::f_fname	include/sys/types.h	/^	char f_fname[6];$/;"	m	language:C++	struct:ustat	access:public
ustat::f_fpack	include/sys/types.h	/^	char f_fpack[6];$/;"	m	language:C++	struct:ustat	access:public
ustat::f_tfree	include/sys/types.h	/^	daddr_t f_tfree;$/;"	m	language:C++	struct:ustat	access:public
ustat::f_tinode	include/sys/types.h	/^	ino_t f_tinode;$/;"	m	language:C++	struct:ustat	access:public
utimbuf	include/utime.h	/^struct utimbuf {$/;"	s	language:C++
utimbuf::actime	include/utime.h	/^	time_t actime;$/;"	m	language:C++	struct:utimbuf	access:public
utimbuf::modtime	include/utime.h	/^	time_t modtime;$/;"	m	language:C++	struct:utimbuf	access:public
utime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	access:public
utime	include/unistd.h	/^int utime(const char * filename, struct utimbuf * times);$/;"	p	language:C++	signature:(const char * filename, struct utimbuf * times)
utime	include/utime.h	/^extern int utime(const char *filename, struct utimbuf *times);$/;"	p	language:C++	signature:(const char *filename, struct utimbuf *times)
utsname	include/sys/utsname.h	/^struct utsname {$/;"	s	language:C++
utsname::machine	include/sys/utsname.h	/^	char machine[9];$/;"	m	language:C++	struct:utsname	access:public
utsname::nodename	include/sys/utsname.h	/^	char nodename[MAXHOSTNAMELEN+1];$/;"	m	language:C++	struct:utsname	access:public
utsname::release	include/sys/utsname.h	/^	char release[9];$/;"	m	language:C++	struct:utsname	access:public
utsname::sysname	include/sys/utsname.h	/^	char sysname[9];$/;"	m	language:C++	struct:utsname	access:public
utsname::version	include/sys/utsname.h	/^	char version[9];$/;"	m	language:C++	struct:utsname	access:public
va_arg	include/stdarg.h	24;"	d	language:C++
va_end	include/stdarg.h	/^void va_end (va_list);		\/* Defined in gnulib *\/$/;"	p	language:C++	signature:(va_list)
va_end	include/stdarg.h	22;"	d	language:C++
va_end	tags	/^va_end	include\/stdarg.h	\/^void va_end (va_list);		\\\/* Defined in gnulib *\\\/$\/;"	p	language:C++	signature:(va_list)$/;"	p	language:C++	file:	signature:(va_list)
va_list	include/stdarg.h	/^typedef char *va_list;$/;"	t	language:C++
va_list	tags	/^va_list	include\/stdarg.h	\/^typedef char *va_list;$\/;"	t	language:C++$/;"	t	language:C++	file:
va_start	include/stdarg.h	13;"	d	language:C++
va_start	include/stdarg.h	16;"	d	language:C++
vc_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_bold_attr	kernel/chr_drv/console.c	/^	int		vc_bold_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_bottom	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_checkin	kernel/chr_drv/console.c	/^	unsigned long	vc_checkin;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_cons	kernel/chr_drv/console.c	/^} vc_cons [MAX_CONSOLES];$/;"	v	language:C++	typeref:struct:__anon10	file:
vc_def_attr	kernel/chr_drv/console.c	/^	unsigned char	vc_def_attr;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_iscolor	kernel/chr_drv/console.c	/^	unsigned int	vc_iscolor;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_npar	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_origin	kernel/chr_drv/console.c	/^	unsigned long	vc_origin;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_par	kernel/chr_drv/console.c	/^	unsigned long	vc_npar,vc_par[NPAR];$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_pos	kernel/chr_drv/console.c	/^	unsigned long	vc_pos;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_ques	kernel/chr_drv/console.c	/^	unsigned long	vc_ques;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_restate	kernel/chr_drv/console.c	/^	unsigned long	vc_restate;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_saved_x	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_x;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_saved_y	kernel/chr_drv/console.c	/^	unsigned int	vc_saved_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_scr_end	kernel/chr_drv/console.c	/^	unsigned long	vc_scr_end;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_state	kernel/chr_drv/console.c	/^	unsigned long	vc_state;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_top	kernel/chr_drv/console.c	/^	unsigned long	vc_top,vc_bottom;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_translate	kernel/chr_drv/console.c	/^	char *		vc_translate;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_video_erase_char	kernel/chr_drv/console.c	/^	unsigned short	vc_video_erase_char;	$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_video_mem_end	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_end;	\/* End of video RAM (sort of)	*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_video_mem_start	kernel/chr_drv/console.c	/^	unsigned long	vc_video_mem_start;	\/* Start of video RAM		*\/$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_x	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
vc_y	kernel/chr_drv/console.c	/^	unsigned long	vc_x,vc_y;$/;"	m	language:C++	struct:__anon10	file:	access:public
verify_area	include/linux/kernel.h	/^void verify_area(void * addr,int count);$/;"	p	language:C++	signature:(void * addr,int count)
verify_area	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	f	language:C++	signature:(void * addr,int size)
version	include/sys/utsname.h	/^	char version[9];$/;"	m	language:C++	struct:utsname	access:public
video_erase_char	kernel/chr_drv/console.c	135;"	d	language:C++	file:
video_mem_base	kernel/chr_drv/console.c	/^static unsigned long	video_mem_base;		\/* Base of video memory		*\/$/;"	v	language:C++	file:
video_mem_end	kernel/chr_drv/console.c	133;"	d	language:C++	file:
video_mem_start	kernel/chr_drv/console.c	132;"	d	language:C++	file:
video_mem_term	kernel/chr_drv/console.c	/^static unsigned long	video_mem_term;		\/* End of video memory		*\/$/;"	v	language:C++	file:
video_memory	kernel/chr_drv/console.c	/^	long video_memory;$/;"	l	language:C++
video_num_columns	kernel/chr_drv/console.c	/^static unsigned long	video_num_columns;	\/* Number of text columns	*\/$/;"	v	language:C++	file:
video_num_lines	kernel/chr_drv/console.c	/^static unsigned long	video_num_lines;	\/* Number of test lines		*\/$/;"	v	language:C++	file:
video_page	kernel/chr_drv/console.c	/^static unsigned char	video_page;		\/* Initial video page		*\/$/;"	v	language:C++	file:
video_port_reg	kernel/chr_drv/console.c	/^static unsigned short	video_port_reg;		\/* Video register select port	*\/$/;"	v	language:C++	file:
video_port_val	kernel/chr_drv/console.c	/^static unsigned short	video_port_val;		\/* Video register value port	*\/$/;"	v	language:C++	file:
video_size_row	kernel/chr_drv/console.c	/^static unsigned long	video_size_row;		\/* Bytes per row		*\/$/;"	v	language:C++	file:
video_type	kernel/chr_drv/console.c	/^static unsigned char	video_type;		\/* Type of display being used	*\/$/;"	v	language:C++	file:
vsprintf	init/main.c	/^extern int vsprintf();$/;"	p	language:C++	file:	signature:()
vsprintf	kernel/printk.c	/^extern int vsprintf(char * buf, const char * fmt, va_list args);$/;"	p	language:C++	file:	signature:(char * buf, const char * fmt, va_list args)
vsprintf	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f	language:C++	signature:(char *buf, const char *fmt, va_list args)
wait	include/sys/wait.h	/^pid_t wait(int *stat_loc);$/;"	p	language:C++	signature:(int *stat_loc)
wait	include/unistd.h	/^pid_t wait(int * wait_stat);$/;"	p	language:C++	signature:(int * wait_stat)
wait	lib/wait.c	/^pid_t wait(int * wait_stat)$/;"	f	language:C++	signature:(int * wait_stat)
wait_address	fs/select.c	/^	struct task_struct ** wait_address;$/;"	m	language:C++	struct:__anon8	typeref:struct:__anon8::task_struct	file:	access:public
wait_entry	fs/select.c	/^} wait_entry;$/;"	t	language:C++	typeref:struct:__anon8	file:
wait_for_keypress	fs/super.c	/^void wait_for_keypress(void);$/;"	p	language:C++	file:	signature:(void)
wait_for_keypress	kernel/chr_drv/tty_io.c	/^void wait_for_keypress(void)$/;"	f	language:C++	signature:(void)
wait_for_request	kernel/blk_drv/blk.h	/^extern struct task_struct * wait_for_request;$/;"	x	language:C++
wait_for_request	kernel/blk_drv/ll_rw_blk.c	/^struct task_struct * wait_for_request = NULL;$/;"	v	language:C++	typeref:struct:task_struct
wait_motor	kernel/sched.c	/^static struct task_struct * wait_motor[4] = {NULL,NULL,NULL,NULL};$/;"	v	language:C++	typeref:struct:task_struct	file:
wait_on	include/linux/fs.h	/^extern void wait_on(struct m_inode * inode);$/;"	p	language:C++	signature:(struct m_inode * inode)
wait_on_buffer	fs/buffer.c	/^static inline void wait_on_buffer(struct buffer_head * bh)$/;"	f	language:C++	file:	signature:(struct buffer_head * bh)
wait_on_floppy_select	kernel/blk_drv/floppy.c	/^struct task_struct * wait_on_floppy_select = NULL;$/;"	v	language:C++	typeref:struct:task_struct
wait_on_inode	fs/inode.c	/^static inline void wait_on_inode(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
wait_on_super	fs/super.c	/^static void wait_on_super(struct super_block * sb)$/;"	f	language:C++	file:	signature:(struct super_block * sb)
wait_table	fs/select.c	/^	select_table wait_table;$/;"	l	language:C++
wait_until_sent	kernel/chr_drv/tty_ioctl.c	/^static void wait_until_sent(struct tty_struct * tty)$/;"	f	language:C++	file:	signature:(struct tty_struct * tty)
waiting	kernel/blk_drv/blk.h	/^	struct task_struct * waiting;$/;"	m	language:C++	struct:request	typeref:struct:request::task_struct	access:public
waitpid	include/sys/wait.h	/^pid_t waitpid(pid_t pid, int *stat_loc, int options);$/;"	p	language:C++	signature:(pid_t pid, int *stat_loc, int options)
waitpid	include/unistd.h	/^pid_t waitpid(pid_t pid,int * wait_stat,int options);$/;"	p	language:C++	signature:(pid_t pid,int * wait_stat,int options)
wake_up	include/linux/sched.h	/^extern void wake_up(struct task_struct ** p);$/;"	p	language:C++	signature:(struct task_struct ** p)
wake_up	kernel/sched.c	/^void wake_up(struct task_struct **p)$/;"	f	language:C++	signature:(struct task_struct **p)
well	boot/setup.S	/^! well, that went ok, I hope. Now we have to reprogram the interrupts :-($/;"	v	language:C++
win_result	kernel/blk_drv/hd.c	/^static int win_result(void)$/;"	f	language:C++	file:	signature:(void)
winsize	include/termios.h	/^struct winsize {$/;"	s	language:C++
winsize::ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	language:C++	struct:winsize	access:public
with	boot/setup.S	/^	lidt	idt_48		! load idt with 0,0$/;"	v	language:C++
wpcom	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C++	struct:hd_i_struct	file:	access:public
write	include/linux/tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	language:C++	struct:tty_struct	access:public
write	include/unistd.h	/^int write(int fildes, const char * buf, off_t count);$/;"	p	language:C++	signature:(int fildes, const char * buf, off_t count)
write	kernel/chr_drv/tty_io.c	/^						tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write	kernel/chr_drv/tty_io.c	/^					tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write	kernel/chr_drv/tty_io.c	/^				tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write	kernel/chr_drv/tty_io.c	/^			other_tty->write(other_tty);$/;"	p	language:C++	file:	signature:(other_tty)
write	kernel/chr_drv/tty_io.c	/^			tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write	kernel/chr_drv/tty_io.c	/^		tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write	kernel/chr_drv/tty_ioctl.c	/^				tty->write(tty);$/;"	p	language:C++	file:	signature:(tty)
write_char	kernel/chr_drv/rs_io.s	/^	.long modem_status,write_char,read_char,line_status$/;"	v	language:C++
write_inode	fs/inode.c	/^static void write_inode(struct m_inode * inode)$/;"	f	language:C++	file:	signature:(struct m_inode * inode)
write_inode	fs/inode.c	/^static void write_inode(struct m_inode * inode);$/;"	p	language:C++	file:	signature:(struct m_inode * inode)
write_intr	kernel/blk_drv/hd.c	/^static void write_intr(void)$/;"	f	language:C++	file:	signature:(void)
write_pipe	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	f	language:C++	signature:(struct m_inode * inode, char * buf, int count)
write_pipe	fs/read_write.c	/^extern int write_pipe(struct m_inode * inode, char * buf, int count);$/;"	p	language:C++	file:	signature:(struct m_inode * inode, char * buf, int count)
write_q	include/linux/tty.h	/^	struct tty_queue *write_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_struct::tty_queue	access:public
write_swap_page	include/linux/mm.h	12;"	d	language:C++
write_verify	kernel/fork.c	/^extern void write_verify(unsigned long address);$/;"	p	language:C++	file:	signature:(unsigned long address)
write_verify	mm/memory.c	/^void write_verify(unsigned long address)$/;"	f	language:C++	signature:(unsigned long address)
written	fs/block_dev.c	/^	int written = 0;$/;"	l	language:C++
written	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C++
ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	language:C++	struct:winsize	access:public
ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	language:C++	struct:winsize	access:public
ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	language:C++	struct:winsize	access:public
ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	language:C++	struct:winsize	access:public
x	kernel/chr_drv/console.c	120;"	d	language:C++	file:
x00	boot/setup.S	/^idgenoa:	.byte	0x77, 0x00, 0x66, 0x99$/;"	v	language:C++
x03	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x04	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x07	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x08	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x0a	boot/setup.S	/^		db	0x0d, 0x0a, 0x00$/;"	v	language:C++
x0a	boot/setup.S	/^		db	0x0d, 0x0a, 0x0a, 0x00$/;"	v	language:C++
x0a	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x0b	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x1	kernel/math/add.c	/^	int x1,x2,shift;$/;"	l	language:C++
x10000	boot/bootsect.S	/^! at 0x10000, using BIOS interrupts. $/;"	v	language:C++
x16	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x18	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x1f	boot/setup.S	/^mocirrus:	.byte	0x04,	0x1f, 0x20, 0x22, 0x31$/;"	v	language:C++
x2	kernel/math/add.c	/^	int x1,x2,shift;$/;"	l	language:C++
x20	boot/setup.S	/^mocirrus:	.byte	0x04,	0x1f, 0x20, 0x22, 0x31$/;"	v	language:C++
x21	boot/setup.S	/^moeverex:	.byte	0x0a,	0x03, 0x04, 0x07, 0x08, 0x0a, 0x0b, 0x16, 0x18, 0x21, 0x40$/;"	v	language:C++
x22	boot/setup.S	/^moahead:	.byte	0x05,	0x22, 0x23, 0x24, 0x2f, 0x34$/;"	v	language:C++
x22	boot/setup.S	/^mocirrus:	.byte	0x04,	0x1f, 0x20, 0x22, 0x31$/;"	v	language:C++
x23	boot/setup.S	/^moahead:	.byte	0x05,	0x22, 0x23, 0x24, 0x2f, 0x34$/;"	v	language:C++
x23	boot/setup.S	/^moati:		.byte	0x02,	0x23, 0x33 $/;"	v	language:C++
x23	boot/setup.S	/^motseng:	.byte	0x05,	0x26, 0x2a, 0x23, 0x24, 0x22$/;"	v	language:C++
x24	boot/setup.S	/^moahead:	.byte	0x05,	0x22, 0x23, 0x24, 0x2f, 0x34$/;"	v	language:C++
x24	boot/setup.S	/^motseng:	.byte	0x05,	0x26, 0x2a, 0x23, 0x24, 0x22$/;"	v	language:C++
x26	boot/setup.S	/^motseng:	.byte	0x05,	0x26, 0x2a, 0x23, 0x24, 0x22$/;"	v	language:C++
x2a	boot/setup.S	/^motseng:	.byte	0x05,	0x26, 0x2a, 0x23, 0x24, 0x22$/;"	v	language:C++
x2f	boot/setup.S	/^moahead:	.byte	0x05,	0x22, 0x23, 0x24, 0x2f, 0x34$/;"	v	language:C++
x40	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	v	language:C++
x41	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	v	language:C++
x42	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	v	language:C++
x425b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x415b5b1b,0x425b5b1b,0x435b5b1b,0x445b5b1b$/;"	v	language:C++
x43	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	v	language:C++
x435b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x415b5b1b,0x425b5b1b,0x435b5b1b,0x445b5b1b$/;"	v	language:C++
x44	boot/setup.S	/^movideo7:	.byte	0x06,	0x40, 0x43, 0x44, 0x41, 0x42, 0x45$/;"	v	language:C++
x465b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x455b5b1b,0x465b5b1b,0x475b5b1b,0x485b5b1b$/;"	v	language:C++
x475b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x455b5b1b,0x465b5b1b,0x475b5b1b,0x485b5b1b$/;"	v	language:C++
x4a5b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x495b5b1b,0x4a5b5b1b,0x4b5b5b1b,0x4c5b5b1b$/;"	v	language:C++
x4b5b5b1b	kernel/chr_drv/keyboard.S	/^	.long 0x495b5b1b,0x4a5b5b1b,0x4b5b5b1b,0x4c5b5b1b$/;"	v	language:C++
x50	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x50	boot/setup.S	/^novid7:	pop	ds	! Here could be code to support standard 80x50,80x30$/;"	v	language:C++
x501e	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x502b	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	v	language:C++
x503c	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x503c	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x503c	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	v	language:C++
x503c	boot/setup.S	/^dscvideo7:	.word	0x502b, 0x503c, 0x643c, 0x8419, 0x842c, 0x841c$/;"	v	language:C++
x5042	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x51	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x52	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x55	boot/setup.S	/^moparadise:	.byte	0x02,	0x55, 0x54$/;"	v	language:C++
x57	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x58	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x58	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x59	boot/setup.S	/^motrident:	.byte	0x07,	0x50, 0x51, 0x52, 0x57, 0x58, 0x59, 0x5a$/;"	v	language:C++
x5a	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x60	boot/setup.S	/^	out	#0x60,al$/;"	v	language:C++
x60	boot/setup.S	/^mocandt:	.byte	0x02,	0x60, 0x61$/;"	v	language:C++
x60	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x61	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x62	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x63	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x64	boot/setup.S	/^	out	#0x64,al$/;"	v	language:C++
x64	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x641b	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x6428	boot/setup.S	/^dsctseng:	.word	0x503c, 0x6428, 0x8419, 0x841c, 0x842c$/;"	v	language:C++
x642a	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x642b	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x643c	boot/setup.S	/^dscvideo7:	.word	0x502b, 0x503c, 0x643c, 0x8419, 0x842c, 0x841c$/;"	v	language:C++
x644b	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x66	boot/setup.S	/^idgenoa:	.byte	0x77, 0x00, 0x66, 0x99$/;"	v	language:C++
x72	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x74	boot/setup.S	/^mogenoa:	.byte	0x0a,	0x58, 0x5a, 0x60, 0x61, 0x62, 0x63, 0x64, 0x72, 0x74, 0x78$/;"	v	language:C++
x8419	boot/setup.S	/^dscahead:	.word	0x842c, 0x8419, 0x841c, 0xa032, 0x5042$/;"	v	language:C++
x8419	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x8419	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x8419	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	v	language:C++
x8419	boot/setup.S	/^dsctseng:	.word	0x503c, 0x6428, 0x8419, 0x841c, 0x842c$/;"	v	language:C++
x8419	boot/setup.S	/^dscvideo7:	.word	0x502b, 0x503c, 0x643c, 0x8419, 0x842c, 0x841c$/;"	v	language:C++
x841c	boot/setup.S	/^dscahead:	.word	0x842c, 0x8419, 0x841c, 0xa032, 0x5042$/;"	v	language:C++
x841c	boot/setup.S	/^dsctseng:	.word	0x503c, 0x6428, 0x8419, 0x841c, 0x842c$/;"	v	language:C++
x841d	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x841e	boot/setup.S	/^dsccirrus:	.word	0x8419, 0x842c, 0x841e, 0x6425$/;"	v	language:C++
x841e	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	v	language:C++
x8420	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x842b	boot/setup.S	/^dsctrident:	.word 	0x501e, 0x502b, 0x503c, 0x8419, 0x841e, 0x842b, 0x843c$/;"	v	language:C++
x842c	boot/setup.S	/^dsccirrus:	.word	0x8419, 0x842c, 0x841e, 0x6425$/;"	v	language:C++
x842c	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
x842c	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x842c	boot/setup.S	/^dscvideo7:	.word	0x502b, 0x503c, 0x643c, 0x8419, 0x842c, 0x841c$/;"	v	language:C++
x843c	boot/setup.S	/^dscgenoa:	.word	0x5020, 0x642a, 0x8419, 0x841d, 0x8420, 0x842c, 0x843c, 0x503c, 0x5042, 0x644b$/;"	v	language:C++
x90000	boot/bootsect.S	/^! iself out of the way to address 0x90000, and jumps there.$/;"	v	language:C++
xa032	boot/setup.S	/^dscahead:	.word	0x842c, 0x8419, 0x841c, 0xa032, 0x5042$/;"	v	language:C++
xa040	boot/setup.S	/^dsceverex:	.word	0x5022, 0x503c, 0x642b, 0x644b, 0x8419, 0x842c, 0x501e, 0x641b, 0xa040, 0x841e$/;"	v	language:C++
y	kernel/chr_drv/console.c	121;"	d	language:C++	file:
year	kernel/mktime.c	/^	int year;$/;"	l	language:C++
ze	include/linux/math_emu.h	/^	int ze:1;$/;"	m	language:C++	struct:swd	access:public
